<?php namespace ZN\ViewObjects\Sheet\Helpers;

use ZN\ViewObjects\SheetTrait;
use CallController;

class Shadow extends CallController implements ShadowInterface
{
    //--------------------------------------------------------------------------------------------------------
    //
    // Author     : Ozan UYKUN <ozanbote@gmail.com>
    // Site       : www.znframework.com
    // License    : The MIT License
    // Copyright  : (c) 2012-2016, znframework.com
    //
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    // Style Sheet Trait
    //--------------------------------------------------------------------------------------------------------
    //
    // methods
    //
    //--------------------------------------------------------------------------------------------------------
    use SheetTrait;

    //--------------------------------------------------------------------------------------------------------
    // Params
    //--------------------------------------------------------------------------------------------------------
    //
    // @var array
    //
    //--------------------------------------------------------------------------------------------------------
    protected $params = [];

    //--------------------------------------------------------------------------------------------------------
    // X
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $val
    //
    //--------------------------------------------------------------------------------------------------------
    public function x(String $val) : Shadow
    {
        if( is_numeric($val) )
        {
            $val = $val."px";
        }

        $this->params['horizontal'] = $val;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Horizontal
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $val
    //
    //--------------------------------------------------------------------------------------------------------
    public function horizontal(String $val) : Shadow
    {
        $this->x($val);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Y
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $val
    //
    //--------------------------------------------------------------------------------------------------------
    public function y(String $val) : Shadow
    {
        if( is_numeric($val) )
        {
            $val = $val."px";
        }

        $this->params['vertical'] = $val;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Vertical
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $val
    //
    //--------------------------------------------------------------------------------------------------------
    public function vertical(String $val) : Shadow
    {
        $this->y($val);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Blur
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $val
    //
    //--------------------------------------------------------------------------------------------------------
    public function blur(String $val) : Shadow
    {
        if( is_numeric($val) )
        {
            $val = $val."px";
        }

        $this->params['blur'] = $val;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Diffusion
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $val
    //
    //--------------------------------------------------------------------------------------------------------
    public function diffusion(String $val) : Shadow
    {
        if( is_numeric($val) )
        {
            $val = $val."px";
        }

        $this->params['spread'] = $val;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Spread
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $val
    //
    //--------------------------------------------------------------------------------------------------------
    public function spread(String $val) : Shadow
    {
        $this->diffusion($val);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Color
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $val
    //
    //--------------------------------------------------------------------------------------------------------
    public function color(String $val) : Shadow
    {
        if( is_numeric($val) )
        {
            $val = "#".$val;
        }

        $this->params['color'] = $val;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Type
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $val
    //
    //--------------------------------------------------------------------------------------------------------
    public function type(String $val = 'box') : Shadow
    {
        $this->params['type'] = $val;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Create
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $type
    //
    //--------------------------------------------------------------------------------------------------------
    public function create(String $type = 'box') : String
    {
        $str  = $this->selector."{".EOL;
        $str .= $this->attr.EOL;

        if( isset($this->params['type']) )
        {
            $type = $this->params['type'];
        }

        $x          = $this->params['horizontal'] ?? 0;
        $y          = $this->params['vertical']   ?? 0;
        $blur       = $this->params['blur']       ?? 0;
        $diffusion  = $this->params['spread']     ?? 0;
        $color      = $this->params['color']      ?? 0;

        if( $type === 'box' )
        {
            $shadow = "$type-shadow:$x $y $blur $diffusion $color;".EOL;
        }
        else
        {
            $shadow = "$type-shadow:$x $y $blur $color;".EOL;
        }

        $browser = '';

        foreach( $this->browsers as $val )
        {
            $str .= $val.$shadow.EOL;
        }

        $str .= "}".EOL;

        $this->_defaultVariable();

        return $this->_tag($str);
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected Default Variable
    //--------------------------------------------------------------------------------------------------------
    //
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    protected function _defaultVariable()
    {
        if( ! empty($this->attr) )          $this->attr = NULL;
        if( ! empty($this->params) )        $this->params = [];
        if( $this->selector !== 'this' )    $this->selector = 'this';
    }
}
