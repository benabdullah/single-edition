<?php namespace ZN\ViewObjects;

use CallController, JQ;

class InternalJS extends CallController implements InternalJSInterface
{
    //--------------------------------------------------------------------------------------------------------
    //
    // Author     : Ozan UYKUN <ozanbote@gmail.com>
    // Site       : www.znframework.com
    // License    : The MIT License
    // Copyright  : (c) 2012-2016, znframework.com
    //
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    // Interval
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $time
    // @param  string $code
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function interval(String $time, String $code, Bool $comma = true) : String
    {
        return $this->_jsFunc('setInterval', "$code, $time", $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // Timeout
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $time
    // @param  string $code
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function timeout(String $time, String $code, Bool $comma = true) : String
    {
        return $this->_jsFunc('setTimeout', "$code, $time", $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // indexOf
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $find
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function indexOf(String $str, String $find, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).indexOf", $find, $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // indexOf
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $find
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function arrayIndexOf(String $str, String $find, Bool $comma = true) : String
    {
        return $this->_jsFunc("Array($str).indexOf", $find, $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // Join
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $find
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function arrayJoin(String $str, String $find, Bool $comma = true) : String
    {
        return $this->_jsFunc("Array($str).join", $find, $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // lastIndexOf
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $find
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function lastIndexOf(String $str, String $find, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).lastIndexOf", $find, $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // lastIndexOf
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $find
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function arrayLastIndexOf(String $str, String $find, Bool $comma = true) : String
    {
        return $this->_jsFunc("Array($str).lastIndexOf", $find, $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // arraySplice
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $p1
    // @param  string $p2
    // @param  string $p3
    // @param  string $p4
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function arraySplice(String $str, String $p1 = NULL, String $p2 = NULL, String $p3 = NULL, String $p4 = NULL, Bool $comma = true) : String
    {
        $param[] = $p1;
        $param[] = $p2;
        $param[] = $p3;
        $param[] = $p4;

        return $this->_jsFunc("Array($str).splice", implode(",", array_diff($param, [''])), $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // length
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $find
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function length(String $str, Bool $comma = true) : String
    {
        return "String($str).length".($comma === true ? ';' : '');
    }

    //--------------------------------------------------------------------------------------------------------
    // length
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $find
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function arrayLength(String $str, Bool $comma = true) : String
    {
        return "Array($str).length".($comma === true ? ';' : '');
    }

    //--------------------------------------------------------------------------------------------------------
    // arrayUnshift
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $find
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function arrayUnshift(String $str, String $find, Bool $comma = true) : String
    {
        return $this->_jsFunc("Array($str).unshift", $find, $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // arrayUnshift
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $find
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function arraySort(String $str, String $find, Bool $comma = true) : String
    {
        return $this->_jsFunc("Array($str).sort", $find, $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // pop
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $find
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function arrayPop(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("Array($str).pop", $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // Reverse
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $find
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function arrayReverse(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("Array($str).reverse", $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // toString
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $find
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function arrayToString(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("Array($str).toString", $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // Shift
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $find
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function arrayShift(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("Array($str).shift", $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // push
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $find
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function arrayPush(String $str, String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Array($str).push", $param, $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // search
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $find
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function search(String $str, String $find, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).search", $find, $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // slice
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function slice(String $str, String $p1, String $p2 = NULL, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).slice", "$p1, $p2" , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // slice
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function arraySlice(String $str, String $p1, String $p2 = NULL, Bool $comma = true) : String
    {
        return $this->_jsFunc("Array($str).slice", "$p1, $p2" , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // substr
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function substr(String $str, String $p1, String $p2 = NULL, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).substr", "$p1, $p2" , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // substring
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function substring(String $str, String $p1, String $p2 = NULL, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).substring", "$p1, $p2" , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // replace
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function replace(String $str, String $p1, String $p2 = NULL, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).replace", "$p1, $p2" , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // Upper Case
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function upperCase(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).toUpperCase", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // Lowe Case
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function lowerCase(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).toLowerCase", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // concat
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function concat(String $str, String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).concat", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // concat
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function arrayConcat(String $str, String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Array($str).concat", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // charAt
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function charAt(String $str, String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).charAt", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // charCodeAt
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function codeAt(String $str, String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).charCodeAt", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // split
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function split(String $str, String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).split", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // localeCompare
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function localeCompare(String $str, String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).localeCompare", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // match
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function match(String $str, String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).match", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // trim
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function trim(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).trim", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // anchor
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function anchor(String $str, String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).anchor", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // fontcolor
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function fontColor(String $str, String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).fontcolor", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // fontsize
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function fontSize(String $str, String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).fontsize", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // link
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function link(String $str, String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).link", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // big
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function big(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).big", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // small
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function small(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).small", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // strike
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function strike(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).strike", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // sub
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function sub(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).sub", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // sup
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function sup(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).sup", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // toString
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function toString(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("Number($str).toString", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // valueOf
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function valueOf(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("Number($str).valueOf", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // toExponential
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function toExponential(String $str, String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Number($str).toExponential", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // toFixed
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function toFixed(String $str, String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Number($str).toFixed", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // toPrecision
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function toPrecision(String $str, String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Number($str).toPrecision", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // sqrt
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function sqrt(String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.sqrt", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // abs
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function abs(String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.abs", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // acos
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function acos(String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.acos", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // asin
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function asin(String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.asin", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // atan
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function atan(String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.atan", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // atan2
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function atan2(String $p1, String $p2 = NULL, Bool $comma = true) : String
    {
        $param[] = $p1;
        $param[] = $p2;

        return $this->_jsFunc("Math.atan2", "$p1, $p2" , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // ceil
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function ceil(String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.ceil", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // cos
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function cos(String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.cos", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // exp
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function exp(String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.exp", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // floor
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function floor(String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.floor", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // log
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function log(String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.log", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // max
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function max(String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.max", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // round
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function round(String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.round", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // sin
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function sin(String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.sin", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // tan
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function tan(String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.tan", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // random
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function random(Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.random", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // min
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function min(String $param, Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.min", $param , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // pow
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function pow(String $p1, String $p2 = NULL, Bool $comma = true) : String
    {
        $param[] = $p1;
        $param[] = $p2;

        return $this->_jsFunc("Math.pow", "$p1, $p2" , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // pi
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function pi(Bool $comma = true) : String
    {
        return $this->_jsFunc("Math.pi", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // blink
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function blink(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).blink", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // bold
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function bold(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).bold", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // fixed
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function fixed(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).fixed", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // italic
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function italic(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("String($str).italics", '' , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // fromCharCode
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $str
    // @param  string $param
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function ascii(String $str, Bool $comma = true) : String
    {
        return $this->_jsFunc("String.fromCharCode", $str , $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // var
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $varname
    // @param  string $value
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function var(String $varname, String $value) : String
    {
        return $this->_var($varname, $value, true);
    }

    //--------------------------------------------------------------------------------------------------------
    // varch
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $varname
    // @param  string $value
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function varch(String $variable, String $value = NULL) : String
    {
        echo  $this->_var($variable, $value, false);
    }

    //--------------------------------------------------------------------------------------------------------
    // vardec
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $variable
    // @param  int    $decrement
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function vardec(String $variable, Int $decrement = 1) : String
    {
        return $variable . ' = ' . $variable . ' - ' . $decrement . ';' . EOL;
    }

    //--------------------------------------------------------------------------------------------------------
    // varin
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $variable
    // @param  int    $decrement
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function varinc(String $variable, Int $decrement = 1) : String
    {
        return $variable . ' = ' . $variable . ' + ' . $decrement . ';' . EOL;
    }

    //--------------------------------------------------------------------------------------------------------
    // Function
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $varname
    // @param  string $value
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function function(String $functionName = NULL, $parameters = NULL, $function = NULL) : String
    {
        if( ( is_scalar($parameters) || $parameters === NULL ) && $function === NULL )
        {
            return $functionName . '(' . $parameters . ');' . EOL;
        }

        $params = $parameters;

        if( is_callable($parameters) )
        {
            $params   = '';
            $function = $parameters;
        }

        $str  = 'function ' . $functionName . '(' . $params . '){' . EOL;
        $str .= \Buffer::callback($function);
        $str .= '}' . EOL;

        return $str;
    }

    //--------------------------------------------------------------------------------------------------------
    // Alert
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $code
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function alert(String $code, Bool $comma = true) : String
    {
        return $this->_jsFunc('alert', JQ::stringControl($code), $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // Write
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $code
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function write(String $code, Bool $comma = true) : String
    {
        return $this->_jsFunc('document.write', JQ::stringControl($code), $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // Prompt
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $code
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function prompt(String $code, Bool $comma = true) : String
    {
        return $this->_jsFunc('prompt', JQ::stringControl($code), $comma);
    }

    //--------------------------------------------------------------------------------------------------------
    // Confirm
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $code
    // @param  string $true
    // @param  string $false
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function confirm(String $code, $true = NULL, $false = NULL) : String
    {
         $confirm = $this->_jsFunc('confirm', JQ::stringControl($code), false);

         if( empty($true) )
         {
             return "$confirm;";
         }

         return $this->if("$confirm === true", $true).$this->else($false);
    }

    //--------------------------------------------------------------------------------------------------------
    // If Clause -> 4.2.8[edited]
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $condition
    // @param  string $code
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function if(String $condition, $code = NULL , $elseCode = NULL) : String
    {
        $elseCode = ! empty($elseCode) ? $this->else($elseCode) : '';

        return $this->_clause('if', $condition, $code).$elseCode;
    }

    //--------------------------------------------------------------------------------------------------------
    // Else If Clause -> 4.2.8[edited]
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $condition
    // @param  string $code
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function elseIf(String $condition, $code = NULL) : String
    {
        return $this->_clause('else if', $condition, $code);
    }

    //--------------------------------------------------------------------------------------------------------
    // Else Clause -> 4.2.8[edited]
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $code
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function else($code = NULL) : String
    {
        if( is_callable($code) )
        {
            $code = \Buffer::callback($code);
        }

        return "else" . EOL . "{" . EOL . HT . $code . EOL . "}";
    }

    //--------------------------------------------------------------------------------------------------------
    // break
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  void
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function break() : String
    {
        return 'break;' . EOL;
    }

    //--------------------------------------------------------------------------------------------------------
    // return
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $data
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function return(String $data = NULL) : String
    {
        return 'return' . ( ! empty($data) ? ' '.$data : '' ) . ';' . EOL;
    }

    //--------------------------------------------------------------------------------------------------------
    // For Loop -> 4.2.8[edited]
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $condition
    // @param  string $code
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function for(String $condition, $code = NULL) : String
    {
        return $this->_clause('for', $condition, $code);
    }

    //--------------------------------------------------------------------------------------------------------
    // While Loop -> 4.2.8[edited]
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $condition
    // @param  string $code
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function while(String $condition, $code = NULL) : String
    {
        return $this->_clause('while', $condition, $code);
    }

    //--------------------------------------------------------------------------------------------------------
    // Do While Loop -> 4.2.8[edited]
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $condition
    // @param  string $code
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function doWhile(String $condition, $code = NULL) : String
    {
        if( is_callable($code) )
        {
            $code = \Buffer::callback($code);
        }

        return "do" . EOL . "{" . EOL . HT . $code . EOL ."}while(".$condition.");";
    }

    //--------------------------------------------------------------------------------------------------------
    // Switch Clause -> 4.2.8[edited]
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $condition
    // @param  array  $cases
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    public function switch(String $condition, Array $cases) : String
    {
        $clause = '';

        if( ! empty($cases) ) foreach( $cases as $case => $code )
        {
            if( stristr(',', $case) )
            {
                if( $case !== 'default' )
                {
                    $clause .= "case $case : $code break; ";
                }
                else
                {
                    $clause .= "$case : $code";
                }
            }
            else
            {
                $multiple = array_map('trim', explode(',', $case));

                if( ! empty($multiple) ) foreach( $multiple as $val )
                {
                    $clause .= "case $val : ";
                }

                $clause .= "$code break; ";
            }
        }

        return "switch($condition){".$clause."}";
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected Js Func
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $func
    // @param  string $code
    // @param  bool   $comma
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    protected function _jsFunc($func, $code, $comma = false)
    {
        return "$func($code)".($comma === true ? ";" : "");
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected Clause
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $type
    // @param  string $condition
    // @param  string $code
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    protected function _clause($type = '', $condition = '', $code = '')
    {
        $eol = EOL;

        if( is_callable($code) )
        {
            $code = \Buffer::callback($code);
        }

        return $this->_jsFunc($type, $condition, false). EOL . "{" . EOL . HT . $code . EOL . "}" . EOL;
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected Var
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $variable
    // @param  string $value
    // @param  bool   $var
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    protected function _var($variable, $value, $var = false)
    {
        return ( $var === true ? 'var ' : '' ) . $this->_equalControl($variable) . ' ' . JQ::stringControl($value) . ';' . EOL;
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected Equal Control
    //--------------------------------------------------------------------------------------------------------
    //
    // @param  string $column
    // @return string
    //
    //--------------------------------------------------------------------------------------------------------
    protected function _equalControl($column)
    {
        $control = trim($column);

        if( strstr($column, '.') )
        {
            $control = str_replace('.', '', $control);
        }

        if( preg_match('/^\w+$/', $control) )
        {
            $column .= ' = ';
        }

        return $column;
    }
}
