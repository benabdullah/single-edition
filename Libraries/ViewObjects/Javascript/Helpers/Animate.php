<?php namespace ZN\ViewObjects\Javascript\Helpers;

use ZN\ViewObjects\JqueryTrait;
use CallController, JQ;

class Animate extends CallController
{
    //--------------------------------------------------------------------------------------------------------
    //
    // Author     : Ozan UYKUN <ozanbote@gmail.com>
    // Site       : www.znframework.com
    // License    : The MIT License
    // Copyright  : (c) 2012-2016, znframework.com
    //
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    // Jquery Trait
    //--------------------------------------------------------------------------------------------------------
    //
    // @methods
    //
    //--------------------------------------------------------------------------------------------------------
    use JqueryTrait;

    //--------------------------------------------------------------------------------------------------------
    // Easing
    //--------------------------------------------------------------------------------------------------------
    //
    // @var string
    //
    //--------------------------------------------------------------------------------------------------------
    protected $easing = [];

    //--------------------------------------------------------------------------------------------------------
    // Attr
    //--------------------------------------------------------------------------------------------------------
    //
    // @var string
    //
    //--------------------------------------------------------------------------------------------------------
    protected $attr = '';

    //--------------------------------------------------------------------------------------------------------
    // Speed
    //--------------------------------------------------------------------------------------------------------
    //
    // @param scalar $duration
    //
    //--------------------------------------------------------------------------------------------------------
    public function speed(String $duration) : Animate
    {
        $this->duration($duration);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Duration
    //--------------------------------------------------------------------------------------------------------
    //
    // @param scalar $duration
    //
    //--------------------------------------------------------------------------------------------------------
    public function duration(String $duration) : Animate
    {
        $this->easing['duration'] = $duration;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Queue
    //--------------------------------------------------------------------------------------------------------
    //
    // @param scalar $queue
    //
    //--------------------------------------------------------------------------------------------------------
    public function queue(String $queue) : Animate
    {
        if( is_numeric($queue) )
        {
            $queue = $this->_boolToStr($queue);
        }
        elseif( is_string($queue) )
        {
            $queue = $queue;
        }

        $this->easing['queue'] = $queue;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Attr
    //--------------------------------------------------------------------------------------------------------
    //
    // @param array $attr
    //
    //--------------------------------------------------------------------------------------------------------
    public function attr(Array $attr) : Animate
    {
        $this->attr = $this->_object($attr);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Easing
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $easing
    //
    //--------------------------------------------------------------------------------------------------------
    public function easing(String $easing) : Animate
    {
        $this->easing['easing'] = $easing;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Special Easing
    //--------------------------------------------------------------------------------------------------------
    //
    // @param array $specialEasing
    //
    //--------------------------------------------------------------------------------------------------------
    public function specialEasing(Array $specialEasing) : Animate
    {
        $this->easing['specialEasing'] = $this->_object($specialEasing);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Step
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $step
    //
    //--------------------------------------------------------------------------------------------------------
    public function step(String $step) : Animate
    {
        $this->easing['step'] = JQ::function('now, fx', $step);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Comp
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $comp
    //
    //--------------------------------------------------------------------------------------------------------
    public function complete(String $comp) : Animate
    {
        $this->easing['complete'] = JQ::function('', $comp);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Completed
    //--------------------------------------------------------------------------------------------------------
    //
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    public function completed() : String
    {
        $attr = [];

        $animate = JQ::property('animate', [$this->attr, $this->callback, $this->_object($this->easing)]);

        $this->_defaultVariable();

        return $animate;
    }

    //--------------------------------------------------------------------------------------------------------
    // Create
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string variadic $args
    //
    //--------------------------------------------------------------------------------------------------------
    public function create(...$args) : String
    {
        $combineAnimation = $args;

        $animate  = EOL."\t".JQ::selector($this->selector);

        $animate .= $this->completed();

        if( ! empty($combineAnimation) ) foreach( $combineAnimation as $animation )
        {
            $animate .= $animation;
        }

        $animate .= ";".EOL;

        return $this->_tag($animate);
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected
    //--------------------------------------------------------------------------------------------------------
    protected function _defaultVariable()
    {
        $this->easing = [];
        $this->callback = '';
        $this->selector = 'this';
        $this->attr = '';
    }
}
