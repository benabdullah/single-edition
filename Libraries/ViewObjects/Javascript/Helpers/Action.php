<?php namespace ZN\ViewObjects\Javascript\Helpers;

use ZN\ViewObjects\JqueryTrait;
use Support;

class Action
{
    //--------------------------------------------------------------------------------------------------------
    //
    // Author     : Ozan UYKUN <ozanbote@gmail.com>
    // Site       : www.znframework.com
    // License    : The MIT License
    // Copyright  : (c) 2012-2016, znframework.com
    //
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    // Jquery Trait
    //--------------------------------------------------------------------------------------------------------
    //
    // @methods
    //
    //--------------------------------------------------------------------------------------------------------
    use JqueryTrait;

    //--------------------------------------------------------------------------------------------------------
    // Type
    //--------------------------------------------------------------------------------------------------------
    //
    // @var string
    //
    //--------------------------------------------------------------------------------------------------------
    protected $type = 'show';

    //--------------------------------------------------------------------------------------------------------
    // Speed
    //--------------------------------------------------------------------------------------------------------
    //
    // @var string
    //
    //--------------------------------------------------------------------------------------------------------
    protected $speed = '';

    //--------------------------------------------------------------------------------------------------------
    // Easing
    //--------------------------------------------------------------------------------------------------------
    //
    // @var string
    //
    //--------------------------------------------------------------------------------------------------------
    protected $easing = '';

    //--------------------------------------------------------------------------------------------------------
    // Properties
    //--------------------------------------------------------------------------------------------------------
    //
    // @var array
    //
    //--------------------------------------------------------------------------------------------------------
    protected $effects =
    [
        'show'   , 'hide'     , 'fadein'     , 'fadeout', 'fadeto',
        'slideup', 'slidedown', 'slidetoggle'
    ];

    //--------------------------------------------------------------------------------------------------------
    // Magic Call
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $method
    // @param array  $parameters
    //
    //--------------------------------------------------------------------------------------------------------
    public function __call($method, $parameters)
    {
        $realMethodName = $method;
        $method         = strtolower($method);

        if( in_array($method, $this->effects) )
        {
            $this->_effect($realMethodName, ...$parameters);

            return $this->create();
        }
        else
        {
            Support::classMethod('Jquery::action()', $realMethodName);
        }
    }

    //--------------------------------------------------------------------------------------------------------
    // Speed
    //--------------------------------------------------------------------------------------------------------
    //
    // @param scalar $speed
    //
    //--------------------------------------------------------------------------------------------------------
    public function speed(String $speed) : Action
    {
        $this->speed = $speed;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Duration
    //--------------------------------------------------------------------------------------------------------
    //
    // @param scalar $speed
    //
    //--------------------------------------------------------------------------------------------------------
    public function duration(String $speed) : Action
    {
        $this->speed($speed);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Easing
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $data
    //
    //--------------------------------------------------------------------------------------------------------
    public function easing(String $data) : Action
    {
        $this->easing = $data;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Type
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $type
    //
    //--------------------------------------------------------------------------------------------------------
    public function type(String $type = 'show') : Action
    {
        $this->type = $type;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Complete
    //--------------------------------------------------------------------------------------------------------
    //
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    public function complete() : String
    {
        $event = \JQ::property($this->type, [$this->speed, $this->easing, $this->callback]);

        $this->_defaultVariable();

        return $event;
    }

    //--------------------------------------------------------------------------------------------------------
    // Create
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string variadic $args
    //
    //--------------------------------------------------------------------------------------------------------
    public function create(...$args) : String
    {
        $combineEffect = $args;

        $event  = EOL.\JQ::selector($this->selector);
        $event .= $this->complete();

        if( ! empty($combineEffect) ) foreach($combineEffect as $effect)
        {
            $event .= $effect;
        }

        $event .= ";";

        return $this->_tag($event);
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected
    //--------------------------------------------------------------------------------------------------------
    protected function _effect($type = '', $selector = '', $speed = '', $callback = '')
    {
        $this->type = $type;

        if( ! empty($selector))
        {
            $this->selector($selector);
        }

        if( ! empty($speed))
        {
            $this->speed($speed);
        }

        if( ! empty($callback))
        {
            $this->callback('e', $callback);
        }
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected
    //--------------------------------------------------------------------------------------------------------
    protected function _defaultVariable()
    {
        $this->selector = 'this';
        $this->type     = 'show';
        $this->callback = '';
        $this->speed    = '';
        $this->easing   = '';
    }
}
