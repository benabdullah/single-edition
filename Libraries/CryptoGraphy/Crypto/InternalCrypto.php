<?php namespace ZN\CryptoGraphy;

use CLController, DriverAbility, Support;

class InternalCrypto extends CLController implements InternalCryptoInterface
{
    //--------------------------------------------------------------------------------------------------------
    //
    // Author     : Ozan UYKUN <ozanbote@gmail.com>
    // Site       : www.znframework.com
    // License    : The MIT License
    // Copyright  : (c) 2012-2016, znframework.com
    //
    //--------------------------------------------------------------------------------------------------------

    use DriverAbility;

    //--------------------------------------------------------------------------------------------------------
    // Consts
    //--------------------------------------------------------------------------------------------------------
    //
    // @const string
    //
    //--------------------------------------------------------------------------------------------------------
    const config = 'CryptoGraphy:crypto';
    const driver =
    [
        'options'   => ['hash', 'mhash', 'phash', 'openssl', 'mcrypt'],
        'namespace' => 'ZN\CryptoGraphy\Drivers'
    ];

    //--------------------------------------------------------------------------------------------------------
    // Encrypt
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $data
    // @param array  $settings
    //
    //--------------------------------------------------------------------------------------------------------
    public function encrypt(String $data,  Array $settings = []) : String
    {
        return $this->driver->encrypt($data, $settings);
    }

    //--------------------------------------------------------------------------------------------------------
    // Decrypt
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $data
    // @param array  $settings
    //
    //--------------------------------------------------------------------------------------------------------
    public function decrypt(String $data, Array $settings = []) : String
    {
        return $this->driver->decrypt($data, $settings);
    }

    //--------------------------------------------------------------------------------------------------------
    // Keygen
    //--------------------------------------------------------------------------------------------------------
    //
    // @param numeric $length
    //
    //--------------------------------------------------------------------------------------------------------
    public function keygen(Int $length = 8) : String
    {
        return $this->driver->keygen($length);
    }
}
