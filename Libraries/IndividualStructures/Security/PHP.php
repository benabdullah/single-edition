<?php namespace ZN\IndividualStructures\Security;

class PHP implements PHPInterface
{
    //--------------------------------------------------------------------------------------------------------
    //
    // Author     : Ozan UYKUN <ozanbote@gmail.com>
    // Site       : www.znframework.com
    // License    : The MIT License
    // Copyright  : (c) 2012-2016, znframework.com
    //
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    // PHP Tag Chars
    //--------------------------------------------------------------------------------------------------------
    //
    // @var array
    //
    //--------------------------------------------------------------------------------------------------------
    protected $phpTagChars = 
    [
        '<?' => '&#60;&#63;',
        '?>' => '&#63;&#62;'
    ];

    //--------------------------------------------------------------------------------------------------------
    // PHP Tag Encode
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $str
    //
    //--------------------------------------------------------------------------------------------------------
    public function encode(String $str) : String
    {
        return str_replace(array_keys($this->phpTagChars), array_values($this->phpTagChars), $str);
    }

    //--------------------------------------------------------------------------------------------------------
    // PHP Tag Decode
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $str
    //
    //--------------------------------------------------------------------------------------------------------
    public function decode(String $str) : String
    {
        return str_replace(array_values($this->phpTagChars), array_keys($this->phpTagChars), $str);
    }

    //--------------------------------------------------------------------------------------------------------
    // PHP Tag Clean
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $str
    //
    //--------------------------------------------------------------------------------------------------------
    public function tagClean(String $str) : String
    {
        return str_ireplace(['<?php', '<?', '?>'], NULL, $str);
    }
}
