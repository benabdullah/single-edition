<?php
//--------------------------------------------------------------------------------------------------
// This file automatically created and updated
//--------------------------------------------------------------------------------------------------
$classMap['classes']['zn\cryptography\cryptomapping'] = 'Libraries\CryptoGraphy\Crypto\CryptoMapping.php';
$classMap['classes']['zn\cryptography\cryptounittest'] = 'Libraries\CryptoGraphy\Crypto\CryptoUnitTest.php';
$classMap['classes']['zn\cryptography\drivers\hashdriver'] = 'Libraries\CryptoGraphy\Crypto\Drivers\Hash.php';
$classMap['classes']['zn\cryptography\drivers\mcryptdriver'] = 'Libraries\CryptoGraphy\Crypto\Drivers\Mcrypt.php';
$classMap['classes']['zn\cryptography\drivers\mhashdriver'] = 'Libraries\CryptoGraphy\Crypto\Drivers\Mhash.php';
$classMap['classes']['zn\cryptography\drivers\openssldriver'] = 'Libraries\CryptoGraphy\Crypto\Drivers\Openssl.php';
$classMap['classes']['zn\cryptography\drivers\phashdriver'] = 'Libraries\CryptoGraphy\Crypto\Drivers\Phash.php';
$classMap['classes']['zn\cryptography\internalcrypto'] = 'Libraries\CryptoGraphy\Crypto\InternalCrypto.php';
$classMap['classes']['crypto'] = 'Resources\Statics\CryptoGraphy\Crypto\InternalCrypto.php';
$classMap['classes']['zn\cryptography\internalcryptointerface'] = 'Libraries\CryptoGraphy\Crypto\InternalCryptoInterface.php';
$classMap['classes']['zn\cryptography\encode\encodeextends'] = 'Libraries\CryptoGraphy\Encode\EncodeExtends.php';
$classMap['classes']['zn\cryptography\encodeunittest'] = 'Libraries\CryptoGraphy\Encode\EncodeUnitTest.php';
$classMap['classes']['zn\cryptography\encode\goldenalgorithm'] = 'Libraries\CryptoGraphy\Encode\GoldenAlgorithm.php';
$classMap['classes']['zn\cryptography\encode\goldenalgorithminterface'] = 'Libraries\CryptoGraphy\Encode\GoldenAlgorithmInterface.php';
$classMap['classes']['zn\cryptography\internalencode'] = 'Libraries\CryptoGraphy\Encode\InternalEncode.php';
$classMap['classes']['encode'] = 'Resources\Statics\CryptoGraphy\Encode\InternalEncode.php';
$classMap['classes']['zn\cryptography\internalencodeinterface'] = 'Libraries\CryptoGraphy\Encode\InternalEncodeInterface.php';
$classMap['classes']['zn\cryptography\encode\randompassword'] = 'Libraries\CryptoGraphy\Encode\RandomPassword.php';
$classMap['classes']['zn\cryptography\encode\randompasswordinterface'] = 'Libraries\CryptoGraphy\Encode\RandomPasswordInterface.php';
$classMap['classes']['zn\cryptography\encode\superalgorithm'] = 'Libraries\CryptoGraphy\Encode\SuperAlgorithm.php';
$classMap['classes']['zn\cryptography\encode\superalgorithminterface'] = 'Libraries\CryptoGraphy\Encode\SuperAlgorithmInterface.php';
$classMap['classes']['zn\cryptography\encode\type'] = 'Libraries\CryptoGraphy\Encode\Type.php';
$classMap['classes']['zn\cryptography\encode\typeinterface'] = 'Libraries\CryptoGraphy\Encode\TypeInterface.php';
$classMap['classes']['zn\cryptography\exception\invalidargumentexception'] = 'Libraries\CryptoGraphy\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\datatypes\arrays\addelement'] = 'Libraries\DataTypes\Arrays\AddElement.php';
$classMap['classes']['zn\datatypes\arrays\addelementinterface'] = 'Libraries\DataTypes\Arrays\AddElementInterface.php';
$classMap['classes']['zn\datatypes\arraysunittest'] = 'Libraries\DataTypes\Arrays\ArraysUnitTest.php';
$classMap['classes']['zn\datatypes\arrays\casing'] = 'Libraries\DataTypes\Arrays\Casing.php';
$classMap['classes']['zn\datatypes\arrays\casinginterface'] = 'Libraries\DataTypes\Arrays\CasingInterface.php';
$classMap['classes']['zn\datatypes\internalcollection'] = 'Libraries\DataTypes\Arrays\Collection.php';
$classMap['classes']['collection'] = 'Resources\Statics\DataTypes\Arrays\InternalCollection.php';
$classMap['classes']['zn\datatypes\collectioninterface'] = 'Libraries\DataTypes\Arrays\CollectionInterface.php';
$classMap['classes']['zn\datatypes\arrays\each'] = 'Libraries\DataTypes\Arrays\Each.php';
$classMap['classes']['zn\datatypes\arrays\eachinterface'] = 'Libraries\DataTypes\Arrays\EachInterface.php';
$classMap['classes']['zn\datatypes\arrays\exception\invalidargumentexception'] = 'Libraries\DataTypes\Arrays\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\datatypes\arrays\exception\logicexception'] = 'Libraries\DataTypes\Arrays\Exception\LogicException.php';
$classMap['classes']['zn\datatypes\arrays\excluding'] = 'Libraries\DataTypes\Arrays\Excluding.php';
$classMap['classes']['zn\datatypes\arrays\excludinginterface'] = 'Libraries\DataTypes\Arrays\ExcludingInterface.php';
$classMap['classes']['zn\datatypes\arrays\force'] = 'Libraries\DataTypes\Arrays\Force.php';
$classMap['classes']['zn\datatypes\arrays\forceinterface'] = 'Libraries\DataTypes\Arrays\ForceInterface.php';
$classMap['classes']['zn\datatypes\arrays\getelement'] = 'Libraries\DataTypes\Arrays\GetElement.php';
$classMap['classes']['zn\datatypes\arrays\getelementinterface'] = 'Libraries\DataTypes\Arrays\GetElementInterface.php';
$classMap['classes']['zn\datatypes\arrays\including'] = 'Libraries\DataTypes\Arrays\Including.php';
$classMap['classes']['zn\datatypes\arrays\includinginterface'] = 'Libraries\DataTypes\Arrays\IncludingInterface.php';
$classMap['classes']['zn\datatypes\internalarrays'] = 'Libraries\DataTypes\Arrays\InternalArrays.php';
$classMap['classes']['arrays'] = 'Resources\Statics\DataTypes\Arrays\InternalArrays.php';
$classMap['classes']['zn\datatypes\internalarraysinterface'] = 'Libraries\DataTypes\Arrays\InternalArraysInterface.php';
$classMap['classes']['zn\datatypes\arrays\keyvalue'] = 'Libraries\DataTypes\Arrays\KeyValue.php';
$classMap['classes']['zn\datatypes\arrays\keyvalueinterface'] = 'Libraries\DataTypes\Arrays\KeyValueInterface.php';
$classMap['classes']['zn\datatypes\arrays\multiplekey'] = 'Libraries\DataTypes\Arrays\MultipleKey.php';
$classMap['classes']['zn\datatypes\arrays\multiplekeyinterface'] = 'Libraries\DataTypes\Arrays\MultipleKeyInterface.php';
$classMap['classes']['zn\datatypes\arrays\removeelement'] = 'Libraries\DataTypes\Arrays\RemoveElement.php';
$classMap['classes']['zn\datatypes\arrays\removeelementinterface'] = 'Libraries\DataTypes\Arrays\RemoveElementInterface.php';
$classMap['classes']['zn\datatypes\arrays\sort'] = 'Libraries\DataTypes\Arrays\Sort.php';
$classMap['classes']['zn\datatypes\arrays\sortinterface'] = 'Libraries\DataTypes\Arrays\SortInterface.php';
$classMap['classes']['zn\datatypes\charsunittest'] = 'Libraries\DataTypes\Chars\CharsUnitTest.php';
$classMap['classes']['zn\datatypes\chars\exception\undefinedmethodexception'] = 'Libraries\DataTypes\Chars\Exception\UndefinedMethodException.php';
$classMap['classes']['zn\datatypes\internalchars'] = 'Libraries\DataTypes\Chars\InternalChars.php';
$classMap['classes']['chars'] = 'Resources\Statics\DataTypes\Chars\InternalChars.php';
$classMap['classes']['zn\datatypes\internalcharsinterface'] = 'Libraries\DataTypes\Chars\InternalCharsInterface.php';
$classMap['classes']['zn\datatypes\classesunittest'] = 'Libraries\DataTypes\Classes\ClassesUnitTest.php';
$classMap['classes']['zn\datatypes\classes\exception\invalidargumentexception'] = 'Libraries\DataTypes\Classes\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\datatypes\internalclasses'] = 'Libraries\DataTypes\Classes\InternalClasses.php';
$classMap['classes']['classes'] = 'Resources\Statics\DataTypes\Classes\InternalClasses.php';
$classMap['classes']['zn\datatypes\internalclassesinterface'] = 'Libraries\DataTypes\Classes\InternalClassesInterface.php';
$classMap['classes']['zn\datatypes\filtersunittest'] = 'Libraries\DataTypes\Filters\FiltersUnitTest.php';
$classMap['classes']['zn\datatypes\internalfilters'] = 'Libraries\DataTypes\Filters\InternalFilters.php';
$classMap['classes']['filters'] = 'Resources\Statics\DataTypes\Filters\InternalFilters.php';
$classMap['classes']['zn\datatypes\internalfiltersinterface'] = 'Libraries\DataTypes\Filters\InternalFiltersInterface.php';
$classMap['classes']['zn\datatypes\functions\exception\invalidargumentexception'] = 'Libraries\DataTypes\Functions\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\datatypes\functionsunittest'] = 'Libraries\DataTypes\Functions\FunctionsUnitTest.php';
$classMap['classes']['zn\datatypes\internalfunctions'] = 'Libraries\DataTypes\Functions\InternalFunctions.php';
$classMap['classes']['functions'] = 'Resources\Statics\DataTypes\Functions\InternalFunctions.php';
$classMap['classes']['zn\datatypes\internalfunctionsinterface'] = 'Libraries\DataTypes\Functions\InternalFunctionsInterface.php';
$classMap['classes']['zn\datatypes\json\decode'] = 'Libraries\DataTypes\Json\Decode.php';
$classMap['classes']['zn\datatypes\json\decodeinterface'] = 'Libraries\DataTypes\Json\DecodeInterface.php';
$classMap['classes']['zn\datatypes\json\encode'] = 'Libraries\DataTypes\Json\Encode.php';
$classMap['classes']['zn\datatypes\json\encodeinterface'] = 'Libraries\DataTypes\Json\EncodeInterface.php';
$classMap['classes']['zn\datatypes\json\errorinfo'] = 'Libraries\DataTypes\Json\ErrorInfo.php';
$classMap['classes']['zn\datatypes\json\errorinfointerface'] = 'Libraries\DataTypes\Json\ErrorInfoInterface.php';
$classMap['classes']['zn\datatypes\json\exception\jsonerrorexception'] = 'Libraries\DataTypes\Json\Exception\JsonErrorException.php';
$classMap['classes']['zn\datatypes\internaljson'] = 'Libraries\DataTypes\Json\InternalJson.php';
$classMap['classes']['json'] = 'Resources\Statics\DataTypes\Json\InternalJson.php';
$classMap['classes']['zn\datatypes\internaljsoninterface'] = 'Libraries\DataTypes\Json\InternalJsonInterface.php';
$classMap['classes']['zn\datatypes\jsonunittest'] = 'Libraries\DataTypes\Json\JsonUnitTest.php';
$classMap['classes']['zn\datatypes\objects'] = 'Libraries\DataTypes\Objects\Objects.php';
$classMap['classes']['zn\datatypes\internalregex'] = 'Libraries\DataTypes\Regex\InternalRegex.php';
$classMap['classes']['regex'] = 'Resources\Statics\DataTypes\Regex\InternalRegex.php';
$classMap['classes']['zn\datatypes\internalregexinterface'] = 'Libraries\DataTypes\Regex\InternalRegexInterface.php';
$classMap['classes']['zn\datatypes\regexunittest'] = 'Libraries\DataTypes\Regex\RegexUnitTest.php';
$classMap['classes']['zn\datatypes\separator\decode'] = 'Libraries\DataTypes\Separator\Decode.php';
$classMap['classes']['zn\datatypes\separator\decodeinterface'] = 'Libraries\DataTypes\Separator\DecodeInterface.php';
$classMap['classes']['zn\datatypes\separator\encode'] = 'Libraries\DataTypes\Separator\Encode.php';
$classMap['classes']['zn\datatypes\separator\encodeinterface'] = 'Libraries\DataTypes\Separator\EncodeInterface.php';
$classMap['classes']['zn\datatypes\internalseparator'] = 'Libraries\DataTypes\Separator\InternalSeparator.php';
$classMap['classes']['separator'] = 'Resources\Statics\DataTypes\Separator\InternalSeparator.php';
$classMap['classes']['zn\datatypes\internalseparatorinterface'] = 'Libraries\DataTypes\Separator\InternalSeparatorInterface.php';
$classMap['classes']['zn\datatypes\separator\separatorextends'] = 'Libraries\DataTypes\Separator\SeparatorExtends.php';
$classMap['classes']['zn\datatypes\separatorunittest'] = 'Libraries\DataTypes\Separator\SeparatorUnitTest.php';
$classMap['classes']['zn\datatypes\internalserial'] = 'Libraries\DataTypes\Serialize\InternalSerial.php';
$classMap['classes']['serial'] = 'Resources\Statics\DataTypes\Serialize\InternalSerial.php';
$classMap['classes']['zn\datatypes\internalserialinterface'] = 'Libraries\DataTypes\Serialize\InternalSerialInterface.php';
$classMap['classes']['zn\datatypes\serialunittest'] = 'Libraries\DataTypes\Serialize\SerialUnitTest.php';
$classMap['classes']['zn\datatypes\strings\casing'] = 'Libraries\DataTypes\Strings\Casing.php';
$classMap['classes']['zn\datatypes\strings\casinginterface'] = 'Libraries\DataTypes\Strings\CasingInterface.php';
$classMap['classes']['zn\datatypes\internalstack'] = 'Libraries\DataTypes\Strings\InternalStack.php';
$classMap['classes']['stack'] = 'Resources\Statics\DataTypes\Strings\InternalStack.php';
$classMap['classes']['zn\datatypes\internalstackinterface'] = 'Libraries\DataTypes\Strings\InternalStackInterface.php';
$classMap['classes']['zn\datatypes\internalstrings'] = 'Libraries\DataTypes\Strings\InternalStrings.php';
$classMap['classes']['strings'] = 'Resources\Statics\DataTypes\Strings\InternalStrings.php';
$classMap['classes']['zn\datatypes\internalstringsinterface'] = 'Libraries\DataTypes\Strings\InternalStringsInterface.php';
$classMap['classes']['zn\datatypes\strings\search'] = 'Libraries\DataTypes\Strings\Search.php';
$classMap['classes']['zn\datatypes\strings\searchinterface'] = 'Libraries\DataTypes\Strings\SearchInterface.php';
$classMap['classes']['zn\datatypes\strings\security'] = 'Libraries\DataTypes\Strings\Security.php';
$classMap['classes']['zn\datatypes\strings\securityinterface'] = 'Libraries\DataTypes\Strings\SecurityInterface.php';
$classMap['classes']['zn\datatypes\stringsunittest'] = 'Libraries\DataTypes\Strings\StringsUnitTest.php';
$classMap['classes']['zn\datatypes\strings\substitution'] = 'Libraries\DataTypes\Strings\Substitution.php';
$classMap['classes']['zn\datatypes\strings\substitutioninterface'] = 'Libraries\DataTypes\Strings\SubstitutionInterface.php';
$classMap['classes']['zn\datatypes\strings\transform'] = 'Libraries\DataTypes\Strings\Transform.php';
$classMap['classes']['zn\datatypes\strings\transforminterface'] = 'Libraries\DataTypes\Strings\TransformInterface.php';
$classMap['classes']['zn\datatypes\strings\trim'] = 'Libraries\DataTypes\Strings\Trim.php';
$classMap['classes']['zn\datatypes\strings\triminterface'] = 'Libraries\DataTypes\Strings\TrimInterface.php';
$classMap['classes']['zn\datatypes\vars\exception\invalidargumentexception'] = 'Libraries\DataTypes\Vars\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\datatypes\internalvars'] = 'Libraries\DataTypes\Vars\InternalVars.php';
$classMap['classes']['vars'] = 'Resources\Statics\DataTypes\Vars\InternalVars.php';
$classMap['classes']['zn\datatypes\internalvarsinterface'] = 'Libraries\DataTypes\Vars\InternalVarsInterface.php';
$classMap['classes']['zn\datatypes\varsunittest'] = 'Libraries\DataTypes\Vars\VarsUnitTest.php';
$classMap['classes']['zn\datatypes\xml\builder'] = 'Libraries\DataTypes\XML\Builder.php';
$classMap['classes']['zn\datatypes\xml\builderinterface'] = 'Libraries\DataTypes\XML\BuilderInterface.php';
$classMap['classes']['zn\datatypes\xml\check'] = 'Libraries\DataTypes\XML\Check.php';
$classMap['classes']['zn\datatypes\xml\checkinterface'] = 'Libraries\DataTypes\XML\CheckInterface.php';
$classMap['classes']['zn\datatypes\xml\exception\filenotfoundexception'] = 'Libraries\DataTypes\XML\Exception\FileNotFoundException.php';
$classMap['classes']['zn\datatypes\internalxml'] = 'Libraries\DataTypes\XML\InternalXML.php';
$classMap['classes']['xml'] = 'Resources\Statics\DataTypes\XML\InternalXML.php';
$classMap['classes']['zn\datatypes\internalxmlinterface'] = 'Libraries\DataTypes\XML\InternalXMLInterface.php';
$classMap['classes']['zn\datatypes\xml\loader'] = 'Libraries\DataTypes\XML\Loader.php';
$classMap['classes']['zn\datatypes\xml\loaderinterface'] = 'Libraries\DataTypes\XML\LoaderInterface.php';
$classMap['classes']['zn\datatypes\xml\parser'] = 'Libraries\DataTypes\XML\Parser.php';
$classMap['classes']['zn\datatypes\xml\parserinterface'] = 'Libraries\DataTypes\XML\ParserInterface.php';
$classMap['classes']['zn\datatypes\xml\save'] = 'Libraries\DataTypes\XML\Save.php';
$classMap['classes']['zn\datatypes\xml\saveinterface'] = 'Libraries\DataTypes\XML\SaveInterface.php';
$classMap['classes']['zn\datatypes\xmlunittest'] = 'Libraries\DataTypes\XML\XMLUnitTest.php';
$classMap['classes']['zn\database\connection'] = 'Libraries\Database\Connection.php';
$classMap['classes']['zn\database\connectioninterface'] = 'Libraries\Database\ConnectionInterface.php';
$classMap['classes']['zn\database\dbunittest'] = 'Libraries\Database\DB\DBUnitTest.php';
$classMap['classes']['zn\database\internaldb'] = 'Libraries\Database\DB\InternalDB.php';
$classMap['classes']['db'] = 'Resources\Statics\Database\DB\InternalDB.php';
$classMap['classes']['zn\database\internaldbinterface'] = 'Libraries\Database\DB\InternalDBInterface.php';
$classMap['classes']['zn\database\db\traits\functionstrait'] = 'Libraries\Database\DB\Traits\FunctionsTrait.php';
$classMap['classes']['zn\database\db\traits\statementstrait'] = 'Libraries\Database\DB\Traits\StatementsTrait.php';
$classMap['classes']['zn\database\db\traits\variabletypestrait'] = 'Libraries\Database\DB\Traits\VariableTypesTrait.php';
$classMap['classes']['zn\database\dbforgeunittest'] = 'Libraries\Database\DBForge\DBForgeUnitTest.php';
$classMap['classes']['zn\database\internaldbforge'] = 'Libraries\Database\DBForge\InternalDBForge.php';
$classMap['classes']['dbforge'] = 'Resources\Statics\Database\DBForge\InternalDBForge.php';
$classMap['classes']['zn\database\internaldbforgeinterface'] = 'Libraries\Database\DBForge\InternalDBForgeInterface.php';
$classMap['classes']['zn\database\dbtoolunittest'] = 'Libraries\Database\DBTool\DBToolUnitTest.php';
$classMap['classes']['zn\database\internaldbtool'] = 'Libraries\Database\DBTool\InternalDBTool.php';
$classMap['classes']['dbtool'] = 'Resources\Statics\Database\DBTool\InternalDBTool.php';
$classMap['classes']['zn\database\internaldbtoolinterface'] = 'Libraries\Database\DBTool\InternalDBToolInterface.php';
$classMap['classes']['zn\database\dbtriggerunittest'] = 'Libraries\Database\DBTrigger\DBTriggerUnitTest.php';
$classMap['classes']['zn\database\internaldbtrigger'] = 'Libraries\Database\DBTrigger\InternalDBTrigger.php';
$classMap['classes']['dbtrigger'] = 'Resources\Statics\Database\DBTrigger\InternalDBTrigger.php';
$classMap['classes']['zn\database\internaldbtriggerinterface'] = 'Libraries\Database\DBTrigger\InternalDBTriggerInterface.php';
$classMap['classes']['zn\database\dbuserunittest'] = 'Libraries\Database\DBUser\DBUserUnitTest.php';
$classMap['classes']['zn\database\internaldbuser'] = 'Libraries\Database\DBUser\InternalDBUser.php';
$classMap['classes']['dbuser'] = 'Resources\Statics\Database\DBUser\InternalDBUser.php';
$classMap['classes']['zn\database\internaldbuserinterface'] = 'Libraries\Database\DBUser\InternalDBUserInterface.php';
$classMap['classes']['zn\database\abstracts\driverconnectionmappingabstract'] = 'Libraries\Database\DriverConnectionMappingAbstract.php';
$classMap['classes']['zn\database\driverextends'] = 'Libraries\Database\DriverExtends.php';
$classMap['classes']['zn\database\driverforge'] = 'Libraries\Database\DriverForge.php';
$classMap['classes']['zn\database\drivertool'] = 'Libraries\Database\DriverTool.php';
$classMap['classes']['zn\database\drivertrigger'] = 'Libraries\Database\DriverTrigger.php';
$classMap['classes']['zn\database\driveruser'] = 'Libraries\Database\DriverUser.php';
$classMap['classes']['zn\database\drivers\mysqlidriver'] = 'Libraries\Database\Drivers\MySQLi\MySQLi.php';
$classMap['classes']['zn\database\drivers\mysqliforge'] = 'Libraries\Database\Drivers\MySQLi\MySQLiForge.php';
$classMap['classes']['zn\database\drivers\mysqlitool'] = 'Libraries\Database\Drivers\MySQLi\MySQLiTool.php';
$classMap['classes']['zn\database\drivers\mysqlitrigger'] = 'Libraries\Database\Drivers\MySQLi\MySQLiTrigger.php';
$classMap['classes']['zn\database\drivers\mysqliuser'] = 'Libraries\Database\Drivers\MySQLi\MySQLiUser.php';
$classMap['classes']['zn\database\drivers\odbcforge'] = 'Libraries\Database\Drivers\ODBC\ODBCForge.php';
$classMap['classes']['zn\database\drivers\odbctool'] = 'Libraries\Database\Drivers\ODBC\ODBCTool.php';
$classMap['classes']['zn\database\drivers\odbctrigger'] = 'Libraries\Database\Drivers\ODBC\ODBCTrigger.php';
$classMap['classes']['zn\database\drivers\odbcuser'] = 'Libraries\Database\Drivers\ODBC\ODBCUser.php';
$classMap['classes']['zn\database\drivers\odbcdriver'] = 'Libraries\Database\Drivers\ODBC\Odbc.php';
$classMap['classes']['zn\database\drivers\oracledriver'] = 'Libraries\Database\Drivers\Oracle\Oracle.php';
$classMap['classes']['zn\database\drivers\oracleforge'] = 'Libraries\Database\Drivers\Oracle\OracleForge.php';
$classMap['classes']['zn\database\drivers\oracletool'] = 'Libraries\Database\Drivers\Oracle\OracleTool.php';
$classMap['classes']['zn\database\drivers\oracletrigger'] = 'Libraries\Database\Drivers\Oracle\OracleTrigger.php';
$classMap['classes']['zn\database\drivers\oracleuser'] = 'Libraries\Database\Drivers\Oracle\OracleUser.php';
$classMap['classes']['zn\database\drivers\pdo\driverinterface'] = 'Libraries\Database\Drivers\PDO\DriverInterface.php';
$classMap['classes']['zn\database\drivers\pdo\drivers\pdomysqldriver'] = 'Libraries\Database\Drivers\PDO\Drivers\MySQL.php';
$classMap['classes']['zn\database\drivers\pdo\drivers\pdoodbcdriver'] = 'Libraries\Database\Drivers\PDO\Drivers\ODBC.php';
$classMap['classes']['zn\database\drivers\pdo\drivers\pdopostgresdriver'] = 'Libraries\Database\Drivers\PDO\Drivers\Postgres.php';
$classMap['classes']['zn\database\drivers\pdo\drivers\pdosqlserverdriver'] = 'Libraries\Database\Drivers\PDO\Drivers\SQLServer.php';
$classMap['classes']['zn\database\drivers\pdo\drivers\pdosqlitedriver'] = 'Libraries\Database\Drivers\PDO\Drivers\SQLite.php';
$classMap['classes']['zn\database\drivers\pdodriver'] = 'Libraries\Database\Drivers\PDO\PDO.php';
$classMap['classes']['zn\database\drivers\pdoforge'] = 'Libraries\Database\Drivers\PDO\PDOForge.php';
$classMap['classes']['zn\database\drivers\pdotool'] = 'Libraries\Database\Drivers\PDO\PDOTool.php';
$classMap['classes']['zn\database\drivers\pdotrigger'] = 'Libraries\Database\Drivers\PDO\PDOTrigger.php';
$classMap['classes']['zn\database\drivers\pdouser'] = 'Libraries\Database\Drivers\PDO\PDOUser.php';
$classMap['classes']['zn\database\drivers\postgresdriver'] = 'Libraries\Database\Drivers\Posgres\Postgres.php';
$classMap['classes']['zn\database\drivers\postgresforge'] = 'Libraries\Database\Drivers\Posgres\PostgresForge.php';
$classMap['classes']['zn\database\drivers\postgrestool'] = 'Libraries\Database\Drivers\Posgres\PostgresTool.php';
$classMap['classes']['zn\database\drivers\postgrestrigger'] = 'Libraries\Database\Drivers\Posgres\PostgresTrigger.php';
$classMap['classes']['zn\database\drivers\postgresuser'] = 'Libraries\Database\Drivers\Posgres\PostgresUser.php';
$classMap['classes']['zn\database\drivers\sqlserverforge'] = 'Libraries\Database\Drivers\SQLServer\SQLServerForge.php';
$classMap['classes']['zn\database\drivers\sqlservertool'] = 'Libraries\Database\Drivers\SQLServer\SQLServerTool.php';
$classMap['classes']['zn\database\drivers\sqlservertrigger'] = 'Libraries\Database\Drivers\SQLServer\SQLServerTrigger.php';
$classMap['classes']['zn\database\drivers\sqlserveruser'] = 'Libraries\Database\Drivers\SQLServer\SQLServerUser.php';
$classMap['classes']['zn\database\drivers\sqlserverdriver'] = 'Libraries\Database\Drivers\SQLServer\SQLserver.php';
$classMap['classes']['zn\database\drivers\sqlitedriver'] = 'Libraries\Database\Drivers\SQLite\SQLite.php';
$classMap['classes']['zn\database\drivers\sqliteforge'] = 'Libraries\Database\Drivers\SQLite\SQLiteForge.php';
$classMap['classes']['zn\database\drivers\sqlitetool'] = 'Libraries\Database\Drivers\SQLite\SQLiteTool.php';
$classMap['classes']['zn\database\drivers\sqlitetrigger'] = 'Libraries\Database\Drivers\SQLite\SQLiteTrigger.php';
$classMap['classes']['zn\database\drivers\sqliteuser'] = 'Libraries\Database\Drivers\SQLite\SQLiteUser.php';
$classMap['classes']['zn\database\exception\databaseerrorexception'] = 'Libraries\Database\Exception\DatabaseErrorException.php';
$classMap['classes']['zn\database\exception\duplicatecheckexception'] = 'Libraries\Database\Exception\DuplicateCheckException.php';
$classMap['classes']['zn\database\exception\invalidargumentexception'] = 'Libraries\Database\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\database\internalmigration'] = 'Libraries\Database\Migration\InternalMigration.php';
$classMap['classes']['migration'] = 'Resources\Statics\Database\Migration\InternalMigration.php';
$classMap['classes']['zn\database\internalmigrationinterface'] = 'Libraries\Database\Migration\InternalMigrationInterface.php';
$classMap['classes']['zn\database\migrationunittest'] = 'Libraries\Database\Migration\MigrationUnitTest.php';
$classMap['classes']['zn\database\properties'] = 'Libraries\Database\Properties.php';
$classMap['classes']['zn\datetime\datetimecommon'] = 'Libraries\DateTime\DateTimeCommon.php';
$classMap['classes']['zn\datetime\dateunittest'] = 'Libraries\DateTime\DateUnitTest.php';
$classMap['classes']['zn\datetime\internaldate'] = 'Libraries\DateTime\InternalDate.php';
$classMap['classes']['date'] = 'Resources\Statics\DateTime\InternalDate.php';
$classMap['classes']['zn\datetime\internaldatetimecommoninterface'] = 'Libraries\DateTime\InternalDateTimeInterface.php';
$classMap['classes']['zn\datetime\internaldatetimeinterval'] = 'Libraries\DateTime\InternalDateTimeInterval.php';
$classMap['classes']['datetimeinterval'] = 'Resources\Statics\DateTime\InternalDateTimeInterval.php';
$classMap['classes']['zn\datetime\internaltime'] = 'Libraries\DateTime\InternalTime.php';
$classMap['classes']['time'] = 'Resources\Statics\DateTime\InternalTime.php';
$classMap['classes']['zn\datetime\carbon\carbon'] = 'Libraries\DateTime\Thirdparty\Carbon.php';
$classMap['classes']['zn\datetime\carbon\carboninterval'] = 'Libraries\DateTime\Thirdparty\CarbonInterval.php';
$classMap['classes']['zn\datetime\carbon\exceptions\invaliddateexception'] = 'Libraries\DateTime\Thirdparty\Exceptions\InvalidDateException.php';
$classMap['classes']['symfony\component\translation\interval'] = 'Libraries\DateTime\Thirdparty\Translation\Interval.php';
$classMap['classes']['symfony\component\translation\loader\arrayloader'] = 'Libraries\DateTime\Thirdparty\Translation\Loader\ArrayLoader.php';
$classMap['classes']['symfony\component\translation\loader\loaderinterface'] = 'Libraries\DateTime\Thirdparty\Translation\Loader\LoaderInterface.php';
$classMap['classes']['symfony\component\translation\messagecatalogue'] = 'Libraries\DateTime\Thirdparty\Translation\MessageCatalogue.php';
$classMap['classes']['symfony\component\translation\messagecatalogueinterface'] = 'Libraries\DateTime\Thirdparty\Translation\MessageCatalogueInterface.php';
$classMap['classes']['symfony\component\translation\messageselector'] = 'Libraries\DateTime\Thirdparty\Translation\MessageSelector.php';
$classMap['classes']['symfony\component\translation\metadataawareinterface'] = 'Libraries\DateTime\Thirdparty\Translation\MetadataAwareInterface.php';
$classMap['classes']['symfony\component\translation\pluralizationrules'] = 'Libraries\DateTime\Thirdparty\Translation\PluralizationRules.php';
$classMap['classes']['symfony\component\translation\translator'] = 'Libraries\DateTime\Thirdparty\Translation\Translator.php';
$classMap['classes']['symfony\component\translation\translatorbaginterface'] = 'Libraries\DateTime\Thirdparty\Translation\TranslatorBagInterface.php';
$classMap['classes']['symfony\component\translation\translatorinterface'] = 'Libraries\DateTime\Thirdparty\Translation\TranslatorInterface.php';
$classMap['classes']['zn\datetime\timeunittest'] = 'Libraries\DateTime\TimeUnitTest.php';
$classMap['classes']['zn\encodingsupport\gtunittest'] = 'Libraries\EncodingSupport\GetText\GTUnitTest.php';
$classMap['classes']['zn\encodingsupport\internalgt'] = 'Libraries\EncodingSupport\GetText\InternalGT.php';
$classMap['classes']['gt'] = 'Resources\Statics\EncodingSupport\GetText\InternalGT.php';
$classMap['classes']['zn\encodingsupport\internalgtinterface'] = 'Libraries\EncodingSupport\GetText\InternalGTInterface.php';
$classMap['classes']['zn\encodingsupport\iconv\exception\invalidargumentexception'] = 'Libraries\EncodingSupport\Iconv\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\encodingsupport\ivunittest'] = 'Libraries\EncodingSupport\Iconv\IVUnitTest.php';
$classMap['classes']['zn\encodingsupport\internaliv'] = 'Libraries\EncodingSupport\Iconv\InternalIV.php';
$classMap['classes']['iv'] = 'Resources\Statics\EncodingSupport\Iconv\InternalIV.php';
$classMap['classes']['zn\encodingsupport\internalivinterface'] = 'Libraries\EncodingSupport\Iconv\InternalIVInterface.php';
$classMap['classes']['zn\encodingsupport\multibyte\exception\invalidargumentexception'] = 'Libraries\EncodingSupport\MultiByte\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\encodingsupport\internalmb'] = 'Libraries\EncodingSupport\MultiByte\InternalMB.php';
$classMap['classes']['mb'] = 'Resources\Statics\EncodingSupport\MultiByte\InternalMB.php';
$classMap['classes']['zn\encodingsupport\internalmbinterface'] = 'Libraries\EncodingSupport\MultiByte\InternalMBInterface.php';
$classMap['classes']['zn\encodingsupport\mbunittest'] = 'Libraries\EncodingSupport\MultiByte\MBUnitTest.php';
$classMap['classes']['zn\encodingsupport\multilanguage\delete'] = 'Libraries\EncodingSupport\MultiLanguage\Delete.php';
$classMap['classes']['zn\encodingsupport\multilanguage\deleteinterface'] = 'Libraries\EncodingSupport\MultiLanguage\DeleteInterface.php';
$classMap['classes']['zn\encodingsupport\multilanguage\factory'] = 'Libraries\EncodingSupport\MultiLanguage\Factory.php';
$classMap['classes']['zn\encodingsupport\multilanguage\grid'] = 'Libraries\EncodingSupport\MultiLanguage\Grid.php';
$classMap['classes']['zn\encodingsupport\multilanguage\gridinterface'] = 'Libraries\EncodingSupport\MultiLanguage\GridInterface.php';
$classMap['classes']['zn\encodingsupport\multilanguage\insert'] = 'Libraries\EncodingSupport\MultiLanguage\Insert.php';
$classMap['classes']['zn\encodingsupport\multilanguage\insertinterface'] = 'Libraries\EncodingSupport\MultiLanguage\InsertInterface.php';
$classMap['classes']['zn\encodingsupport\internalml'] = 'Libraries\EncodingSupport\MultiLanguage\InternalML.php';
$classMap['classes']['ml'] = 'Resources\Statics\EncodingSupport\MultiLanguage\InternalML.php';
$classMap['classes']['zn\encodingsupport\internalmlinterface'] = 'Libraries\EncodingSupport\MultiLanguage\InternalMLInterface.php';
$classMap['classes']['zn\encodingsupport\multilanguage\mlextends'] = 'Libraries\EncodingSupport\MultiLanguage\MLExtends.php';
$classMap['classes']['zn\encodingsupport\mlunittest'] = 'Libraries\EncodingSupport\MultiLanguage\MLUnitTest.php';
$classMap['classes']['zn\encodingsupport\multilanguage\select'] = 'Libraries\EncodingSupport\MultiLanguage\Select.php';
$classMap['classes']['zn\encodingsupport\multilanguage\selectinterface'] = 'Libraries\EncodingSupport\MultiLanguage\SelectInterface.php';
$classMap['classes']['zn\encodingsupport\multilanguage\update'] = 'Libraries\EncodingSupport\MultiLanguage\Update.php';
$classMap['classes']['zn\errorhandling\internalerrors'] = 'Libraries\ErrorHandling\Errors\InternalErrors.php';
$classMap['classes']['errors'] = 'Resources\Statics\ErrorHandling\Errors\InternalErrors.php';
$classMap['classes']['zn\errorhandling\internalerrorsinterface'] = 'Libraries\ErrorHandling\Errors\InternalErrorsInterface.php';
$classMap['classes']['debugexception'] = 'Libraries\ErrorHandling\Exceptions\DebugException.php';
$classMap['classes']['generalexception'] = 'Libraries\ErrorHandling\Exceptions\GeneralException.php';
$classMap['classes']['generalexceptioninterface'] = 'Libraries\ErrorHandling\Exceptions\GeneralExceptionInterface.php';
$classMap['classes']['zn\errorhandling\internalexceptions'] = 'Libraries\ErrorHandling\Exceptions\InternalExceptions.php';
$classMap['classes']['exceptions'] = 'Resources\Statics\ErrorHandling\Exceptions\InternalExceptions.php';
$classMap['classes']['zn\errorhandling\internalexceptionsinterface'] = 'Libraries\ErrorHandling\Exceptions\InternalExceptionsInterface.php';
$classMap['classes']['zn\filesystem\excel\arraytoxls'] = 'Libraries\FileSystem\Excel\ArrayToXLS.php';
$classMap['classes']['zn\filesystem\excel\arraytoxlsinterface'] = 'Libraries\FileSystem\Excel\ArrayToXLSInterface.php';
$classMap['classes']['zn\filesystem\excel\csvtoarray'] = 'Libraries\FileSystem\Excel\CSVToArray.php';
$classMap['classes']['zn\filesystem\excel\csvtoarrayinterface'] = 'Libraries\FileSystem\Excel\CSVToArrayInterface.php';
$classMap['classes']['zn\filesystem\excelunittest'] = 'Libraries\FileSystem\Excel\ExcelUnitTest.php';
$classMap['classes']['zn\filesystem\internalexcel'] = 'Libraries\FileSystem\Excel\InternalExcel.php';
$classMap['classes']['excel'] = 'Resources\Statics\FileSystem\Excel\InternalExcel.php';
$classMap['classes']['zn\filesystem\internalexcelinterface'] = 'Libraries\FileSystem\Excel\InternalExcelInterface.php';
$classMap['classes']['zn\filesystem\exception\fileallreadyexception'] = 'Libraries\FileSystem\Exception\FileAllreadyException.php';
$classMap['classes']['zn\filesystem\exception\filenotfoundexception'] = 'Libraries\FileSystem\Exception\FileNotFoundException.php';
$classMap['classes']['zn\filesystem\exception\fileremotedownloadexception'] = 'Libraries\FileSystem\Exception\FileRemoteDownloadException.php';
$classMap['classes']['zn\filesystem\exception\fileremoteuploadexception'] = 'Libraries\FileSystem\Exception\FileRemoteUploadException.php';
$classMap['classes']['zn\filesystem\exception\folderallreadyexception'] = 'Libraries\FileSystem\Exception\FolderAllreadyException.php';
$classMap['classes']['zn\filesystem\exception\folderchangedirexception'] = 'Libraries\FileSystem\Exception\FolderChangeDirException.php';
$classMap['classes']['zn\filesystem\exception\folderchangenameexception'] = 'Libraries\FileSystem\Exception\FolderChangeNameException.php';
$classMap['classes']['zn\filesystem\exception\foldernotfoundexception'] = 'Libraries\FileSystem\Exception\FolderNotFoundException.php';
$classMap['classes']['zn\filesystem\exception\ioexception'] = 'Libraries\FileSystem\Exception\IOException.php';
$classMap['classes']['zn\filesystem\ftp\connection'] = 'Libraries\FileSystem\FTP\Connection.php';
$classMap['classes']['zn\filesystem\ftp\connectioninterface'] = 'Libraries\FileSystem\FTP\ConnectionInterface.php';
$classMap['classes']['zn\filesystem\ftpunittest'] = 'Libraries\FileSystem\FTP\FTPUnitTest.php';
$classMap['classes']['zn\filesystem\ftp\forge'] = 'Libraries\FileSystem\FTP\Forge.php';
$classMap['classes']['zn\filesystem\ftp\forgeinterface'] = 'Libraries\FileSystem\FTP\ForgeInterface.php';
$classMap['classes']['zn\filesystem\ftp\info'] = 'Libraries\FileSystem\FTP\Info.php';
$classMap['classes']['zn\filesystem\ftp\infointerface'] = 'Libraries\FileSystem\FTP\InfoInterface.php';
$classMap['classes']['zn\filesystem\internalftp'] = 'Libraries\FileSystem\FTP\InternalFTP.php';
$classMap['classes']['ftp'] = 'Resources\Statics\FileSystem\FTP\InternalFTP.php';
$classMap['classes']['zn\filesystem\internalftpinterface'] = 'Libraries\FileSystem\FTP\InternalFTPInterface.php';
$classMap['classes']['zn\filesystem\ftp\transfer'] = 'Libraries\FileSystem\FTP\Transfer.php';
$classMap['classes']['zn\filesystem\ftp\transferinterface'] = 'Libraries\FileSystem\FTP\TransferInterface.php';
$classMap['classes']['zn\filesystem\file\content'] = 'Libraries\FileSystem\File\Content.php';
$classMap['classes']['zn\filesystem\file\contentinterface'] = 'Libraries\FileSystem\File\ContentInterface.php';
$classMap['classes']['zn\filesystem\file\extension'] = 'Libraries\FileSystem\File\Extension.php';
$classMap['classes']['zn\filesystem\file\extensioninterface'] = 'Libraries\FileSystem\File\ExtensionInterface.php';
$classMap['classes']['zn\filesystem\file\factory'] = 'Libraries\FileSystem\File\Factory.php';
$classMap['classes']['zn\filesystem\fileunittest'] = 'Libraries\FileSystem\File\FileUnitTest.php';
$classMap['classes']['zn\filesystem\file\forge'] = 'Libraries\FileSystem\File\Forge.php';
$classMap['classes']['zn\filesystem\file\forgeinterface'] = 'Libraries\FileSystem\File\ForgeInterface.php';
$classMap['classes']['zn\filesystem\file\info'] = 'Libraries\FileSystem\File\Info.php';
$classMap['classes']['zn\filesystem\file\infointerface'] = 'Libraries\FileSystem\File\InfoInterface.php';
$classMap['classes']['zn\filesystem\internalfile'] = 'Libraries\FileSystem\File\InternalFile.php';
$classMap['classes']['file'] = 'Resources\Statics\FileSystem\File\InternalFile.php';
$classMap['classes']['zn\filesystem\internalfileinterface'] = 'Libraries\FileSystem\File\InternalFileInterface.php';
$classMap['classes']['zn\filesystem\internalupload'] = 'Libraries\FileSystem\File\InternalUpload.php';
$classMap['classes']['upload'] = 'Resources\Statics\FileSystem\File\InternalUpload.php';
$classMap['classes']['zn\filesystem\internaluploadinterface'] = 'Libraries\FileSystem\File\InternalUploadInterface.php';
$classMap['classes']['zn\filesystem\file\loader'] = 'Libraries\FileSystem\File\Loader.php';
$classMap['classes']['zn\filesystem\file\loaderinterface'] = 'Libraries\FileSystem\File\LoaderInterface.php';
$classMap['classes']['zn\filesystem\file\transfer'] = 'Libraries\FileSystem\File\Transfer.php';
$classMap['classes']['zn\filesystem\file\transferinterface'] = 'Libraries\FileSystem\File\TransferInterface.php';
$classMap['classes']['zn\filesystem\filesystemfactory'] = 'Libraries\FileSystem\FileSystemFactory.php';
$classMap['classes']['zn\filesystem\folder\factory'] = 'Libraries\FileSystem\Folder\Factory.php';
$classMap['classes']['zn\filesystem\folder\filelist'] = 'Libraries\FileSystem\Folder\FileList.php';
$classMap['classes']['zn\filesystem\folder\filelistinterface'] = 'Libraries\FileSystem\Folder\FileListInterface.php';
$classMap['classes']['zn\filesystem\folderunittest'] = 'Libraries\FileSystem\Folder\FolderUnitTest.php';
$classMap['classes']['zn\filesystem\folder\forge'] = 'Libraries\FileSystem\Folder\Forge.php';
$classMap['classes']['zn\filesystem\folder\forgeinterface'] = 'Libraries\FileSystem\Folder\ForgeInterface.php';
$classMap['classes']['zn\filesystem\folder\info'] = 'Libraries\FileSystem\Folder\Info.php';
$classMap['classes']['zn\filesystem\folder\infointerface'] = 'Libraries\FileSystem\Folder\InfoInterface.php';
$classMap['classes']['zn\filesystem\internalfolder'] = 'Libraries\FileSystem\Folder\InternalFolder.php';
$classMap['classes']['folder'] = 'Resources\Statics\FileSystem\Folder\InternalFolder.php';
$classMap['classes']['zn\filesystem\internalfolderinterface'] = 'Libraries\FileSystem\Folder\InternalFolderInterface.php';
$classMap['classes']['zn\filesystem\generateunittest'] = 'Libraries\FileSystem\Generate\GenerateUnitTest.php';
$classMap['classes']['zn\filesystem\internalgenerate'] = 'Libraries\FileSystem\Generate\InternalGenerate.php';
$classMap['classes']['generate'] = 'Resources\Statics\FileSystem\Generate\InternalGenerate.php';
$classMap['classes']['zn\filesystem\internalgenerateinterface'] = 'Libraries\FileSystem\Generate\InternalGenerateInterface.php';
$classMap['classes']['zn\helpers\cleanerunittest'] = 'Libraries\Helpers\Cleaner\CleanerUnitTest.php';
$classMap['classes']['zn\helpers\cleaner\data'] = 'Libraries\Helpers\Cleaner\Data.php';
$classMap['classes']['zn\helpers\cleaner\datainterface'] = 'Libraries\Helpers\Cleaner\DataInterface.php';
$classMap['classes']['zn\helpers\cleaner\exception\logicexception'] = 'Libraries\Helpers\Cleaner\Exception\LogicException.php';
$classMap['classes']['zn\helpers\internalcleaner'] = 'Libraries\Helpers\Cleaner\InternalCleaner.php';
$classMap['classes']['cleaner'] = 'Resources\Statics\Helpers\Cleaner\InternalCleaner.php';
$classMap['classes']['zn\helpers\internalcleanerinterface'] = 'Libraries\Helpers\Cleaner\InternalCleanerInterface.php';
$classMap['classes']['zn\helpers\converterunittest'] = 'Libraries\Helpers\Converter\ConverterUnitTest.php';
$classMap['classes']['zn\helpers\converter\exception\invalidargumentexception'] = 'Libraries\Helpers\Converter\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\helpers\converter\exception\logicexception'] = 'Libraries\Helpers\Converter\Exception\LogicException.php';
$classMap['classes']['zn\helpers\internalconverter'] = 'Libraries\Helpers\Converter\InternalConverter.php';
$classMap['classes']['converter'] = 'Resources\Statics\Helpers\Converter\InternalConverter.php';
$classMap['classes']['zn\helpers\internalconverterinterface'] = 'Libraries\Helpers\Converter\InternalConverterInterface.php';
$classMap['classes']['zn\helpers\converter\numeric'] = 'Libraries\Helpers\Converter\Numeric.php';
$classMap['classes']['zn\helpers\converter\numericinterface'] = 'Libraries\Helpers\Converter\NumericInterface.php';
$classMap['classes']['zn\helpers\converter\text'] = 'Libraries\Helpers\Converter\Text.php';
$classMap['classes']['zn\helpers\converter\textinterface'] = 'Libraries\Helpers\Converter\TextInterface.php';
$classMap['classes']['zn\helpers\converter\unicode'] = 'Libraries\Helpers\Converter\Unicode.php';
$classMap['classes']['zn\helpers\converter\unicodeinterface'] = 'Libraries\Helpers\Converter\UnicodeInterface.php';
$classMap['classes']['zn\helpers\converter\variabletypes'] = 'Libraries\Helpers\Converter\VariableTypes.php';
$classMap['classes']['zn\helpers\converter\variabletypesinterface'] = 'Libraries\Helpers\Converter\VariableTypesInterface.php';
$classMap['classes']['zn\helpers\limiter\char'] = 'Libraries\Helpers\Limiter\Char.php';
$classMap['classes']['zn\helpers\limiter\commoninterface'] = 'Libraries\Helpers\Limiter\CommonInterface.php';
$classMap['classes']['zn\helpers\internallimiter'] = 'Libraries\Helpers\Limiter\InternalLimiter.php';
$classMap['classes']['limiter'] = 'Resources\Statics\Helpers\Limiter\InternalLimiter.php';
$classMap['classes']['zn\helpers\internallimiterinterface'] = 'Libraries\Helpers\Limiter\InternalLimiterInterface.php';
$classMap['classes']['zn\helpers\limiterunittest'] = 'Libraries\Helpers\Limiter\LimiterUnitTest.php';
$classMap['classes']['zn\helpers\limiter\word'] = 'Libraries\Helpers\Limiter\Word.php';
$classMap['classes']['zn\helpers\internallogger'] = 'Libraries\Helpers\Logger\InternalLogger.php';
$classMap['classes']['logger'] = 'Resources\Statics\Helpers\Logger\InternalLogger.php';
$classMap['classes']['zn\helpers\internalloggerinterface'] = 'Libraries\Helpers\Logger\InternalLoggerInterface.php';
$classMap['classes']['zn\helpers\loggerunittest'] = 'Libraries\Helpers\Logger\LoggerUnitTest.php';
$classMap['classes']['zn\helpers\rounder\average'] = 'Libraries\Helpers\Rounder\Average.php';
$classMap['classes']['zn\helpers\rounder\commoninterface'] = 'Libraries\Helpers\Rounder\CommonInterface.php';
$classMap['classes']['zn\helpers\rounder\down'] = 'Libraries\Helpers\Rounder\Down.php';
$classMap['classes']['zn\helpers\rounder\exception\logicexception'] = 'Libraries\Helpers\Rounder\Exception\LogicException.php';
$classMap['classes']['zn\helpers\internalrounder'] = 'Libraries\Helpers\Rounder\InternalRounder.php';
$classMap['classes']['rounder'] = 'Resources\Statics\Helpers\Rounder\InternalRounder.php';
$classMap['classes']['zn\helpers\internalrounderinterface'] = 'Libraries\Helpers\Rounder\InternalRounderInterface.php';
$classMap['classes']['zn\helpers\rounderunittest'] = 'Libraries\Helpers\Rounder\RounderUnitTest.php';
$classMap['classes']['zn\helpers\rounder\up'] = 'Libraries\Helpers\Rounder\Up.php';
$classMap['classes']['zn\helpers\searcher\data'] = 'Libraries\Helpers\Searcher\Data.php';
$classMap['classes']['zn\helpers\searcher\datainterface'] = 'Libraries\Helpers\Searcher\DataInterface.php';
$classMap['classes']['zn\helpers\searcher\database'] = 'Libraries\Helpers\Searcher\Database.php';
$classMap['classes']['zn\helpers\searcher\databaseinterface'] = 'Libraries\Helpers\Searcher\DatabaseInterface.php';
$classMap['classes']['zn\helpers\internalsearcher'] = 'Libraries\Helpers\Searcher\InternalSearcher.php';
$classMap['classes']['searcher'] = 'Resources\Statics\Helpers\Searcher\InternalSearcher.php';
$classMap['classes']['zn\helpers\internalsearcherinterface'] = 'Libraries\Helpers\Searcher\InternalSearcherInterface.php';
$classMap['classes']['zn\helpers\searcherunittest'] = 'Libraries\Helpers\Searcher\SearcherUnitTest.php';
$classMap['classes']['zn\encodingsupport\imageprocessing\gd\exception\invalidargumentexception'] = 'Libraries\ImageProcessing\GD\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\imageprocessing\gdunittest'] = 'Libraries\ImageProcessing\GD\GDUnitTest.php';
$classMap['classes']['zn\imageprocessing\internalgd'] = 'Libraries\ImageProcessing\GD\InternalGD.php';
$classMap['classes']['gd'] = 'Resources\Statics\ImageProcessing\GD\InternalGD.php';
$classMap['classes']['zn\imageprocessing\internalgdinterface'] = 'Libraries\ImageProcessing\GD\InternalGDInterface.php';
$classMap['classes']['zn\imageprocessing\image\calculateprosize'] = 'Libraries\ImageProcessing\Image\CalculateProsize.php';
$classMap['classes']['zn\imageprocessing\image\calculateprosizeinterface'] = 'Libraries\ImageProcessing\Image\CalculateProsizeInterface.php';
$classMap['classes']['zn\encodingsupport\imageprocessing\image\exception\imagenotfoundexception'] = 'Libraries\ImageProcessing\Image\Exception\ImageNotFoundException.php';
$classMap['classes']['zn\encodingsupport\imageprocessing\image\exception\invalidimagefileexception'] = 'Libraries\ImageProcessing\Image\Exception\InvalidImageFileException.php';
$classMap['classes']['zn\imageprocessing\imageunittest'] = 'Libraries\ImageProcessing\Image\ImageUnitTest.php';
$classMap['classes']['zn\imageprocessing\internalimage'] = 'Libraries\ImageProcessing\Image\InternalImage.php';
$classMap['classes']['image'] = 'Resources\Statics\ImageProcessing\Image\InternalImage.php';
$classMap['classes']['zn\imageprocessing\internalimageinterface'] = 'Libraries\ImageProcessing\Image\InternalImageInterface.php';
$classMap['classes']['zn\imageprocessing\internalthumb'] = 'Libraries\ImageProcessing\Image\InternalThumb.php';
$classMap['classes']['thumb'] = 'Resources\Statics\ImageProcessing\Image\InternalThumb.php';
$classMap['classes']['zn\imageprocessing\internalthumbinterface'] = 'Libraries\ImageProcessing\Image\InternalThumbInterface.php';
$classMap['classes']['zn\imageprocessing\image\renderimage'] = 'Libraries\ImageProcessing\Image\RenderImage.php';
$classMap['classes']['zn\imageprocessing\image\renderimageinterface'] = 'Libraries\ImageProcessing\Image\RenderImageInterface.php';
$classMap['classes']['zn\imageprocessing\thumbunittest'] = 'Libraries\ImageProcessing\Image\ThumbUnitTest.php';
$classMap['classes']['zn\individualstructures\benchmarkunittest'] = 'Libraries\IndividualStructures\Benchmark\BenchmarkUnitTest.php';
$classMap['classes']['zn\individualstructures\benchmark\elapsedtime'] = 'Libraries\IndividualStructures\Benchmark\ElapsedTime.php';
$classMap['classes']['zn\individualstructures\benchmark\elapsedtimeinterface'] = 'Libraries\IndividualStructures\Benchmark\ElapsedTimeInterface.php';
$classMap['classes']['zn\individualstructures\benchmark\exception\invalidargumentexception'] = 'Libraries\IndividualStructures\Benchmark\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\individualstructures\benchmark\fileusage'] = 'Libraries\IndividualStructures\Benchmark\FileUsage.php';
$classMap['classes']['zn\individualstructures\benchmark\fileusageinterface'] = 'Libraries\IndividualStructures\Benchmark\FileUsageInterface.php';
$classMap['classes']['zn\individualstructures\internalbenchmark'] = 'Libraries\IndividualStructures\Benchmark\InternalBenchmark.php';
$classMap['classes']['benchmark'] = 'Resources\Statics\IndividualStructures\Benchmark\InternalBenchmark.php';
$classMap['classes']['zn\individualstructures\internalbenchmarkinterface'] = 'Libraries\IndividualStructures\Benchmark\InternalBenchmarkInterface.php';
$classMap['classes']['zn\individualstructures\benchmark\memoryusage'] = 'Libraries\IndividualStructures\Benchmark\MemoryUsage.php';
$classMap['classes']['zn\individualstructures\benchmark\memoryusageinterface'] = 'Libraries\IndividualStructures\Benchmark\MemoryUsageInterface.php';
$classMap['classes']['zn\individualstructures\benchmark\properties'] = 'Libraries\IndividualStructures\Benchmark\Properties.php';
$classMap['classes']['zn\individualstructures\benchmark\run'] = 'Libraries\IndividualStructures\Benchmark\Run.php';
$classMap['classes']['zn\individualstructures\benchmark\runinterface'] = 'Libraries\IndividualStructures\Benchmark\RunInterface.php';
$classMap['classes']['zn\individualstructures\benchmark\testing'] = 'Libraries\IndividualStructures\Benchmark\Testing.php';
$classMap['classes']['zn\individualstructures\benchmark\testinginterface'] = 'Libraries\IndividualStructures\Benchmark\TestingInterface.php';
$classMap['classes']['zn\individualstructures\bufferunittest'] = 'Libraries\IndividualStructures\Buffer\BufferUnitTest.php';
$classMap['classes']['zn\individualstructures\buffer\callback'] = 'Libraries\IndividualStructures\Buffer\Callback.php';
$classMap['classes']['zn\individualstructures\buffer\callbackinterface'] = 'Libraries\IndividualStructures\Buffer\CallbackInterface.php';
$classMap['classes']['zn\individualstructures\buffer\delete'] = 'Libraries\IndividualStructures\Buffer\Delete.php';
$classMap['classes']['zn\individualstructures\buffer\deleteinterface'] = 'Libraries\IndividualStructures\Buffer\DeleteInterface.php';
$classMap['classes']['zn\individualstructures\buffer\exception\invalidargumentexception'] = 'Libraries\IndividualStructures\Buffer\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\individualstructures\buffer\file'] = 'Libraries\IndividualStructures\Buffer\File.php';
$classMap['classes']['zn\individualstructures\buffer\fileinterface'] = 'Libraries\IndividualStructures\Buffer\FileInterface.php';
$classMap['classes']['zn\individualstructures\buffer\insert'] = 'Libraries\IndividualStructures\Buffer\Insert.php';
$classMap['classes']['zn\individualstructures\buffer\insertinterface'] = 'Libraries\IndividualStructures\Buffer\InsertInterface.php';
$classMap['classes']['zn\individualstructures\internalbuffer'] = 'Libraries\IndividualStructures\Buffer\InternalBuffer.php';
$classMap['classes']['buffer'] = 'Resources\Statics\IndividualStructures\Buffer\InternalBuffer.php';
$classMap['classes']['zn\individualstructures\internalbufferinterface'] = 'Libraries\IndividualStructures\Buffer\InternalBufferInterface.php';
$classMap['classes']['zn\individualstructures\buffer\select'] = 'Libraries\IndividualStructures\Buffer\Select.php';
$classMap['classes']['zn\individualstructures\buffer\selectinterface'] = 'Libraries\IndividualStructures\Buffer\SelectInterface.php';
$classMap['classes']['zn\individualstructures\abstracts\cachedrivermappingabstract'] = 'Libraries\IndividualStructures\Cache\CacheDriverMappingAbstract.php';
$classMap['classes']['zn\individualstructures\cacheunittest'] = 'Libraries\IndividualStructures\Cache\CacheUnitTest.php';
$classMap['classes']['zn\individualstructures\cache\drivers\apcdriver'] = 'Libraries\IndividualStructures\Cache\Drivers\Apc.php';
$classMap['classes']['zn\individualstructures\cache\drivers\apcudriver'] = 'Libraries\IndividualStructures\Cache\Drivers\Apcu.php';
$classMap['classes']['zn\individualstructures\cache\drivers\filedriver'] = 'Libraries\IndividualStructures\Cache\Drivers\File.php';
$classMap['classes']['zn\individualstructures\cache\drivers\memcachedriver'] = 'Libraries\IndividualStructures\Cache\Drivers\Memcache.php';
$classMap['classes']['zn\individualstructures\cache\drivers\redisdriver'] = 'Libraries\IndividualStructures\Cache\Drivers\Redis.php';
$classMap['classes']['zn\individualstructures\cache\drivers\wincachedriver'] = 'Libraries\IndividualStructures\Cache\Drivers\Wincache.php';
$classMap['classes']['zn\individualstructures\internalcache'] = 'Libraries\IndividualStructures\Cache\InternalCache.php';
$classMap['classes']['cache'] = 'Resources\Statics\IndividualStructures\Cache\InternalCache.php';
$classMap['classes']['zn\individualstructures\internalcacheinterface'] = 'Libraries\IndividualStructures\Cache\InternalCacheInterface.php';
$classMap['classes']['zn\individualstructures\cart\cartextends'] = 'Libraries\IndividualStructures\Cart\CartExtends.php';
$classMap['classes']['zn\individualstructures\cartunittest'] = 'Libraries\IndividualStructures\Cart\CartUnitTest.php';
$classMap['classes']['zn\individualstructures\cart\delete'] = 'Libraries\IndividualStructures\Cart\Delete.php';
$classMap['classes']['zn\individualstructures\cart\deleteinterface'] = 'Libraries\IndividualStructures\Cart\DeleteInterface.php';
$classMap['classes']['zn\individualstructures\cart\insert'] = 'Libraries\IndividualStructures\Cart\Insert.php';
$classMap['classes']['zn\individualstructures\cart\insertinterface'] = 'Libraries\IndividualStructures\Cart\InsertInterface.php';
$classMap['classes']['zn\individualstructures\internalcart'] = 'Libraries\IndividualStructures\Cart\InternalCart.php';
$classMap['classes']['cart'] = 'Resources\Statics\IndividualStructures\Cart\InternalCart.php';
$classMap['classes']['zn\individualstructures\internalcartinterface'] = 'Libraries\IndividualStructures\Cart\InternalCartInterface.php';
$classMap['classes']['zn\individualstructures\cart\money'] = 'Libraries\IndividualStructures\Cart\Money.php';
$classMap['classes']['zn\individualstructures\cart\moneyinterface'] = 'Libraries\IndividualStructures\Cart\MoneyInterface.php';
$classMap['classes']['zn\individualstructures\cart\properties'] = 'Libraries\IndividualStructures\Cart\Properties.php';
$classMap['classes']['zn\individualstructures\cart\select'] = 'Libraries\IndividualStructures\Cart\Select.php';
$classMap['classes']['zn\individualstructures\cart\selectinterface'] = 'Libraries\IndividualStructures\Cart\SelectInterface.php';
$classMap['classes']['zn\individualstructures\cart\total'] = 'Libraries\IndividualStructures\Cart\Total.php';
$classMap['classes']['zn\individualstructures\cart\totalinterface'] = 'Libraries\IndividualStructures\Cart\TotalInterface.php';
$classMap['classes']['zn\individualstructures\cart\update'] = 'Libraries\IndividualStructures\Cart\Update.php';
$classMap['classes']['zn\individualstructures\cart\updateinterface'] = 'Libraries\IndividualStructures\Cart\UpdateInterface.php';
$classMap['classes']['coalesce'] = 'Libraries\IndividualStructures\Coalesce\Coalesce.php';
$classMap['classes']['coalesceinterface'] = 'Libraries\IndividualStructures\Coalesce\CoalesceInterface.php';
$classMap['classes']['zn\individualstructures\coalesceunittest'] = 'Libraries\IndividualStructures\Coalesce\CoalesceUnitTest.php';
$classMap['classes']['zn\individualstructures\compress\drivers\abstracts\compressdrivermappingabstract'] = 'Libraries\IndividualStructures\Compress\CompressDriverMappingAbstract.php';
$classMap['classes']['zn\individualstructures\compressunittest'] = 'Libraries\IndividualStructures\Compress\CompressUnitTest.php';
$classMap['classes']['zn\individualstructures\compress\drivers\bzdriver'] = 'Libraries\IndividualStructures\Compress\Drivers\BZ.php';
$classMap['classes']['zn\individualstructures\compress\drivers\gzdriver'] = 'Libraries\IndividualStructures\Compress\Drivers\GZ.php';
$classMap['classes']['zn\individualstructures\compress\drivers\lzfdriver'] = 'Libraries\IndividualStructures\Compress\Drivers\LZF.php';
$classMap['classes']['zn\individualstructures\compress\drivers\rardriver'] = 'Libraries\IndividualStructures\Compress\Drivers\RAR.php';
$classMap['classes']['zn\individualstructures\compress\drivers\zipdriver'] = 'Libraries\IndividualStructures\Compress\Drivers\ZIP.php';
$classMap['classes']['zn\individualstructures\compress\drivers\zlibdriver'] = 'Libraries\IndividualStructures\Compress\Drivers\ZLIB.php';
$classMap['classes']['zn\individualstructures\compress\exception\filenotfoundexception'] = 'Libraries\IndividualStructures\Compress\Exception\FileNotFoundException.php';
$classMap['classes']['zn\individualstructures\compress\exception\invalidargumentexception'] = 'Libraries\IndividualStructures\Compress\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\individualstructures\internalcompress'] = 'Libraries\IndividualStructures\Compress\InternalCompress.php';
$classMap['classes']['compress'] = 'Resources\Statics\IndividualStructures\Compress\InternalCompress.php';
$classMap['classes']['zn\individualstructures\internalcompressinterface'] = 'Libraries\IndividualStructures\Compress\InternalCompressInterface.php';
$classMap['classes']['zn\individualstructures\isunittest'] = 'Libraries\IndividualStructures\IS\ISUnitTest.php';
$classMap['classes']['zn\individualstructures\internalis'] = 'Libraries\IndividualStructures\IS\InternalIS.php';
$classMap['classes']['is'] = 'Resources\Statics\IndividualStructures\IS\InternalIS.php';
$classMap['classes']['zn\individualstructures\internalisinterface'] = 'Libraries\IndividualStructures\IS\InternalISInterface.php';
$classMap['classes']['zn\individualstructures\import\bootstrapextends'] = 'Libraries\IndividualStructures\Import\BootstrapExtends.php';
$classMap['classes']['zn\individualstructures\import\bootstrapinterface'] = 'Libraries\IndividualStructures\Import\BootstrapInterface.php';
$classMap['classes']['zn\individualstructures\import\exception\filenotfoundexception'] = 'Libraries\IndividualStructures\Import\Exception\FileNotFoundException.php';
$classMap['classes']['zn\individualstructures\import\exception\invalidargumentexception'] = 'Libraries\IndividualStructures\Import\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\individualstructures\import\font'] = 'Libraries\IndividualStructures\Import\Font.php';
$classMap['classes']['zn\individualstructures\import\handload'] = 'Libraries\IndividualStructures\Import\Handload.php';
$classMap['classes']['zn\individualstructures\import\handloadinterface'] = 'Libraries\IndividualStructures\Import\HandloadInterface.php';
$classMap['classes']['zn\individualstructures\importunittest'] = 'Libraries\IndividualStructures\Import\ImportUnitTest.php';
$classMap['classes']['zn\individualstructures\internalimport'] = 'Libraries\IndividualStructures\Import\InternalImport.php';
$classMap['classes']['import'] = 'Resources\Statics\IndividualStructures\Import\InternalImport.php';
$classMap['classes']['zn\individualstructures\internalimportinterface'] = 'Libraries\IndividualStructures\Import\InternalImportInterface.php';
$classMap['classes']['zn\individualstructures\import\masterpage'] = 'Libraries\IndividualStructures\Import\Masterpage.php';
$classMap['classes']['zn\individualstructures\import\masterpageinterface'] = 'Libraries\IndividualStructures\Import\MasterpageInterface.php';
$classMap['classes']['zn\individualstructures\import\package'] = 'Libraries\IndividualStructures\Import\Package.php';
$classMap['classes']['zn\individualstructures\import\packageinterface'] = 'Libraries\IndividualStructures\Import\PackageInterface.php';
$classMap['classes']['zn\individualstructures\import\properties'] = 'Libraries\IndividualStructures\Import\Properties.php';
$classMap['classes']['zn\individualstructures\import\script'] = 'Libraries\IndividualStructures\Import\Script.php';
$classMap['classes']['zn\individualstructures\import\something'] = 'Libraries\IndividualStructures\Import\Something.php';
$classMap['classes']['zn\individualstructures\import\somethinginterface'] = 'Libraries\IndividualStructures\Import\SomethingInterface.php';
$classMap['classes']['zn\individualstructures\import\style'] = 'Libraries\IndividualStructures\Import\Style.php';
$classMap['classes']['zn\individualstructures\import\template'] = 'Libraries\IndividualStructures\Import\Template.php';
$classMap['classes']['zn\individualstructures\import\templateinterface'] = 'Libraries\IndividualStructures\Import\TemplateInterface.php';
$classMap['classes']['zn\individualstructures\import\view'] = 'Libraries\IndividualStructures\Import\View.php';
$classMap['classes']['zn\individualstructures\import\viewinterface'] = 'Libraries\IndividualStructures\Import\ViewInterface.php';
$classMap['classes']['zn\individualstructures\internallang'] = 'Libraries\IndividualStructures\Lang\InternalLang.php';
$classMap['classes']['lang'] = 'Resources\Statics\IndividualStructures\Lang\InternalLang.php';
$classMap['classes']['zn\individualstructures\internallanginterface'] = 'Libraries\IndividualStructures\Lang\InternalLangInterface.php';
$classMap['classes']['zn\individualstructures\langunittest'] = 'Libraries\IndividualStructures\Lang\LangUnitTest.php';
$classMap['classes']['zn\individualstructures\internaloutput'] = 'Libraries\IndividualStructures\Output\InternalOutput.php';
$classMap['classes']['output'] = 'Resources\Statics\IndividualStructures\Output\InternalOutput.php';
$classMap['classes']['zn\individualstructures\internaloutputinterface'] = 'Libraries\IndividualStructures\Output\InternalOutputInterface.php';
$classMap['classes']['zn\individualstructures\outputunittest'] = 'Libraries\IndividualStructures\Output\OutputUnitTest.php';
$classMap['classes']['zn\individualstructures\internalpermission'] = 'Libraries\IndividualStructures\Permission\InternalPermission.php';
$classMap['classes']['permission'] = 'Resources\Statics\IndividualStructures\Permission\InternalPermission.php';
$classMap['classes']['zn\individualstructures\internalpermissioninterface'] = 'Libraries\IndividualStructures\Permission\InternalPermissionInterface.php';
$classMap['classes']['zn\individualstructures\permission\page'] = 'Libraries\IndividualStructures\Permission\Page.php';
$classMap['classes']['zn\individualstructures\permission\pageinterface'] = 'Libraries\IndividualStructures\Permission\PageInterface.php';
$classMap['classes']['zn\individualstructures\permission\permissionextends'] = 'Libraries\IndividualStructures\Permission\PermissionExtends.php';
$classMap['classes']['zn\individualstructures\permissionunittest'] = 'Libraries\IndividualStructures\Permission\PermissionUnitTest.php';
$classMap['classes']['zn\individualstructures\permission\process'] = 'Libraries\IndividualStructures\Permission\Process.php';
$classMap['classes']['zn\individualstructures\permission\processinterface'] = 'Libraries\IndividualStructures\Permission\ProcessInterface.php';
$classMap['classes']['zn\individualstructures\security\crosssiterequestforgery'] = 'Libraries\IndividualStructures\Security\CrossSiteRequestForgery.php';
$classMap['classes']['zn\individualstructures\security\crosssiterequestforgeryinterface'] = 'Libraries\IndividualStructures\Security\CrossSiteRequestForgeryInterface.php';
$classMap['classes']['zn\individualstructures\security\crosssitescripting'] = 'Libraries\IndividualStructures\Security\CrossSiteScripting.php';
$classMap['classes']['zn\individualstructures\security\crosssitescriptinginterface'] = 'Libraries\IndividualStructures\Security\CrossSiteScriptingInterface.php';
$classMap['classes']['zn\individualstructures\security\foreignchar'] = 'Libraries\IndividualStructures\Security\ForeignChar.php';
$classMap['classes']['zn\individualstructures\security\foreigncharinterface'] = 'Libraries\IndividualStructures\Security\ForeignCharInterface.php';
$classMap['classes']['zn\individualstructures\security\html'] = 'Libraries\IndividualStructures\Security\HTML.php';
$classMap['classes']['zn\individualstructures\security\htmlinterface'] = 'Libraries\IndividualStructures\Security\HTMLInterface.php';
$classMap['classes']['zn\individualstructures\security\injection'] = 'Libraries\IndividualStructures\Security\Injection.php';
$classMap['classes']['zn\individualstructures\security\injectioninterface'] = 'Libraries\IndividualStructures\Security\InjectionInterface.php';
$classMap['classes']['zn\individualstructures\internalsecure'] = 'Libraries\IndividualStructures\Security\InternalSecure.php';
$classMap['classes']['secure'] = 'Resources\Statics\IndividualStructures\Security\InternalSecure.php';
$classMap['classes']['zn\individualstructures\internalsecureinterface'] = 'Libraries\IndividualStructures\Security\InternalSecureInterface.php';
$classMap['classes']['zn\individualstructures\internalsecurity'] = 'Libraries\IndividualStructures\Security\InternalSecurity.php';
$classMap['classes']['security'] = 'Resources\Statics\IndividualStructures\Security\InternalSecurity.php';
$classMap['classes']['zn\individualstructures\internalsecurityinterface'] = 'Libraries\IndividualStructures\Security\InternalSecurityInterface.php';
$classMap['classes']['zn\individualstructures\security\nastycode'] = 'Libraries\IndividualStructures\Security\NastyCode.php';
$classMap['classes']['zn\individualstructures\security\nastycodeinterface'] = 'Libraries\IndividualStructures\Security\NastyCodeInterface.php';
$classMap['classes']['zn\individualstructures\security\php'] = 'Libraries\IndividualStructures\Security\PHP.php';
$classMap['classes']['zn\individualstructures\security\phpinterface'] = 'Libraries\IndividualStructures\Security\PHPInterface.php';
$classMap['classes']['zn\individualstructures\security\script'] = 'Libraries\IndividualStructures\Security\Script.php';
$classMap['classes']['zn\individualstructures\security\scriptinterface'] = 'Libraries\IndividualStructures\Security\ScriptInterface.php';
$classMap['classes']['zn\individualstructures\security\securityextends'] = 'Libraries\IndividualStructures\Security\SecurityExtends.php';
$classMap['classes']['zn\individualstructures\securityunittest'] = 'Libraries\IndividualStructures\Security\SecurityUnitTest.php';
$classMap['classes']['zn\individualstructures\socialite\exception\invalidargumentexception'] = 'Libraries\IndividualStructures\Socialite\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\individualstructures\internalsocialite'] = 'Libraries\IndividualStructures\Socialite\InternalSocialite.php';
$classMap['classes']['socialite'] = 'Resources\Statics\IndividualStructures\Socialite\InternalSocialite.php';
$classMap['classes']['zn\individualstructures\internalsocialiteinterface'] = 'Libraries\IndividualStructures\Socialite\InternalSocialiteInterface.php';
$classMap['classes']['zn\individualstructures\socialiteunittest'] = 'Libraries\IndividualStructures\Socialite\SocialiteUnitTest.php';
$classMap['classes']['hybridauth\adapter\abstractadapter'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Adapter\AbstractAdapter.php';
$classMap['classes']['hybridauth\adapter\adapterinterface'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Adapter\AdapterInterface.php';
$classMap['classes']['hybridauth\adapter\datastoretrait'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Adapter\DataStoreTrait.php';
$classMap['classes']['hybridauth\adapter\oauth1'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Adapter\OAuth1.php';
$classMap['classes']['hybridauth\adapter\oauth2'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Adapter\OAuth2.php';
$classMap['classes']['hybridauth\adapter\openid'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Adapter\OpenID.php';
$classMap['classes']['hybridauth\data\collection'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Data\Collection.php';
$classMap['classes']['hybridauth\data\parser'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Data\Parser.php';
$classMap['classes']['hybridauth\exception\authorizationdeniedexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\AuthorizationDeniedException.php';
$classMap['classes']['hybridauth\exception\badmethodcallexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\BadMethodCallException.php';
$classMap['classes']['hybridauth\exception\exception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\Exception.php';
$classMap['classes']['hybridauth\exception\exceptioninterface'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\ExceptionInterface.php';
$classMap['classes']['hybridauth\exception\httpclientfailureexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\HttpClientFailureException.php';
$classMap['classes']['hybridauth\exception\httprequestfailedexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\HttpRequestFailedException.php';
$classMap['classes']['hybridauth\exception\invalidaccesstokenexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\InvalidAccessTokenException.php';
$classMap['classes']['hybridauth\exception\invalidapplicationcredentialsexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\InvalidApplicationCredentialsException.php';
$classMap['classes']['hybridauth\exception\invalidargumentexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\InvalidArgumentException.php';
$classMap['classes']['hybridauth\exception\invalidauthorizationcodeexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\InvalidAuthorizationCodeException.php';
$classMap['classes']['hybridauth\exception\invalidauthorizationstateexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\InvalidAuthorizationStateException.php';
$classMap['classes']['hybridauth\exception\invalidoauthtokenexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\InvalidOauthTokenException.php';
$classMap['classes']['hybridauth\exception\invalidopenididentifierexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\InvalidOpenidIdentifierException.php';
$classMap['classes']['hybridauth\exception\notimplementedexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\NotImplementedException.php';
$classMap['classes']['hybridauth\exception\runtimeexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\RuntimeException.php';
$classMap['classes']['hybridauth\exception\unexpectedapiresponseexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\UnexpectedApiResponseException.php';
$classMap['classes']['hybridauth\exception\unexpectedvalueexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Exception\UnexpectedValueException.php';
$classMap['classes']['hybridauth\httpclient\curl'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\HttpClient\Curl.php';
$classMap['classes']['hybridauth\httpclient\guzzle'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\HttpClient\Guzzle.php';
$classMap['classes']['hybridauth\httpclient\httpclientinterface'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\HttpClient\HttpClientInterface.php';
$classMap['classes']['hybridauth\httpclient\util'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\HttpClient\Util.php';
$classMap['classes']['hybridauth\hybridauth'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Hybridauth.php';
$classMap['classes']['hybridauth\logger\logger'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Logger\Logger.php';
$classMap['classes']['hybridauth\logger\loggerinterface'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Logger\LoggerInterface.php';
$classMap['classes']['hybridauth\logger\psr3loggerwrapper'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Logger\Psr3LoggerWrapper.php';
$classMap['classes']['hybridauth\provider\aolopenid'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\AOLOpenID.php';
$classMap['classes']['hybridauth\provider\bitbucket'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\BitBucket.php';
$classMap['classes']['hybridauth\provider\discord'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\Discord.php';
$classMap['classes']['hybridauth\provider\disqus'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\Disqus.php';
$classMap['classes']['hybridauth\provider\dribbble'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\Dribbble.php';
$classMap['classes']['hybridauth\provider\facebook'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\Facebook.php';
$classMap['classes']['hybridauth\provider\foursquare'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\Foursquare.php';
$classMap['classes']['hybridauth\provider\github'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\GitHub.php';
$classMap['classes']['hybridauth\provider\gitlab'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\GitLab.php';
$classMap['classes']['hybridauth\provider\google'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\Google.php';
$classMap['classes']['hybridauth\provider\instagram'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\Instagram.php';
$classMap['classes']['hybridauth\provider\linkedin'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\LinkedIn.php';
$classMap['classes']['hybridauth\provider\odnoklassniki'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\Odnoklassniki.php';
$classMap['classes']['hybridauth\provider\openid'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\OpenID.php';
$classMap['classes']['hybridauth\provider\paypalopenid'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\PaypalOpenID.php';
$classMap['classes']['hybridauth\provider\reddit'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\Reddit.php';
$classMap['classes']['hybridauth\provider\stackexchange'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\StackExchange.php';
$classMap['classes']['hybridauth\provider\stackexchangeopenid'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\StackExchangeOpenID.php';
$classMap['classes']['hybridauth\provider\steam'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\Steam.php';
$classMap['classes']['hybridauth\provider\tumblr'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\Tumblr.php';
$classMap['classes']['hybridauth\provider\twitchtv'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\TwitchTV.php';
$classMap['classes']['hybridauth\provider\twitter'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\Twitter.php';
$classMap['classes']['hybridauth\provider\vkontakte'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\Vkontakte.php';
$classMap['classes']['hybridauth\provider\windowslive'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\WindowsLive.php';
$classMap['classes']['hybridauth\provider\wordpress'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\WordPress.php';
$classMap['classes']['hybridauth\provider\yahoo'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\Yahoo.php';
$classMap['classes']['hybridauth\provider\yahooopenid'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Provider\YahooOpenID.php';
$classMap['classes']['hybridauth\storage\session'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Storage\Session.php';
$classMap['classes']['hybridauth\storage\storageinterface'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Storage\StorageInterface.php';
$classMap['classes']['hybridauth\thirdparty\oauth\oauthconsumer'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Thirdparty\OAuth\OAuthConsumer.php';
$classMap['classes']['hybridauth\thirdparty\oauth\oauthrequest'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Thirdparty\OAuth\OAuthRequest.php';
$classMap['classes']['hybridauth\thirdparty\oauth\oauthsignaturemethod'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Thirdparty\OAuth\OAuthSignatureMethod.php';
$classMap['classes']['hybridauth\thirdparty\oauth\oauthsignaturemethodhmacsha1'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Thirdparty\OAuth\OAuthSignatureMethodHMACSHA1.php';
$classMap['classes']['hybridauth\thirdparty\oauth\oauthutil'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Thirdparty\OAuth\OAuthUtil.php';
$classMap['classes']['hybridauth\thirdparty\openid\errorexception'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\Thirdparty\OpenID\LightOpenID.php';
$classMap['classes']['hybridauth\user\activity'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\User\Activity.php';
$classMap['classes']['hybridauth\user\contact'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\User\Contact.php';
$classMap['classes']['hybridauth\user\profile'] = 'Libraries\IndividualStructures\Socialite\Thirdparty\User\Profile.php';
$classMap['classes']['zn\individualstructures\internalsupport'] = 'Libraries\IndividualStructures\Support\InternalSupport.php';
$classMap['classes']['support'] = 'Resources\Statics\IndividualStructures\Support\InternalSupport.php';
$classMap['classes']['zn\individualstructures\internalsupportinterface'] = 'Libraries\IndividualStructures\Support\InternalSupportInterface.php';
$classMap['classes']['zn\individualstructures\supportunittest'] = 'Libraries\IndividualStructures\Support\SupportUnitTest.php';
$classMap['classes']['zn\individualstructures\user\data'] = 'Libraries\IndividualStructures\User\Data.php';
$classMap['classes']['zn\individualstructures\user\datainterface'] = 'Libraries\IndividualStructures\User\DataInterface.php';
$classMap['classes']['zn\individualstructures\user\factory'] = 'Libraries\IndividualStructures\User\Factory.php';
$classMap['classes']['zn\individualstructures\user\forgotpassword'] = 'Libraries\IndividualStructures\User\ForgotPassword.php';
$classMap['classes']['zn\individualstructures\user\forgotpasswordinterface'] = 'Libraries\IndividualStructures\User\ForgotPasswordInterface.php';
$classMap['classes']['zn\individualstructures\user\ip'] = 'Libraries\IndividualStructures\User\IP.php';
$classMap['classes']['zn\individualstructures\user\ipinterface'] = 'Libraries\IndividualStructures\User\IPInterface.php';
$classMap['classes']['zn\individualstructures\user\information'] = 'Libraries\IndividualStructures\User\Information.php';
$classMap['classes']['zn\individualstructures\user\informationinterface'] = 'Libraries\IndividualStructures\User\InformationInterface.php';
$classMap['classes']['zn\individualstructures\internaluser'] = 'Libraries\IndividualStructures\User\InternalUser.php';
$classMap['classes']['user'] = 'Resources\Statics\IndividualStructures\User\InternalUser.php';
$classMap['classes']['zn\individualstructures\internaluserinterface'] = 'Libraries\IndividualStructures\User\InternalUserInterface.php';
$classMap['classes']['zn\individualstructures\user\login'] = 'Libraries\IndividualStructures\User\Login.php';
$classMap['classes']['zn\individualstructures\user\logininterface'] = 'Libraries\IndividualStructures\User\LoginInterface.php';
$classMap['classes']['zn\individualstructures\user\logout'] = 'Libraries\IndividualStructures\User\Logout.php';
$classMap['classes']['zn\individualstructures\user\logoutinterface'] = 'Libraries\IndividualStructures\User\LogoutInterface.php';
$classMap['classes']['zn\individualstructures\user\properties'] = 'Libraries\IndividualStructures\User\Properties.php';
$classMap['classes']['zn\individualstructures\user\register'] = 'Libraries\IndividualStructures\User\Register.php';
$classMap['classes']['zn\individualstructures\user\registerinterface'] = 'Libraries\IndividualStructures\User\RegisterInterface.php';
$classMap['classes']['zn\individualstructures\user\sendemail'] = 'Libraries\IndividualStructures\User\SendEmail.php';
$classMap['classes']['zn\individualstructures\user\sendemailinterface'] = 'Libraries\IndividualStructures\User\SendEmailInterface.php';
$classMap['classes']['zn\individualstructures\user\update'] = 'Libraries\IndividualStructures\User\Update.php';
$classMap['classes']['zn\individualstructures\user\updateinterface'] = 'Libraries\IndividualStructures\User\UpdateInterface.php';
$classMap['classes']['zn\individualstructures\user\userextends'] = 'Libraries\IndividualStructures\User\UserExtends.php';
$classMap['classes']['zn\individualstructures\userunittest'] = 'Libraries\IndividualStructures\User\UserUnitTest.php';
$classMap['classes']['configurableability'] = 'Libraries\Requirements\Abilities\Configurable.php';
$classMap['classes']['conversationability'] = 'Libraries\Requirements\Abilities\Conversation.php';
$classMap['classes']['driverability'] = 'Libraries\Requirements\Abilities\Driver.php';
$classMap['classes']['zn\requirements\abilities\exception\undefinedconstexception'] = 'Libraries\Requirements\Abilities\Exception\UndefinedConstException.php';
$classMap['classes']['exclusionability'] = 'Libraries\Requirements\Abilities\Exclusion.php';
$classMap['classes']['factoryability'] = 'Libraries\Requirements\Abilities\Factory.php';
$classMap['classes']['informationability'] = 'Libraries\Requirements\Abilities\Information.php';
$classMap['classes']['magicfactoryability'] = 'Libraries\Requirements\Abilities\MagicFactory.php';
$classMap['classes']['revolvingability'] = 'Libraries\Requirements\Abilities\Revolving.php';
$classMap['classes']['unittestability'] = 'Libraries\Requirements\Abilities\UnitTest.php';
$classMap['classes']['zn\requirements\controllers\basecontroller'] = 'Libraries\Requirements\Controllers\BaseController.php';
$classMap['classes']['zn\requirements\controllers\clcontroller'] = 'Libraries\Requirements\Controllers\CLController.php';
$classMap['classes']['zn\requirements\controllers\callcontroller'] = 'Libraries\Requirements\Controllers\CallController.php';
$classMap['classes']['project\controllers\controller'] = 'Libraries\Requirements\Controllers\Controller.php';
$classMap['classes']['zn\requirements\controllers\factorycontroller'] = 'Libraries\Requirements\Controllers\FactoryController.php';
$classMap['classes']['zn\requirements\controllers\unittestcontroller'] = 'Libraries\Requirements\Controllers\UnitTestController.php';
$classMap['classes']['zn\requirements\internaldebug'] = 'Libraries\Requirements\Debug\InternalDebug.php';
$classMap['classes']['debug'] = 'Resources\Statics\Requirements\Debug\InternalDebug.php';
$classMap['classes']['zn\requirements\internaldebuginterface'] = 'Libraries\Requirements\Debug\InternalDebugInterface.php';
$classMap['classes']['zn\requirements\models\grandmodel'] = 'Libraries\Requirements\Models\GrandModel.php';
$classMap['classes']['zn\requirements\models\model'] = 'Libraries\Requirements\Models\Model.php';
$classMap['classes']['zn\classes\autoloader'] = 'Libraries\Requirements\System\Autoloader.php';
$classMap['classes']['project\commands\command'] = 'Libraries\Requirements\System\Command.php';
$classMap['classes']['zn\classes\config'] = 'Libraries\Requirements\System\Config.php';
$classMap['classes']['external\commands\command'] = 'Libraries\Requirements\System\ExternalCommand.php';
$classMap['classes']['zn\requirements\system\factory'] = 'Libraries\Requirements\System\Factory.php';
$classMap['classes']['zn\in'] = 'Libraries\Requirements\System\In.php';
$classMap['classes']['zn\requirements\system\internalznunittest'] = 'Libraries\Requirements\System\InternalZNUnitTest.php';
$classMap['classes']['znunittest'] = 'Resources\Statics\Requirements\System\InternalZNUnitTest.php';
$classMap['classes']['zn\core\kernel'] = 'Libraries\Requirements\System\Kernel.php';
$classMap['classes']['zn\requirements\system\restoration'] = 'Libraries\Requirements\System\Restoration.php';
$classMap['classes']['zn\requirements\system\staticaccess'] = 'Libraries\Requirements\System\StaticAccess.php';
$classMap['classes']['zn\core\structure'] = 'Libraries\Requirements\System\Structure.php';
$classMap['classes']['project\controllers\zn'] = 'Libraries\Requirements\System\ZN.php';
$classMap['classes']['zn\requirements\system\zerocore'] = 'Libraries\Requirements\System\Zerocore.php';
$classMap['classes']['zn\services\remote\curlunittest'] = 'Libraries\Services\Remote\CURL\CURLUnitTest.php';
$classMap['classes']['zn\services\remote\curl\exception\invalidargumentexception'] = 'Libraries\Services\Remote\CURL\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\services\remote\internalcurl'] = 'Libraries\Services\Remote\CURL\InternalCURL.php';
$classMap['classes']['curl'] = 'Resources\Statics\Services\Remote\CURL\InternalCURL.php';
$classMap['classes']['zn\services\remote\internalcurlinterface'] = 'Libraries\Services\Remote\CURL\InternalCURLInterface.php';
$classMap['classes']['zn\services\remote\crontabunittest'] = 'Libraries\Services\Remote\Crontab\CrontabUnitTest.php';
$classMap['classes']['zn\services\remote\crontab\exception\invalidtimeformatexception'] = 'Libraries\Services\Remote\Crontab\Exception\InvalidTimeFormatException.php';
$classMap['classes']['zn\services\remote\internalcrontab'] = 'Libraries\Services\Remote\Crontab\InternalCrontab.php';
$classMap['classes']['crontab'] = 'Resources\Statics\Services\Remote\Crontab\InternalCrontab.php';
$classMap['classes']['zn\services\remote\internalcrontabinterface'] = 'Libraries\Services\Remote\Crontab\InternalCrontabInterface.php';
$classMap['classes']['zn\services\remote\internalcrontabintervalinterface'] = 'Libraries\Services\Remote\Crontab\InternalCrontabIntervalInterface.php';
$classMap['classes']['zn\services\remote\internalcrontabintervaltrait'] = 'Libraries\Services\Remote\Crontab\InternalCrontabIntervalTrait.php';
$classMap['classes']['zn\services\remote\email\drivers\imapdriver'] = 'Libraries\Services\Remote\Email\Drivers\Imap.php';
$classMap['classes']['zn\services\remote\email\drivers\maildriver'] = 'Libraries\Services\Remote\Email\Drivers\Mail.php';
$classMap['classes']['zn\services\remote\email\drivers\pipedriver'] = 'Libraries\Services\Remote\Email\Drivers\Pipe.php';
$classMap['classes']['zn\services\remote\email\drivers\smtpdriver'] = 'Libraries\Services\Remote\Email\Drivers\SMTP.php';
$classMap['classes']['zn\services\remote\email\drivers\senddriver'] = 'Libraries\Services\Remote\Email\Drivers\Send.php';
$classMap['classes']['zn\services\remote\abstracts\emailmappingabstract'] = 'Libraries\Services\Remote\Email\EmailMappingAbstract.php';
$classMap['classes']['zn\services\remote\emailunittest'] = 'Libraries\Services\Remote\Email\EmailUnitTest.php';
$classMap['classes']['zn\services\remote\email\exception\attachmentmissingexception'] = 'Libraries\Services\Remote\Email\Exception\AttachmentMissingException.php';
$classMap['classes']['zn\services\remote\email\exception\attachmentunreadableexception'] = 'Libraries\Services\Remote\Email\Exception\AttachmentUnreadableException.php';
$classMap['classes']['zn\services\remote\email\exception\failuresendemailexception'] = 'Libraries\Services\Remote\Email\Exception\FailureSendEmailException.php';
$classMap['classes']['zn\services\remote\email\exception\ioexception'] = 'Libraries\Services\Remote\Email\Exception\IOException.php';
$classMap['classes']['zn\services\remote\email\exception\invalidargumentexception'] = 'Libraries\Services\Remote\Email\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\services\remote\email\exception\nofromexception'] = 'Libraries\Services\Remote\Email\Exception\NoFromException.php';
$classMap['classes']['zn\services\remote\email\exception\smtpauthexception'] = 'Libraries\Services\Remote\Email\Exception\SMTPAuthException.php';
$classMap['classes']['zn\services\remote\email\exception\smtpconnectexception'] = 'Libraries\Services\Remote\Email\Exception\SMTPConnectException.php';
$classMap['classes']['zn\services\remote\email\exception\smtpdatafailureexception'] = 'Libraries\Services\Remote\Email\Exception\SMTPDataFailureException.php';
$classMap['classes']['zn\services\remote\email\exception\smtpemptyhostnameexception'] = 'Libraries\Services\Remote\Email\Exception\SMTPEmptyHostNameException.php';
$classMap['classes']['zn\services\remote\email\exception\smtpemptyuserpasswordexception'] = 'Libraries\Services\Remote\Email\Exception\SMTPEmptyUserPasswordException.php';
$classMap['classes']['zn\services\remote\email\exception\smtpfailedloginexception'] = 'Libraries\Services\Remote\Email\Exception\SMTPFailedLoginException.php';
$classMap['classes']['zn\services\remote\internalemail'] = 'Libraries\Services\Remote\Email\InternalEmail.php';
$classMap['classes']['email'] = 'Resources\Statics\Services\Remote\Email\InternalEmail.php';
$classMap['classes']['zn\services\remote\internalemailinterface'] = 'Libraries\Services\Remote\Email\InternalEmailInterface.php';
$classMap['classes']['zn\services\remote\internalprocessor'] = 'Libraries\Services\Remote\Processor\InternalProcessor.php';
$classMap['classes']['processor'] = 'Resources\Statics\Services\Remote\Processor\InternalProcessor.php';
$classMap['classes']['zn\services\remote\internalprocessorinterface'] = 'Libraries\Services\Remote\Processor\InternalProcessorInterface.php';
$classMap['classes']['zn\services\remote\processorunittest'] = 'Libraries\Services\Remote\Processor\ProcessorUnitTest.php';
$classMap['classes']['zn\services\remote\remotecommon'] = 'Libraries\Services\Remote\RemoteCommon.php';
$classMap['classes']['zn\services\remote\remotecommoninterface'] = 'Libraries\Services\Remote\RemoteCommonInterface.php';
$classMap['classes']['zn\services\remote\internalrestful'] = 'Libraries\Services\Remote\Restful\InternalRestful.php';
$classMap['classes']['restful'] = 'Resources\Statics\Services\Remote\Restful\InternalRestful.php';
$classMap['classes']['zn\services\remote\internalrestfulinterface'] = 'Libraries\Services\Remote\Restful\InternalRestfulInterface.php';
$classMap['classes']['zn\services\remote\restfulunittest'] = 'Libraries\Services\Remote\Restful\RestfulUnitTest.php';
$classMap['classes']['zn\services\remote\ssh\exception\invalidargumentexception'] = 'Libraries\Services\Remote\SSH\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\services\remote\internalssh'] = 'Libraries\Services\Remote\SSH\InternalSSH.php';
$classMap['classes']['ssh'] = 'Resources\Statics\Services\Remote\SSH\InternalSSH.php';
$classMap['classes']['zn\services\remote\internalsshinterface'] = 'Libraries\Services\Remote\SSH\InternalSSHInterface.php';
$classMap['classes']['zn\services\remote\sshunittest'] = 'Libraries\Services\Remote\SSH\SSHUnitTest.php';
$classMap['classes']['zn\services\request\internalredirect'] = 'Libraries\Services\Request\Redirect\InternalRedirect.php';
$classMap['classes']['redirect'] = 'Resources\Statics\Services\Request\Redirect\InternalRedirect.php';
$classMap['classes']['zn\services\request\internalredirectinterface'] = 'Libraries\Services\Request\Redirect\InternalRedirectInterface.php';
$classMap['classes']['zn\services\request\redirectunittest'] = 'Libraries\Services\Request\Redirect\RedirectUnitTest.php';
$classMap['classes']['zn\services\request\internalrequest'] = 'Libraries\Services\Request\Request\InternalRequest.php';
$classMap['classes']['request'] = 'Resources\Statics\Services\Request\Request\InternalRequest.php';
$classMap['classes']['zn\services\request\internalrequestinterface'] = 'Libraries\Services\Request\Request\InternalRequestInterface.php';
$classMap['classes']['zn\services\request\requestunittest'] = 'Libraries\Services\Request\Request\RequestUnitTest.php';
$classMap['classes']['zn\services\request\internalroute'] = 'Libraries\Services\Request\Route\InternalRoute.php';
$classMap['classes']['route'] = 'Resources\Statics\Services\Request\Route\InternalRoute.php';
$classMap['classes']['zn\services\request\internalrouteinterface'] = 'Libraries\Services\Request\Route\InternalRouteInterface.php';
$classMap['classes']['zn\services\request\routeunittest'] = 'Libraries\Services\Request\Route\RouteUnitTest.php';
$classMap['classes']['zn\services\request\internaluri'] = 'Libraries\Services\Request\URI\InternalURI.php';
$classMap['classes']['uri'] = 'Resources\Statics\Services\Request\URI\InternalURI.php';
$classMap['classes']['zn\services\request\internaluriinterface'] = 'Libraries\Services\Request\URI\InternalURIInterface.php';
$classMap['classes']['zn\services\request\uriunittest'] = 'Libraries\Services\Request\URI\URIUnitTest.php';
$classMap['classes']['zn\services\request\internalurl'] = 'Libraries\Services\Request\URL\InternalURL.php';
$classMap['classes']['url'] = 'Resources\Statics\Services\Request\URL\InternalURL.php';
$classMap['classes']['zn\services\request\internalurlinterface'] = 'Libraries\Services\Request\URL\InternalURLInterface.php';
$classMap['classes']['zn\services\request\urlunittest'] = 'Libraries\Services\Request\URL\URLUnitTest.php';
$classMap['classes']['zn\services\response\http\exception\invalidargumentexception'] = 'Libraries\Services\Response\HTTP\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\services\response\httpunittest'] = 'Libraries\Services\Response\HTTP\HTTPUnitTest.php';
$classMap['classes']['zn\services\response\internalhttp'] = 'Libraries\Services\Response\HTTP\InternalHTTP.php';
$classMap['classes']['http'] = 'Resources\Statics\Services\Response\HTTP\InternalHTTP.php';
$classMap['classes']['zn\services\response\internalhttpinterface'] = 'Libraries\Services\Response\HTTP\InternalHTTPInterface.php';
$classMap['classes']['zn\services\response\internalmethod'] = 'Libraries\Services\Response\Method\InternalMethod.php';
$classMap['classes']['method'] = 'Resources\Statics\Services\Response\Method\InternalMethod.php';
$classMap['classes']['zn\services\response\internalmethodinterface'] = 'Libraries\Services\Response\Method\InternalMethodInterface.php';
$classMap['classes']['zn\services\response\methodunittest'] = 'Libraries\Services\Response\Method\MethodUnitTest.php';
$classMap['classes']['zn\services\response\http\exception\runtimeexception'] = 'Libraries\Services\Response\Network\Exception\RuntimeException.php';
$classMap['classes']['zn\services\response\http\exception\socketexception'] = 'Libraries\Services\Response\Network\Exception\SocketException.php';
$classMap['classes']['zn\services\response\internalnet'] = 'Libraries\Services\Response\Network\InternalNet.php';
$classMap['classes']['net'] = 'Resources\Statics\Services\Response\Network\InternalNet.php';
$classMap['classes']['zn\services\response\internalnetinterface'] = 'Libraries\Services\Response\Network\InternalNetInterface.php';
$classMap['classes']['zn\services\response\netunittest'] = 'Libraries\Services\Response\Network\NetUnitTest.php';
$classMap['classes']['zn\services\response\internalserver'] = 'Libraries\Services\Response\Server\InternalServer.php';
$classMap['classes']['server'] = 'Resources\Statics\Services\Response\Server\InternalServer.php';
$classMap['classes']['zn\services\response\internalserverinterface'] = 'Libraries\Services\Response\Server\InternalServerInterface.php';
$classMap['classes']['zn\services\response\serverunittest'] = 'Libraries\Services\Response\Server\ServerUnitTest.php';
$classMap['classes']['zn\services\response\cookieunittest'] = 'Libraries\Services\Response\SessionCookie\CookieUnitTest.php';
$classMap['classes']['zn\services\response\sessioncookie\exception\setcookieexception'] = 'Libraries\Services\Response\SessionCookie\Exception\SetcookieException.php';
$classMap['classes']['zn\services\response\internalcookie'] = 'Libraries\Services\Response\SessionCookie\InternalCookie.php';
$classMap['classes']['cookie'] = 'Resources\Statics\Services\Response\SessionCookie\InternalCookie.php';
$classMap['classes']['zn\services\response\internalcookieinterface'] = 'Libraries\Services\Response\SessionCookie\InternalCookieInterface.php';
$classMap['classes']['zn\services\response\internalsession'] = 'Libraries\Services\Response\SessionCookie\InternalSession.php';
$classMap['classes']['session'] = 'Resources\Statics\Services\Response\SessionCookie\InternalSession.php';
$classMap['classes']['zn\services\response\internalsessioninterface'] = 'Libraries\Services\Response\SessionCookie\InternalSessionInterface.php';
$classMap['classes']['zn\services\response\sessioncookiecommoninterface'] = 'Libraries\Services\Response\SessionCookie\SessionCookieCommonInterface.php';
$classMap['classes']['zn\services\response\sessioncookiecommontrait'] = 'Libraries\Services\Response\SessionCookie\SessionCookieCommonTrait.php';
$classMap['classes']['zn\services\response\sessionunittest'] = 'Libraries\Services\Response\SessionCookie\SessionUnitTest.php';
$classMap['classes']['zn\viewobjects\cdnunittest'] = 'Libraries\ViewObjects\CDN\CDNUnitTest.php';
$classMap['classes']['zn\viewobjects\internalcdn'] = 'Libraries\ViewObjects\CDN\InternalCDN.php';
$classMap['classes']['cdn'] = 'Resources\Statics\ViewObjects\CDN\InternalCDN.php';
$classMap['classes']['zn\viewobjects\internalcdninterface'] = 'Libraries\ViewObjects\CDN\InternalCDNInterface.php';
$classMap['classes']['zn\viewobjects\calendarunittest'] = 'Libraries\ViewObjects\Calendar\CalendarUnitTest.php';
$classMap['classes']['zn\viewobjects\internalcalendar'] = 'Libraries\ViewObjects\Calendar\InternalCalendar.php';
$classMap['classes']['calendar'] = 'Resources\Statics\ViewObjects\Calendar\InternalCalendar.php';
$classMap['classes']['zn\viewobjects\internalcalendarinterface'] = 'Libraries\ViewObjects\Calendar\InternalCalendarInterface.php';
$classMap['classes']['zn\viewobjects\captchaunittest'] = 'Libraries\ViewObjects\Captcha\CaptchaUnitTest.php';
$classMap['classes']['zn\viewobjects\internalcaptcha'] = 'Libraries\ViewObjects\Captcha\InternalCaptcha.php';
$classMap['classes']['captcha'] = 'Resources\Statics\ViewObjects\Captcha\InternalCaptcha.php';
$classMap['classes']['zn\viewobjects\internalcaptchainterface'] = 'Libraries\ViewObjects\Captcha\InternalCaptchaInterface.php';
$classMap['classes']['zn\viewobjects\grids\dbgridunittest'] = 'Libraries\ViewObjects\Grids\DBGridUnitTest.php';
$classMap['classes']['zn\viewobjects\grids\exception\databaseerrorexception'] = 'Libraries\ViewObjects\Grids\Exception\DatabaseErrorException.php';
$classMap['classes']['zn\viewobjects\grids\exception\nosearchexception'] = 'Libraries\ViewObjects\Grids\Exception\NoSearchException.php';
$classMap['classes']['zn\viewobjects\grids\exception\notableexception'] = 'Libraries\ViewObjects\Grids\Exception\NoTableException.php';
$classMap['classes']['zn\viewobjects\grids\abstracts\gridabstract'] = 'Libraries\ViewObjects\Grids\GridAbstract.php';
$classMap['classes']['zn\viewobjects\grids\internaldbgrid'] = 'Libraries\ViewObjects\Grids\InternalDBGrid.php';
$classMap['classes']['dbgrid'] = 'Resources\Statics\ViewObjects\Grids\InternalDBGrid.php';
$classMap['classes']['zn\viewobjects\grids\internalmlgrid'] = 'Libraries\ViewObjects\Grids\InternalMLGrid.php';
$classMap['classes']['mlgrid'] = 'Resources\Statics\ViewObjects\Grids\InternalMLGrid.php';
$classMap['classes']['zn\viewobjects\grids\mlgridunittest'] = 'Libraries\ViewObjects\Grids\MLGridUnitTest.php';
$classMap['classes']['zn\viewobjects\javascript\components\aceeditor'] = 'Libraries\ViewObjects\Javascript\Components\AceEditor\AceEditor.php';
$classMap['classes']['zn\viewobjects\javascript\components\aceeditorinterface'] = 'Libraries\ViewObjects\Javascript\Components\AceEditor\AceEditorInterface.php';
$classMap['classes']['zn\viewobjects\javascript\components\charts'] = 'Libraries\ViewObjects\Javascript\Components\Charts\Charts.php';
$classMap['classes']['zn\viewobjects\javascript\components\chartsinterface'] = 'Libraries\ViewObjects\Javascript\Components\Charts\ChartsInterface.php';
$classMap['classes']['zn\viewobjects\javascript\components\componentsextends'] = 'Libraries\ViewObjects\Javascript\Components\ComponentsExtends.php';
$classMap['classes']['zn\viewobjects\javascript\components\datatables'] = 'Libraries\ViewObjects\Javascript\Components\Datatables\Datatables.php';
$classMap['classes']['zn\viewobjects\javascript\components\datatablesinterface'] = 'Libraries\ViewObjects\Javascript\Components\Datatables\DatatablesInterface.php';
$classMap['classes']['zn\viewobjects\javascript\components\datepicker'] = 'Libraries\ViewObjects\Javascript\Components\Datepicker\Datepicker.php';
$classMap['classes']['zn\viewobjects\javascript\components\datepickerinterface'] = 'Libraries\ViewObjects\Javascript\Components\Datepicker\DatepickerInterface.php';
$classMap['classes']['$class'] = 'Libraries\ViewObjects\Javascript\Components\Select2\View.php';
$classMap['classes']['zn\viewobjects\javascript\components\dropdown'] = 'Libraries\ViewObjects\Javascript\Components\Dropdown\Dropdown.php';
$classMap['classes']['zn\viewobjects\javascript\components\dropdowninterface'] = 'Libraries\ViewObjects\Javascript\Components\Dropdown\DropdownInterface.php';
$classMap['classes']['zn\viewobjects\javascript\components\flexslider'] = 'Libraries\ViewObjects\Javascript\Components\FlexSlider\FlexSlider.php';
$classMap['classes']['zn\viewobjects\javascript\components\flexsliderinterface'] = 'Libraries\ViewObjects\Javascript\Components\FlexSlider\FlexSliderInterface.php';
$classMap['classes']['zn\viewobjects\javascript\components\form'] = 'Libraries\ViewObjects\Javascript\Components\Form\Form.php';
$classMap['classes']['zn\viewobjects\javascript\components\forminterface'] = 'Libraries\ViewObjects\Javascript\Components\Form\FormInterface.php';
$classMap['classes']['zn\viewobjects\javascript\components\gridsystem'] = 'Libraries\ViewObjects\Javascript\Components\GridSystem\GridSystem.php';
$classMap['classes']['zn\viewobjects\javascript\components\gridsysteminterface'] = 'Libraries\ViewObjects\Javascript\Components\GridSystem\GridSystemInterface.php';
$classMap['classes']['zn\viewobjects\javascript\components\modal'] = 'Libraries\ViewObjects\Javascript\Components\Modal\Modal.php';
$classMap['classes']['zn\viewobjects\javascript\components\modalinterface'] = 'Libraries\ViewObjects\Javascript\Components\Modal\ModalInterface.php';
$classMap['classes']['zn\viewobjects\javascript\components\pagination'] = 'Libraries\ViewObjects\Javascript\Components\Pagination\Pagination.php';
$classMap['classes']['zn\viewobjects\javascript\components\paginationinterface'] = 'Libraries\ViewObjects\Javascript\Components\Pagination\PaginationInterface.php';
$classMap['classes']['zn\viewobjects\javascript\components\select2'] = 'Libraries\ViewObjects\Javascript\Components\Select2\Select2.php';
$classMap['classes']['zn\viewobjects\javascript\components\select2interface'] = 'Libraries\ViewObjects\Javascript\Components\Select2\Select2Interface.php';
$classMap['classes']['zn\viewobjects\javascript\components\tabs'] = 'Libraries\ViewObjects\Javascript\Components\Tabs\Tabs.php';
$classMap['classes']['zn\viewobjects\javascript\components\tabsinterface'] = 'Libraries\ViewObjects\Javascript\Components\Tabs\TabsInterface.php';
$classMap['classes']['zn\viewobjects\javascript\helpers\action'] = 'Libraries\ViewObjects\Javascript\Helpers\Action.php';
$classMap['classes']['zn\viewobjects\javascript\helpers\actioninterface'] = 'Libraries\ViewObjects\Javascript\Helpers\ActionInterface.php';
$classMap['classes']['zn\viewobjects\javascript\helpers\ajax'] = 'Libraries\ViewObjects\Javascript\Helpers\Ajax.php';
$classMap['classes']['zn\viewobjects\javascript\helpers\ajaxinterface'] = 'Libraries\ViewObjects\Javascript\Helpers\AjaxInterface.php';
$classMap['classes']['zn\viewobjects\javascript\helpers\animate'] = 'Libraries\ViewObjects\Javascript\Helpers\Animate.php';
$classMap['classes']['zn\viewobjects\javascript\helpers\animateinterface'] = 'Libraries\ViewObjects\Javascript\Helpers\AnimateInterface.php';
$classMap['classes']['zn\viewobjects\javascript\helpers\event'] = 'Libraries\ViewObjects\Javascript\Helpers\Event.php';
$classMap['classes']['zn\viewobjects\javascript\helpers\eventinterface'] = 'Libraries\ViewObjects\Javascript\Helpers\EventInterface.php';
$classMap['classes']['zn\viewobjects\internaljc'] = 'Libraries\ViewObjects\Javascript\InternalJC.php';
$classMap['classes']['jc'] = 'Resources\Statics\ViewObjects\Javascript\InternalJC.php';
$classMap['classes']['zn\viewobjects\internaljq'] = 'Libraries\ViewObjects\Javascript\InternalJQ.php';
$classMap['classes']['jq'] = 'Resources\Statics\ViewObjects\Javascript\InternalJQ.php';
$classMap['classes']['zn\viewobjects\internaljqinterface'] = 'Libraries\ViewObjects\Javascript\InternalJQInterface.php';
$classMap['classes']['zn\viewobjects\internaljs'] = 'Libraries\ViewObjects\Javascript\InternalJS.php';
$classMap['classes']['js'] = 'Resources\Statics\ViewObjects\Javascript\InternalJS.php';
$classMap['classes']['zn\viewobjects\internaljsinterface'] = 'Libraries\ViewObjects\Javascript\InternalJSInterface.php';
$classMap['classes']['zn\viewobjects\internaljquery'] = 'Libraries\ViewObjects\Javascript\InternalJquery.php';
$classMap['classes']['jquery'] = 'Resources\Statics\ViewObjects\Javascript\InternalJquery.php';
$classMap['classes']['zn\viewobjects\internaljqueryinterface'] = 'Libraries\ViewObjects\Javascript\InternalJqueryInterface.php';
$classMap['classes']['zn\viewobjects\internalscript'] = 'Libraries\ViewObjects\Javascript\InternalScript.php';
$classMap['classes']['script'] = 'Resources\Statics\ViewObjects\Javascript\InternalScript.php';
$classMap['classes']['zn\viewobjects\internalscriptinterface'] = 'Libraries\ViewObjects\Javascript\InternalScriptInterface.php';
$classMap['classes']['zn\viewobjects\jquerytrait'] = 'Libraries\ViewObjects\Javascript\JqueryTrait.php';
$classMap['classes']['zn\viewobjects\jqueryunittest'] = 'Libraries\ViewObjects\Javascript\JqueryUnitTest.php';
$classMap['classes']['zn\viewobjects\scriptunittest'] = 'Libraries\ViewObjects\Javascript\ScriptUnitTest.php';
$classMap['classes']['zn\viewobjects\internalpagination'] = 'Libraries\ViewObjects\Pagination\InternalPagination.php';
$classMap['classes']['pagination'] = 'Resources\Statics\ViewObjects\Pagination\InternalPagination.php';
$classMap['classes']['zn\viewobjects\internalpaginationinterface'] = 'Libraries\ViewObjects\Pagination\InternalPaginationInterface.php';
$classMap['classes']['zn\viewobjects\internalpaginationpropertiesinterface'] = 'Libraries\ViewObjects\Pagination\InternalPaginationPropertiesInterface.php';
$classMap['classes']['zn\viewobjects\internalpaginationpropertiestrait'] = 'Libraries\ViewObjects\Pagination\InternalPaginationPropertiesTrait.php';
$classMap['classes']['zn\viewobjects\paginationunittest'] = 'Libraries\ViewObjects\Pagination\PaginationUnitTest.php';
$classMap['classes']['zn\viewobjects\sheet\helpers\animation'] = 'Libraries\ViewObjects\Sheet\Helpers\Animation.php';
$classMap['classes']['zn\viewobjects\sheet\helpers\animationinterface'] = 'Libraries\ViewObjects\Sheet\Helpers\AnimationInterface.php';
$classMap['classes']['zn\viewobjects\sheet\helpers\manipulation'] = 'Libraries\ViewObjects\Sheet\Helpers\Manipulation.php';
$classMap['classes']['zn\viewobjects\sheet\helpers\manipulationinterface'] = 'Libraries\ViewObjects\Sheet\Helpers\ManipulationInterface.php';
$classMap['classes']['zn\viewobjects\sheet\helpers\shadow'] = 'Libraries\ViewObjects\Sheet\Helpers\Shadow.php';
$classMap['classes']['zn\viewobjects\sheet\helpers\shadowinterface'] = 'Libraries\ViewObjects\Sheet\Helpers\ShadowInterface.php';
$classMap['classes']['zn\viewobjects\sheet\helpers\transform'] = 'Libraries\ViewObjects\Sheet\Helpers\Transform.php';
$classMap['classes']['zn\viewobjects\sheet\helpers\transforminterface'] = 'Libraries\ViewObjects\Sheet\Helpers\TransformInterface.php';
$classMap['classes']['zn\viewobjects\sheet\helpers\transition'] = 'Libraries\ViewObjects\Sheet\Helpers\Transition.php';
$classMap['classes']['zn\viewobjects\sheet\helpers\transitioninterface'] = 'Libraries\ViewObjects\Sheet\Helpers\TransitionInterface.php';
$classMap['classes']['zn\viewobjects\internalsheet'] = 'Libraries\ViewObjects\Sheet\InternalSheet.php';
$classMap['classes']['sheet'] = 'Resources\Statics\ViewObjects\Sheet\InternalSheet.php';
$classMap['classes']['zn\viewobjects\internalsheetinterface'] = 'Libraries\ViewObjects\Sheet\InternalSheetInterface.php';
$classMap['classes']['zn\viewobjects\internalstyle'] = 'Libraries\ViewObjects\Sheet\InternalStyle.php';
$classMap['classes']['style'] = 'Resources\Statics\ViewObjects\Sheet\InternalStyle.php';
$classMap['classes']['zn\viewobjects\internalstyleinterface'] = 'Libraries\ViewObjects\Sheet\InternalStyleInterface.php';
$classMap['classes']['zn\viewobjects\sheettrait'] = 'Libraries\ViewObjects\Sheet\SheetTrait.php';
$classMap['classes']['zn\viewobjects\sheetunittest'] = 'Libraries\ViewObjects\Sheet\SheetUnitTest.php';
$classMap['classes']['zn\viewobjects\styleunittest'] = 'Libraries\ViewObjects\Sheet\StyleUnitTest.php';
$classMap['classes']['zn\viewobjects\templatewizard'] = 'Libraries\ViewObjects\TemplateWizard\TemplateWizard.php';
$classMap['classes']['zn\viewobjects\templatewizardinterface'] = 'Libraries\ViewObjects\TemplateWizard\TemplateWizardInterface.php';
$classMap['classes']['zn\viewobjects\templatewizardunittest'] = 'Libraries\ViewObjects\TemplateWizard\TemplateWizardUnitTest.php';
$classMap['classes']['zn\viewobjects\view\validation\exception\invalidargumentexception'] = 'Libraries\ViewObjects\Validation\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\viewobjects\view\internalvalidate'] = 'Libraries\ViewObjects\Validation\InternalValidate.php';
$classMap['classes']['validate'] = 'Resources\Statics\ViewObjects\Validation\InternalValidate.php';
$classMap['classes']['zn\viewobjects\view\internalvalidateinterface'] = 'Libraries\ViewObjects\Validation\InternalValidateInterface.php';
$classMap['classes']['zn\viewobjects\view\internalvalidation'] = 'Libraries\ViewObjects\Validation\InternalValidation.php';
$classMap['classes']['validation'] = 'Resources\Statics\ViewObjects\Validation\InternalValidation.php';
$classMap['classes']['zn\viewobjects\view\internalvalidationinterface'] = 'Libraries\ViewObjects\Validation\InternalValidationInterface.php';
$classMap['classes']['zn\viewobjects\view\internalvalidationpropertiestrait'] = 'Libraries\ViewObjects\Validation\InternalValidationPropertiesTrait.php';
$classMap['classes']['zn\viewobjects\view\internalvalidator'] = 'Libraries\ViewObjects\Validation\InternalValidator.php';
$classMap['classes']['validator'] = 'Resources\Statics\ViewObjects\Validation\InternalValidator.php';
$classMap['classes']['zn\viewobjects\view\internalvalidatorinterface'] = 'Libraries\ViewObjects\Validation\InternalValidatorInterface.php';
$classMap['classes']['zn\viewobjects\view\validateunittest'] = 'Libraries\ViewObjects\Validation\ValidateUnitTest.php';
$classMap['classes']['zn\viewobjects\view\validationunittest'] = 'Libraries\ViewObjects\Validation\ValidationUnitTest.php';
$classMap['classes']['zn\viewobjects\view\validatorunittest'] = 'Libraries\ViewObjects\Validation\ValidatorUnitTest.php';
$classMap['classes']['zn\viewobjects\view\html\exception\invalidargumentexception'] = 'Libraries\ViewObjects\View\Exception\InvalidArgumentException.php';
$classMap['classes']['zn\viewobjects\view\formelementstrait'] = 'Libraries\ViewObjects\View\FormElementsTrait.php';
$classMap['classes']['zn\viewobjects\view\formunittest'] = 'Libraries\ViewObjects\View\FormUnitTest.php';
$classMap['classes']['zn\viewobjects\view\htmlelementstrait'] = 'Libraries\ViewObjects\View\HTMLElementsTrait.php';
$classMap['classes']['zn\viewobjects\view\abstracts\htmlhelpersabstract'] = 'Libraries\ViewObjects\View\HTMLHelpersAbstract.php';
$classMap['classes']['zn\viewobjects\view\htmlunittest'] = 'Libraries\ViewObjects\View\HTMLUnitTest.php';
$classMap['classes']['zn\viewobjects\view\html\helpers\lists'] = 'Libraries\ViewObjects\View\Helpers\List.php';
$classMap['classes']['zn\viewobjects\view\html\helpers\table'] = 'Libraries\ViewObjects\View\Helpers\Table.php';
$classMap['classes']['zn\viewobjects\view\internalform'] = 'Libraries\ViewObjects\View\InternalForm.php';
$classMap['classes']['form'] = 'Resources\Statics\ViewObjects\View\InternalForm.php';
$classMap['classes']['zn\viewobjects\view\internalforminterface'] = 'Libraries\ViewObjects\View\InternalFormInterface.php';
$classMap['classes']['zn\viewobjects\view\internalhtml'] = 'Libraries\ViewObjects\View\InternalHTML.php';
$classMap['classes']['html'] = 'Resources\Statics\ViewObjects\View\InternalHTML.php';
$classMap['classes']['zn\viewobjects\view\internalhtmlinterface'] = 'Libraries\ViewObjects\View\InternalHTMLInterface.php';
$classMap['classes']['zn\viewobjects\view\viewcommoninterface'] = 'Libraries\ViewObjects\View\ViewCommonInterface.php';
$classMap['classes']['zn\viewobjects\view\viewcommontrait'] = 'Libraries\ViewObjects\View\ViewCommonTrait.php';
$classMap['classes']['project\commands\example'] = 'Commands\Example.php';
$classMap['namespaces']['zn\cryptography\cryptomapping'] = 'cryptomapping';
$classMap['namespaces']['zn\cryptography\cryptounittest'] = 'cryptounittest';
$classMap['namespaces']['zn\cryptography\drivers\hashdriver'] = 'hashdriver';
$classMap['namespaces']['zn\cryptography\drivers\mcryptdriver'] = 'mcryptdriver';
$classMap['namespaces']['zn\cryptography\drivers\mhashdriver'] = 'mhashdriver';
$classMap['namespaces']['zn\cryptography\drivers\openssldriver'] = 'openssldriver';
$classMap['namespaces']['zn\cryptography\drivers\phashdriver'] = 'phashdriver';
$classMap['namespaces']['zn\cryptography\internalcrypto'] = 'internalcrypto';
$classMap['namespaces']['zn\cryptography\internalcryptointerface'] = 'internalcryptointerface';
$classMap['namespaces']['zn\cryptography\encode\encodeextends'] = 'encodeextends';
$classMap['namespaces']['zn\cryptography\encodeunittest'] = 'encodeunittest';
$classMap['namespaces']['zn\cryptography\encode\goldenalgorithm'] = 'goldenalgorithm';
$classMap['namespaces']['zn\cryptography\encode\goldenalgorithminterface'] = 'goldenalgorithminterface';
$classMap['namespaces']['zn\cryptography\internalencode'] = 'internalencode';
$classMap['namespaces']['zn\cryptography\internalencodeinterface'] = 'internalencodeinterface';
$classMap['namespaces']['zn\cryptography\encode\randompassword'] = 'randompassword';
$classMap['namespaces']['zn\cryptography\encode\randompasswordinterface'] = 'randompasswordinterface';
$classMap['namespaces']['zn\cryptography\encode\superalgorithm'] = 'superalgorithm';
$classMap['namespaces']['zn\cryptography\encode\superalgorithminterface'] = 'superalgorithminterface';
$classMap['namespaces']['zn\cryptography\encode\type'] = 'type';
$classMap['namespaces']['zn\cryptography\encode\typeinterface'] = 'typeinterface';
$classMap['namespaces']['zn\cryptography\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\datatypes\arrays\addelement'] = 'addelement';
$classMap['namespaces']['zn\datatypes\arrays\addelementinterface'] = 'addelementinterface';
$classMap['namespaces']['zn\datatypes\arraysunittest'] = 'arraysunittest';
$classMap['namespaces']['zn\datatypes\arrays\casing'] = 'casing';
$classMap['namespaces']['zn\datatypes\arrays\casinginterface'] = 'casinginterface';
$classMap['namespaces']['zn\datatypes\internalcollection'] = 'internalcollection';
$classMap['namespaces']['zn\datatypes\collectioninterface'] = 'collectioninterface';
$classMap['namespaces']['zn\datatypes\arrays\each'] = 'each';
$classMap['namespaces']['zn\datatypes\arrays\eachinterface'] = 'eachinterface';
$classMap['namespaces']['zn\datatypes\arrays\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\datatypes\arrays\exception\logicexception'] = 'logicexception';
$classMap['namespaces']['zn\datatypes\arrays\excluding'] = 'excluding';
$classMap['namespaces']['zn\datatypes\arrays\excludinginterface'] = 'excludinginterface';
$classMap['namespaces']['zn\datatypes\arrays\force'] = 'force';
$classMap['namespaces']['zn\datatypes\arrays\forceinterface'] = 'forceinterface';
$classMap['namespaces']['zn\datatypes\arrays\getelement'] = 'getelement';
$classMap['namespaces']['zn\datatypes\arrays\getelementinterface'] = 'getelementinterface';
$classMap['namespaces']['zn\datatypes\arrays\including'] = 'including';
$classMap['namespaces']['zn\datatypes\arrays\includinginterface'] = 'includinginterface';
$classMap['namespaces']['zn\datatypes\internalarrays'] = 'internalarrays';
$classMap['namespaces']['zn\datatypes\internalarraysinterface'] = 'internalarraysinterface';
$classMap['namespaces']['zn\datatypes\arrays\keyvalue'] = 'keyvalue';
$classMap['namespaces']['zn\datatypes\arrays\keyvalueinterface'] = 'keyvalueinterface';
$classMap['namespaces']['zn\datatypes\arrays\multiplekey'] = 'multiplekey';
$classMap['namespaces']['zn\datatypes\arrays\multiplekeyinterface'] = 'multiplekeyinterface';
$classMap['namespaces']['zn\datatypes\arrays\removeelement'] = 'removeelement';
$classMap['namespaces']['zn\datatypes\arrays\removeelementinterface'] = 'removeelementinterface';
$classMap['namespaces']['zn\datatypes\arrays\sort'] = 'sort';
$classMap['namespaces']['zn\datatypes\arrays\sortinterface'] = 'sortinterface';
$classMap['namespaces']['zn\datatypes\charsunittest'] = 'charsunittest';
$classMap['namespaces']['zn\datatypes\chars\exception\undefinedmethodexception'] = 'undefinedmethodexception';
$classMap['namespaces']['zn\datatypes\internalchars'] = 'internalchars';
$classMap['namespaces']['zn\datatypes\internalcharsinterface'] = 'internalcharsinterface';
$classMap['namespaces']['zn\datatypes\classesunittest'] = 'classesunittest';
$classMap['namespaces']['zn\datatypes\classes\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\datatypes\internalclasses'] = 'internalclasses';
$classMap['namespaces']['zn\datatypes\internalclassesinterface'] = 'internalclassesinterface';
$classMap['namespaces']['zn\datatypes\filtersunittest'] = 'filtersunittest';
$classMap['namespaces']['zn\datatypes\internalfilters'] = 'internalfilters';
$classMap['namespaces']['zn\datatypes\internalfiltersinterface'] = 'internalfiltersinterface';
$classMap['namespaces']['zn\datatypes\functions\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\datatypes\functionsunittest'] = 'functionsunittest';
$classMap['namespaces']['zn\datatypes\internalfunctions'] = 'internalfunctions';
$classMap['namespaces']['zn\datatypes\internalfunctionsinterface'] = 'internalfunctionsinterface';
$classMap['namespaces']['zn\datatypes\json\decode'] = 'decode';
$classMap['namespaces']['zn\datatypes\json\decodeinterface'] = 'decodeinterface';
$classMap['namespaces']['zn\datatypes\json\encode'] = 'encode';
$classMap['namespaces']['zn\datatypes\json\encodeinterface'] = 'encodeinterface';
$classMap['namespaces']['zn\datatypes\json\errorinfo'] = 'errorinfo';
$classMap['namespaces']['zn\datatypes\json\errorinfointerface'] = 'errorinfointerface';
$classMap['namespaces']['zn\datatypes\json\exception\jsonerrorexception'] = 'jsonerrorexception';
$classMap['namespaces']['zn\datatypes\internaljson'] = 'internaljson';
$classMap['namespaces']['zn\datatypes\internaljsoninterface'] = 'internaljsoninterface';
$classMap['namespaces']['zn\datatypes\jsonunittest'] = 'jsonunittest';
$classMap['namespaces']['zn\datatypes\objects'] = 'objects';
$classMap['namespaces']['zn\datatypes\internalregex'] = 'internalregex';
$classMap['namespaces']['zn\datatypes\internalregexinterface'] = 'internalregexinterface';
$classMap['namespaces']['zn\datatypes\regexunittest'] = 'regexunittest';
$classMap['namespaces']['zn\datatypes\separator\decode'] = 'decode';
$classMap['namespaces']['zn\datatypes\separator\decodeinterface'] = 'decodeinterface';
$classMap['namespaces']['zn\datatypes\separator\encode'] = 'encode';
$classMap['namespaces']['zn\datatypes\separator\encodeinterface'] = 'encodeinterface';
$classMap['namespaces']['zn\datatypes\internalseparator'] = 'internalseparator';
$classMap['namespaces']['zn\datatypes\internalseparatorinterface'] = 'internalseparatorinterface';
$classMap['namespaces']['zn\datatypes\separator\separatorextends'] = 'separatorextends';
$classMap['namespaces']['zn\datatypes\separatorunittest'] = 'separatorunittest';
$classMap['namespaces']['zn\datatypes\internalserial'] = 'internalserial';
$classMap['namespaces']['zn\datatypes\internalserialinterface'] = 'internalserialinterface';
$classMap['namespaces']['zn\datatypes\serialunittest'] = 'serialunittest';
$classMap['namespaces']['zn\datatypes\strings\casing'] = 'casing';
$classMap['namespaces']['zn\datatypes\strings\casinginterface'] = 'casinginterface';
$classMap['namespaces']['zn\datatypes\internalstack'] = 'internalstack';
$classMap['namespaces']['zn\datatypes\internalstackinterface'] = 'internalstackinterface';
$classMap['namespaces']['zn\datatypes\internalstrings'] = 'internalstrings';
$classMap['namespaces']['zn\datatypes\internalstringsinterface'] = 'internalstringsinterface';
$classMap['namespaces']['zn\datatypes\strings\search'] = 'search';
$classMap['namespaces']['zn\datatypes\strings\searchinterface'] = 'searchinterface';
$classMap['namespaces']['zn\datatypes\strings\security'] = 'security';
$classMap['namespaces']['zn\datatypes\strings\securityinterface'] = 'securityinterface';
$classMap['namespaces']['zn\datatypes\stringsunittest'] = 'stringsunittest';
$classMap['namespaces']['zn\datatypes\strings\substitution'] = 'substitution';
$classMap['namespaces']['zn\datatypes\strings\substitutioninterface'] = 'substitutioninterface';
$classMap['namespaces']['zn\datatypes\strings\transform'] = 'transform';
$classMap['namespaces']['zn\datatypes\strings\transforminterface'] = 'transforminterface';
$classMap['namespaces']['zn\datatypes\strings\trim'] = 'trim';
$classMap['namespaces']['zn\datatypes\strings\triminterface'] = 'triminterface';
$classMap['namespaces']['zn\datatypes\vars\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\datatypes\internalvars'] = 'internalvars';
$classMap['namespaces']['zn\datatypes\internalvarsinterface'] = 'internalvarsinterface';
$classMap['namespaces']['zn\datatypes\varsunittest'] = 'varsunittest';
$classMap['namespaces']['zn\datatypes\xml\builder'] = 'builder';
$classMap['namespaces']['zn\datatypes\xml\builderinterface'] = 'builderinterface';
$classMap['namespaces']['zn\datatypes\xml\check'] = 'check';
$classMap['namespaces']['zn\datatypes\xml\checkinterface'] = 'checkinterface';
$classMap['namespaces']['zn\datatypes\xml\exception\filenotfoundexception'] = 'filenotfoundexception';
$classMap['namespaces']['zn\datatypes\internalxml'] = 'internalxml';
$classMap['namespaces']['zn\datatypes\internalxmlinterface'] = 'internalxmlinterface';
$classMap['namespaces']['zn\datatypes\xml\loader'] = 'loader';
$classMap['namespaces']['zn\datatypes\xml\loaderinterface'] = 'loaderinterface';
$classMap['namespaces']['zn\datatypes\xml\parser'] = 'parser';
$classMap['namespaces']['zn\datatypes\xml\parserinterface'] = 'parserinterface';
$classMap['namespaces']['zn\datatypes\xml\save'] = 'save';
$classMap['namespaces']['zn\datatypes\xml\saveinterface'] = 'saveinterface';
$classMap['namespaces']['zn\datatypes\xmlunittest'] = 'xmlunittest';
$classMap['namespaces']['zn\database\connection'] = 'connection';
$classMap['namespaces']['zn\database\connectioninterface'] = 'connectioninterface';
$classMap['namespaces']['zn\database\dbunittest'] = 'dbunittest';
$classMap['namespaces']['zn\database\internaldb'] = 'internaldb';
$classMap['namespaces']['zn\database\internaldbinterface'] = 'internaldbinterface';
$classMap['namespaces']['zn\database\db\traits\functionstrait'] = 'functionstrait';
$classMap['namespaces']['zn\database\db\traits\statementstrait'] = 'statementstrait';
$classMap['namespaces']['zn\database\db\traits\variabletypestrait'] = 'variabletypestrait';
$classMap['namespaces']['zn\database\dbforgeunittest'] = 'dbforgeunittest';
$classMap['namespaces']['zn\database\internaldbforge'] = 'internaldbforge';
$classMap['namespaces']['zn\database\internaldbforgeinterface'] = 'internaldbforgeinterface';
$classMap['namespaces']['zn\database\dbtoolunittest'] = 'dbtoolunittest';
$classMap['namespaces']['zn\database\internaldbtool'] = 'internaldbtool';
$classMap['namespaces']['zn\database\internaldbtoolinterface'] = 'internaldbtoolinterface';
$classMap['namespaces']['zn\database\dbtriggerunittest'] = 'dbtriggerunittest';
$classMap['namespaces']['zn\database\internaldbtrigger'] = 'internaldbtrigger';
$classMap['namespaces']['zn\database\internaldbtriggerinterface'] = 'internaldbtriggerinterface';
$classMap['namespaces']['zn\database\dbuserunittest'] = 'dbuserunittest';
$classMap['namespaces']['zn\database\internaldbuser'] = 'internaldbuser';
$classMap['namespaces']['zn\database\internaldbuserinterface'] = 'internaldbuserinterface';
$classMap['namespaces']['zn\database\abstracts\driverconnectionmappingabstract'] = 'driverconnectionmappingabstract';
$classMap['namespaces']['zn\database\driverextends'] = 'driverextends';
$classMap['namespaces']['zn\database\driverforge'] = 'driverforge';
$classMap['namespaces']['zn\database\drivertool'] = 'drivertool';
$classMap['namespaces']['zn\database\drivertrigger'] = 'drivertrigger';
$classMap['namespaces']['zn\database\driveruser'] = 'driveruser';
$classMap['namespaces']['zn\database\drivers\mysqlidriver'] = 'mysqlidriver';
$classMap['namespaces']['zn\database\drivers\mysqliforge'] = 'mysqliforge';
$classMap['namespaces']['zn\database\drivers\mysqlitool'] = 'mysqlitool';
$classMap['namespaces']['zn\database\drivers\mysqlitrigger'] = 'mysqlitrigger';
$classMap['namespaces']['zn\database\drivers\mysqliuser'] = 'mysqliuser';
$classMap['namespaces']['zn\database\drivers\odbcforge'] = 'odbcforge';
$classMap['namespaces']['zn\database\drivers\odbctool'] = 'odbctool';
$classMap['namespaces']['zn\database\drivers\odbctrigger'] = 'odbctrigger';
$classMap['namespaces']['zn\database\drivers\odbcuser'] = 'odbcuser';
$classMap['namespaces']['zn\database\drivers\odbcdriver'] = 'odbcdriver';
$classMap['namespaces']['zn\database\drivers\oracledriver'] = 'oracledriver';
$classMap['namespaces']['zn\database\drivers\oracleforge'] = 'oracleforge';
$classMap['namespaces']['zn\database\drivers\oracletool'] = 'oracletool';
$classMap['namespaces']['zn\database\drivers\oracletrigger'] = 'oracletrigger';
$classMap['namespaces']['zn\database\drivers\oracleuser'] = 'oracleuser';
$classMap['namespaces']['zn\database\drivers\pdo\driverinterface'] = 'driverinterface';
$classMap['namespaces']['zn\database\drivers\pdo\drivers\pdomysqldriver'] = 'pdomysqldriver';
$classMap['namespaces']['zn\database\drivers\pdo\drivers\pdoodbcdriver'] = 'pdoodbcdriver';
$classMap['namespaces']['zn\database\drivers\pdo\drivers\pdopostgresdriver'] = 'pdopostgresdriver';
$classMap['namespaces']['zn\database\drivers\pdo\drivers\pdosqlserverdriver'] = 'pdosqlserverdriver';
$classMap['namespaces']['zn\database\drivers\pdo\drivers\pdosqlitedriver'] = 'pdosqlitedriver';
$classMap['namespaces']['zn\database\drivers\pdodriver'] = 'pdodriver';
$classMap['namespaces']['zn\database\drivers\pdoforge'] = 'pdoforge';
$classMap['namespaces']['zn\database\drivers\pdotool'] = 'pdotool';
$classMap['namespaces']['zn\database\drivers\pdotrigger'] = 'pdotrigger';
$classMap['namespaces']['zn\database\drivers\pdouser'] = 'pdouser';
$classMap['namespaces']['zn\database\drivers\postgresdriver'] = 'postgresdriver';
$classMap['namespaces']['zn\database\drivers\postgresforge'] = 'postgresforge';
$classMap['namespaces']['zn\database\drivers\postgrestool'] = 'postgrestool';
$classMap['namespaces']['zn\database\drivers\postgrestrigger'] = 'postgrestrigger';
$classMap['namespaces']['zn\database\drivers\postgresuser'] = 'postgresuser';
$classMap['namespaces']['zn\database\drivers\sqlserverforge'] = 'sqlserverforge';
$classMap['namespaces']['zn\database\drivers\sqlservertool'] = 'sqlservertool';
$classMap['namespaces']['zn\database\drivers\sqlservertrigger'] = 'sqlservertrigger';
$classMap['namespaces']['zn\database\drivers\sqlserveruser'] = 'sqlserveruser';
$classMap['namespaces']['zn\database\drivers\sqlserverdriver'] = 'sqlserverdriver';
$classMap['namespaces']['zn\database\drivers\sqlitedriver'] = 'sqlitedriver';
$classMap['namespaces']['zn\database\drivers\sqliteforge'] = 'sqliteforge';
$classMap['namespaces']['zn\database\drivers\sqlitetool'] = 'sqlitetool';
$classMap['namespaces']['zn\database\drivers\sqlitetrigger'] = 'sqlitetrigger';
$classMap['namespaces']['zn\database\drivers\sqliteuser'] = 'sqliteuser';
$classMap['namespaces']['zn\database\exception\databaseerrorexception'] = 'databaseerrorexception';
$classMap['namespaces']['zn\database\exception\duplicatecheckexception'] = 'duplicatecheckexception';
$classMap['namespaces']['zn\database\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\database\internalmigration'] = 'internalmigration';
$classMap['namespaces']['zn\database\internalmigrationinterface'] = 'internalmigrationinterface';
$classMap['namespaces']['zn\database\migrationunittest'] = 'migrationunittest';
$classMap['namespaces']['zn\database\properties'] = 'properties';
$classMap['namespaces']['zn\datetime\datetimecommon'] = 'datetimecommon';
$classMap['namespaces']['zn\datetime\dateunittest'] = 'dateunittest';
$classMap['namespaces']['zn\datetime\internaldate'] = 'internaldate';
$classMap['namespaces']['zn\datetime\internaldatetimecommoninterface'] = 'internaldatetimecommoninterface';
$classMap['namespaces']['zn\datetime\internaldatetimeinterval'] = 'internaldatetimeinterval';
$classMap['namespaces']['zn\datetime\internaltime'] = 'internaltime';
$classMap['namespaces']['zn\datetime\carbon\carbon'] = 'carbon';
$classMap['namespaces']['zn\datetime\carbon\carboninterval'] = 'carboninterval';
$classMap['namespaces']['zn\datetime\carbon\exceptions\invaliddateexception'] = 'invaliddateexception';
$classMap['namespaces']['symfony\component\translation\interval'] = 'interval';
$classMap['namespaces']['symfony\component\translation\loader\arrayloader'] = 'arrayloader';
$classMap['namespaces']['symfony\component\translation\loader\loaderinterface'] = 'loaderinterface';
$classMap['namespaces']['symfony\component\translation\messagecatalogue'] = 'messagecatalogue';
$classMap['namespaces']['symfony\component\translation\messagecatalogueinterface'] = 'messagecatalogueinterface';
$classMap['namespaces']['symfony\component\translation\messageselector'] = 'messageselector';
$classMap['namespaces']['symfony\component\translation\metadataawareinterface'] = 'metadataawareinterface';
$classMap['namespaces']['symfony\component\translation\pluralizationrules'] = 'pluralizationrules';
$classMap['namespaces']['symfony\component\translation\translator'] = 'translator';
$classMap['namespaces']['symfony\component\translation\translatorbaginterface'] = 'translatorbaginterface';
$classMap['namespaces']['symfony\component\translation\translatorinterface'] = 'translatorinterface';
$classMap['namespaces']['zn\datetime\timeunittest'] = 'timeunittest';
$classMap['namespaces']['zn\encodingsupport\gtunittest'] = 'gtunittest';
$classMap['namespaces']['zn\encodingsupport\internalgt'] = 'internalgt';
$classMap['namespaces']['zn\encodingsupport\internalgtinterface'] = 'internalgtinterface';
$classMap['namespaces']['zn\encodingsupport\iconv\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\encodingsupport\ivunittest'] = 'ivunittest';
$classMap['namespaces']['zn\encodingsupport\internaliv'] = 'internaliv';
$classMap['namespaces']['zn\encodingsupport\internalivinterface'] = 'internalivinterface';
$classMap['namespaces']['zn\encodingsupport\multibyte\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\encodingsupport\internalmb'] = 'internalmb';
$classMap['namespaces']['zn\encodingsupport\internalmbinterface'] = 'internalmbinterface';
$classMap['namespaces']['zn\encodingsupport\mbunittest'] = 'mbunittest';
$classMap['namespaces']['zn\encodingsupport\multilanguage\delete'] = 'delete';
$classMap['namespaces']['zn\encodingsupport\multilanguage\deleteinterface'] = 'deleteinterface';
$classMap['namespaces']['zn\encodingsupport\multilanguage\factory'] = 'factory';
$classMap['namespaces']['zn\encodingsupport\multilanguage\grid'] = 'grid';
$classMap['namespaces']['zn\encodingsupport\multilanguage\gridinterface'] = 'gridinterface';
$classMap['namespaces']['zn\encodingsupport\multilanguage\insert'] = 'insert';
$classMap['namespaces']['zn\encodingsupport\multilanguage\insertinterface'] = 'insertinterface';
$classMap['namespaces']['zn\encodingsupport\internalml'] = 'internalml';
$classMap['namespaces']['zn\encodingsupport\internalmlinterface'] = 'internalmlinterface';
$classMap['namespaces']['zn\encodingsupport\multilanguage\mlextends'] = 'mlextends';
$classMap['namespaces']['zn\encodingsupport\mlunittest'] = 'mlunittest';
$classMap['namespaces']['zn\encodingsupport\multilanguage\select'] = 'select';
$classMap['namespaces']['zn\encodingsupport\multilanguage\selectinterface'] = 'selectinterface';
$classMap['namespaces']['zn\encodingsupport\multilanguage\update'] = 'update';
$classMap['namespaces']['zn\errorhandling\internalerrors'] = 'internalerrors';
$classMap['namespaces']['zn\errorhandling\internalerrorsinterface'] = 'internalerrorsinterface';
$classMap['namespaces']['zn\errorhandling\internalexceptions'] = 'internalexceptions';
$classMap['namespaces']['zn\errorhandling\internalexceptionsinterface'] = 'internalexceptionsinterface';
$classMap['namespaces']['zn\filesystem\excel\arraytoxls'] = 'arraytoxls';
$classMap['namespaces']['zn\filesystem\excel\arraytoxlsinterface'] = 'arraytoxlsinterface';
$classMap['namespaces']['zn\filesystem\excel\csvtoarray'] = 'csvtoarray';
$classMap['namespaces']['zn\filesystem\excel\csvtoarrayinterface'] = 'csvtoarrayinterface';
$classMap['namespaces']['zn\filesystem\excelunittest'] = 'excelunittest';
$classMap['namespaces']['zn\filesystem\internalexcel'] = 'internalexcel';
$classMap['namespaces']['zn\filesystem\internalexcelinterface'] = 'internalexcelinterface';
$classMap['namespaces']['zn\filesystem\exception\fileallreadyexception'] = 'fileallreadyexception';
$classMap['namespaces']['zn\filesystem\exception\filenotfoundexception'] = 'filenotfoundexception';
$classMap['namespaces']['zn\filesystem\exception\fileremotedownloadexception'] = 'fileremotedownloadexception';
$classMap['namespaces']['zn\filesystem\exception\fileremoteuploadexception'] = 'fileremoteuploadexception';
$classMap['namespaces']['zn\filesystem\exception\folderallreadyexception'] = 'folderallreadyexception';
$classMap['namespaces']['zn\filesystem\exception\folderchangedirexception'] = 'folderchangedirexception';
$classMap['namespaces']['zn\filesystem\exception\folderchangenameexception'] = 'folderchangenameexception';
$classMap['namespaces']['zn\filesystem\exception\foldernotfoundexception'] = 'foldernotfoundexception';
$classMap['namespaces']['zn\filesystem\exception\ioexception'] = 'ioexception';
$classMap['namespaces']['zn\filesystem\ftp\connection'] = 'connection';
$classMap['namespaces']['zn\filesystem\ftp\connectioninterface'] = 'connectioninterface';
$classMap['namespaces']['zn\filesystem\ftpunittest'] = 'ftpunittest';
$classMap['namespaces']['zn\filesystem\ftp\forge'] = 'forge';
$classMap['namespaces']['zn\filesystem\ftp\forgeinterface'] = 'forgeinterface';
$classMap['namespaces']['zn\filesystem\ftp\info'] = 'info';
$classMap['namespaces']['zn\filesystem\ftp\infointerface'] = 'infointerface';
$classMap['namespaces']['zn\filesystem\internalftp'] = 'internalftp';
$classMap['namespaces']['zn\filesystem\internalftpinterface'] = 'internalftpinterface';
$classMap['namespaces']['zn\filesystem\ftp\transfer'] = 'transfer';
$classMap['namespaces']['zn\filesystem\ftp\transferinterface'] = 'transferinterface';
$classMap['namespaces']['zn\filesystem\file\content'] = 'content';
$classMap['namespaces']['zn\filesystem\file\contentinterface'] = 'contentinterface';
$classMap['namespaces']['zn\filesystem\file\extension'] = 'extension';
$classMap['namespaces']['zn\filesystem\file\extensioninterface'] = 'extensioninterface';
$classMap['namespaces']['zn\filesystem\file\factory'] = 'factory';
$classMap['namespaces']['zn\filesystem\fileunittest'] = 'fileunittest';
$classMap['namespaces']['zn\filesystem\file\forge'] = 'forge';
$classMap['namespaces']['zn\filesystem\file\forgeinterface'] = 'forgeinterface';
$classMap['namespaces']['zn\filesystem\file\info'] = 'info';
$classMap['namespaces']['zn\filesystem\file\infointerface'] = 'infointerface';
$classMap['namespaces']['zn\filesystem\internalfile'] = 'internalfile';
$classMap['namespaces']['zn\filesystem\internalfileinterface'] = 'internalfileinterface';
$classMap['namespaces']['zn\filesystem\internalupload'] = 'internalupload';
$classMap['namespaces']['zn\filesystem\internaluploadinterface'] = 'internaluploadinterface';
$classMap['namespaces']['zn\filesystem\file\loader'] = 'loader';
$classMap['namespaces']['zn\filesystem\file\loaderinterface'] = 'loaderinterface';
$classMap['namespaces']['zn\filesystem\file\transfer'] = 'transfer';
$classMap['namespaces']['zn\filesystem\file\transferinterface'] = 'transferinterface';
$classMap['namespaces']['zn\filesystem\filesystemfactory'] = 'filesystemfactory';
$classMap['namespaces']['zn\filesystem\folder\factory'] = 'factory';
$classMap['namespaces']['zn\filesystem\folder\filelist'] = 'filelist';
$classMap['namespaces']['zn\filesystem\folder\filelistinterface'] = 'filelistinterface';
$classMap['namespaces']['zn\filesystem\folderunittest'] = 'folderunittest';
$classMap['namespaces']['zn\filesystem\folder\forge'] = 'forge';
$classMap['namespaces']['zn\filesystem\folder\forgeinterface'] = 'forgeinterface';
$classMap['namespaces']['zn\filesystem\folder\info'] = 'info';
$classMap['namespaces']['zn\filesystem\folder\infointerface'] = 'infointerface';
$classMap['namespaces']['zn\filesystem\internalfolder'] = 'internalfolder';
$classMap['namespaces']['zn\filesystem\internalfolderinterface'] = 'internalfolderinterface';
$classMap['namespaces']['zn\filesystem\generateunittest'] = 'generateunittest';
$classMap['namespaces']['zn\filesystem\internalgenerate'] = 'internalgenerate';
$classMap['namespaces']['zn\filesystem\internalgenerateinterface'] = 'internalgenerateinterface';
$classMap['namespaces']['zn\helpers\cleanerunittest'] = 'cleanerunittest';
$classMap['namespaces']['zn\helpers\cleaner\data'] = 'data';
$classMap['namespaces']['zn\helpers\cleaner\datainterface'] = 'datainterface';
$classMap['namespaces']['zn\helpers\cleaner\exception\logicexception'] = 'logicexception';
$classMap['namespaces']['zn\helpers\internalcleaner'] = 'internalcleaner';
$classMap['namespaces']['zn\helpers\internalcleanerinterface'] = 'internalcleanerinterface';
$classMap['namespaces']['zn\helpers\converterunittest'] = 'converterunittest';
$classMap['namespaces']['zn\helpers\converter\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\helpers\converter\exception\logicexception'] = 'logicexception';
$classMap['namespaces']['zn\helpers\internalconverter'] = 'internalconverter';
$classMap['namespaces']['zn\helpers\internalconverterinterface'] = 'internalconverterinterface';
$classMap['namespaces']['zn\helpers\converter\numeric'] = 'numeric';
$classMap['namespaces']['zn\helpers\converter\numericinterface'] = 'numericinterface';
$classMap['namespaces']['zn\helpers\converter\text'] = 'text';
$classMap['namespaces']['zn\helpers\converter\textinterface'] = 'textinterface';
$classMap['namespaces']['zn\helpers\converter\unicode'] = 'unicode';
$classMap['namespaces']['zn\helpers\converter\unicodeinterface'] = 'unicodeinterface';
$classMap['namespaces']['zn\helpers\converter\variabletypes'] = 'variabletypes';
$classMap['namespaces']['zn\helpers\converter\variabletypesinterface'] = 'variabletypesinterface';
$classMap['namespaces']['zn\helpers\limiter\char'] = 'char';
$classMap['namespaces']['zn\helpers\limiter\commoninterface'] = 'commoninterface';
$classMap['namespaces']['zn\helpers\internallimiter'] = 'internallimiter';
$classMap['namespaces']['zn\helpers\internallimiterinterface'] = 'internallimiterinterface';
$classMap['namespaces']['zn\helpers\limiterunittest'] = 'limiterunittest';
$classMap['namespaces']['zn\helpers\limiter\word'] = 'word';
$classMap['namespaces']['zn\helpers\internallogger'] = 'internallogger';
$classMap['namespaces']['zn\helpers\internalloggerinterface'] = 'internalloggerinterface';
$classMap['namespaces']['zn\helpers\loggerunittest'] = 'loggerunittest';
$classMap['namespaces']['zn\helpers\rounder\average'] = 'average';
$classMap['namespaces']['zn\helpers\rounder\commoninterface'] = 'commoninterface';
$classMap['namespaces']['zn\helpers\rounder\down'] = 'down';
$classMap['namespaces']['zn\helpers\rounder\exception\logicexception'] = 'logicexception';
$classMap['namespaces']['zn\helpers\internalrounder'] = 'internalrounder';
$classMap['namespaces']['zn\helpers\internalrounderinterface'] = 'internalrounderinterface';
$classMap['namespaces']['zn\helpers\rounderunittest'] = 'rounderunittest';
$classMap['namespaces']['zn\helpers\rounder\up'] = 'up';
$classMap['namespaces']['zn\helpers\searcher\data'] = 'data';
$classMap['namespaces']['zn\helpers\searcher\datainterface'] = 'datainterface';
$classMap['namespaces']['zn\helpers\searcher\database'] = 'database';
$classMap['namespaces']['zn\helpers\searcher\databaseinterface'] = 'databaseinterface';
$classMap['namespaces']['zn\helpers\internalsearcher'] = 'internalsearcher';
$classMap['namespaces']['zn\helpers\internalsearcherinterface'] = 'internalsearcherinterface';
$classMap['namespaces']['zn\helpers\searcherunittest'] = 'searcherunittest';
$classMap['namespaces']['zn\encodingsupport\imageprocessing\gd\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\imageprocessing\gdunittest'] = 'gdunittest';
$classMap['namespaces']['zn\imageprocessing\internalgd'] = 'internalgd';
$classMap['namespaces']['zn\imageprocessing\internalgdinterface'] = 'internalgdinterface';
$classMap['namespaces']['zn\imageprocessing\image\calculateprosize'] = 'calculateprosize';
$classMap['namespaces']['zn\imageprocessing\image\calculateprosizeinterface'] = 'calculateprosizeinterface';
$classMap['namespaces']['zn\encodingsupport\imageprocessing\image\exception\imagenotfoundexception'] = 'imagenotfoundexception';
$classMap['namespaces']['zn\encodingsupport\imageprocessing\image\exception\invalidimagefileexception'] = 'invalidimagefileexception';
$classMap['namespaces']['zn\imageprocessing\imageunittest'] = 'imageunittest';
$classMap['namespaces']['zn\imageprocessing\internalimage'] = 'internalimage';
$classMap['namespaces']['zn\imageprocessing\internalimageinterface'] = 'internalimageinterface';
$classMap['namespaces']['zn\imageprocessing\internalthumb'] = 'internalthumb';
$classMap['namespaces']['zn\imageprocessing\internalthumbinterface'] = 'internalthumbinterface';
$classMap['namespaces']['zn\imageprocessing\image\renderimage'] = 'renderimage';
$classMap['namespaces']['zn\imageprocessing\image\renderimageinterface'] = 'renderimageinterface';
$classMap['namespaces']['zn\imageprocessing\thumbunittest'] = 'thumbunittest';
$classMap['namespaces']['zn\individualstructures\benchmarkunittest'] = 'benchmarkunittest';
$classMap['namespaces']['zn\individualstructures\benchmark\elapsedtime'] = 'elapsedtime';
$classMap['namespaces']['zn\individualstructures\benchmark\elapsedtimeinterface'] = 'elapsedtimeinterface';
$classMap['namespaces']['zn\individualstructures\benchmark\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\individualstructures\benchmark\fileusage'] = 'fileusage';
$classMap['namespaces']['zn\individualstructures\benchmark\fileusageinterface'] = 'fileusageinterface';
$classMap['namespaces']['zn\individualstructures\internalbenchmark'] = 'internalbenchmark';
$classMap['namespaces']['zn\individualstructures\internalbenchmarkinterface'] = 'internalbenchmarkinterface';
$classMap['namespaces']['zn\individualstructures\benchmark\memoryusage'] = 'memoryusage';
$classMap['namespaces']['zn\individualstructures\benchmark\memoryusageinterface'] = 'memoryusageinterface';
$classMap['namespaces']['zn\individualstructures\benchmark\properties'] = 'properties';
$classMap['namespaces']['zn\individualstructures\benchmark\run'] = 'run';
$classMap['namespaces']['zn\individualstructures\benchmark\runinterface'] = 'runinterface';
$classMap['namespaces']['zn\individualstructures\benchmark\testing'] = 'testing';
$classMap['namespaces']['zn\individualstructures\benchmark\testinginterface'] = 'testinginterface';
$classMap['namespaces']['zn\individualstructures\bufferunittest'] = 'bufferunittest';
$classMap['namespaces']['zn\individualstructures\buffer\callback'] = 'callback';
$classMap['namespaces']['zn\individualstructures\buffer\callbackinterface'] = 'callbackinterface';
$classMap['namespaces']['zn\individualstructures\buffer\delete'] = 'delete';
$classMap['namespaces']['zn\individualstructures\buffer\deleteinterface'] = 'deleteinterface';
$classMap['namespaces']['zn\individualstructures\buffer\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\individualstructures\buffer\file'] = 'file';
$classMap['namespaces']['zn\individualstructures\buffer\fileinterface'] = 'fileinterface';
$classMap['namespaces']['zn\individualstructures\buffer\insert'] = 'insert';
$classMap['namespaces']['zn\individualstructures\buffer\insertinterface'] = 'insertinterface';
$classMap['namespaces']['zn\individualstructures\internalbuffer'] = 'internalbuffer';
$classMap['namespaces']['zn\individualstructures\internalbufferinterface'] = 'internalbufferinterface';
$classMap['namespaces']['zn\individualstructures\buffer\select'] = 'select';
$classMap['namespaces']['zn\individualstructures\buffer\selectinterface'] = 'selectinterface';
$classMap['namespaces']['zn\individualstructures\abstracts\cachedrivermappingabstract'] = 'cachedrivermappingabstract';
$classMap['namespaces']['zn\individualstructures\cacheunittest'] = 'cacheunittest';
$classMap['namespaces']['zn\individualstructures\cache\drivers\apcdriver'] = 'apcdriver';
$classMap['namespaces']['zn\individualstructures\cache\drivers\apcudriver'] = 'apcudriver';
$classMap['namespaces']['zn\individualstructures\cache\drivers\filedriver'] = 'filedriver';
$classMap['namespaces']['zn\individualstructures\cache\drivers\memcachedriver'] = 'memcachedriver';
$classMap['namespaces']['zn\individualstructures\cache\drivers\redisdriver'] = 'redisdriver';
$classMap['namespaces']['zn\individualstructures\cache\drivers\wincachedriver'] = 'wincachedriver';
$classMap['namespaces']['zn\individualstructures\internalcache'] = 'internalcache';
$classMap['namespaces']['zn\individualstructures\internalcacheinterface'] = 'internalcacheinterface';
$classMap['namespaces']['zn\individualstructures\cart\cartextends'] = 'cartextends';
$classMap['namespaces']['zn\individualstructures\cartunittest'] = 'cartunittest';
$classMap['namespaces']['zn\individualstructures\cart\delete'] = 'delete';
$classMap['namespaces']['zn\individualstructures\cart\deleteinterface'] = 'deleteinterface';
$classMap['namespaces']['zn\individualstructures\cart\insert'] = 'insert';
$classMap['namespaces']['zn\individualstructures\cart\insertinterface'] = 'insertinterface';
$classMap['namespaces']['zn\individualstructures\internalcart'] = 'internalcart';
$classMap['namespaces']['zn\individualstructures\internalcartinterface'] = 'internalcartinterface';
$classMap['namespaces']['zn\individualstructures\cart\money'] = 'money';
$classMap['namespaces']['zn\individualstructures\cart\moneyinterface'] = 'moneyinterface';
$classMap['namespaces']['zn\individualstructures\cart\properties'] = 'properties';
$classMap['namespaces']['zn\individualstructures\cart\select'] = 'select';
$classMap['namespaces']['zn\individualstructures\cart\selectinterface'] = 'selectinterface';
$classMap['namespaces']['zn\individualstructures\cart\total'] = 'total';
$classMap['namespaces']['zn\individualstructures\cart\totalinterface'] = 'totalinterface';
$classMap['namespaces']['zn\individualstructures\cart\update'] = 'update';
$classMap['namespaces']['zn\individualstructures\cart\updateinterface'] = 'updateinterface';
$classMap['namespaces']['zn\individualstructures\coalesceunittest'] = 'coalesceunittest';
$classMap['namespaces']['zn\individualstructures\compress\drivers\abstracts\compressdrivermappingabstract'] = 'compressdrivermappingabstract';
$classMap['namespaces']['zn\individualstructures\compressunittest'] = 'compressunittest';
$classMap['namespaces']['zn\individualstructures\compress\drivers\bzdriver'] = 'bzdriver';
$classMap['namespaces']['zn\individualstructures\compress\drivers\gzdriver'] = 'gzdriver';
$classMap['namespaces']['zn\individualstructures\compress\drivers\lzfdriver'] = 'lzfdriver';
$classMap['namespaces']['zn\individualstructures\compress\drivers\rardriver'] = 'rardriver';
$classMap['namespaces']['zn\individualstructures\compress\drivers\zipdriver'] = 'zipdriver';
$classMap['namespaces']['zn\individualstructures\compress\drivers\zlibdriver'] = 'zlibdriver';
$classMap['namespaces']['zn\individualstructures\compress\exception\filenotfoundexception'] = 'filenotfoundexception';
$classMap['namespaces']['zn\individualstructures\compress\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\individualstructures\internalcompress'] = 'internalcompress';
$classMap['namespaces']['zn\individualstructures\internalcompressinterface'] = 'internalcompressinterface';
$classMap['namespaces']['zn\individualstructures\isunittest'] = 'isunittest';
$classMap['namespaces']['zn\individualstructures\internalis'] = 'internalis';
$classMap['namespaces']['zn\individualstructures\internalisinterface'] = 'internalisinterface';
$classMap['namespaces']['zn\individualstructures\import\bootstrapextends'] = 'bootstrapextends';
$classMap['namespaces']['zn\individualstructures\import\bootstrapinterface'] = 'bootstrapinterface';
$classMap['namespaces']['zn\individualstructures\import\exception\filenotfoundexception'] = 'filenotfoundexception';
$classMap['namespaces']['zn\individualstructures\import\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\individualstructures\import\font'] = 'font';
$classMap['namespaces']['zn\individualstructures\import\handload'] = 'handload';
$classMap['namespaces']['zn\individualstructures\import\handloadinterface'] = 'handloadinterface';
$classMap['namespaces']['zn\individualstructures\importunittest'] = 'importunittest';
$classMap['namespaces']['zn\individualstructures\internalimport'] = 'internalimport';
$classMap['namespaces']['zn\individualstructures\internalimportinterface'] = 'internalimportinterface';
$classMap['namespaces']['zn\individualstructures\import\masterpage'] = 'masterpage';
$classMap['namespaces']['zn\individualstructures\import\masterpageinterface'] = 'masterpageinterface';
$classMap['namespaces']['zn\individualstructures\import\package'] = 'package';
$classMap['namespaces']['zn\individualstructures\import\packageinterface'] = 'packageinterface';
$classMap['namespaces']['zn\individualstructures\import\properties'] = 'properties';
$classMap['namespaces']['zn\individualstructures\import\script'] = 'script';
$classMap['namespaces']['zn\individualstructures\import\something'] = 'something';
$classMap['namespaces']['zn\individualstructures\import\somethinginterface'] = 'somethinginterface';
$classMap['namespaces']['zn\individualstructures\import\style'] = 'style';
$classMap['namespaces']['zn\individualstructures\import\template'] = 'template';
$classMap['namespaces']['zn\individualstructures\import\templateinterface'] = 'templateinterface';
$classMap['namespaces']['zn\individualstructures\import\view'] = 'view';
$classMap['namespaces']['zn\individualstructures\import\viewinterface'] = 'viewinterface';
$classMap['namespaces']['zn\individualstructures\internallang'] = 'internallang';
$classMap['namespaces']['zn\individualstructures\internallanginterface'] = 'internallanginterface';
$classMap['namespaces']['zn\individualstructures\langunittest'] = 'langunittest';
$classMap['namespaces']['zn\individualstructures\internaloutput'] = 'internaloutput';
$classMap['namespaces']['zn\individualstructures\internaloutputinterface'] = 'internaloutputinterface';
$classMap['namespaces']['zn\individualstructures\outputunittest'] = 'outputunittest';
$classMap['namespaces']['zn\individualstructures\internalpermission'] = 'internalpermission';
$classMap['namespaces']['zn\individualstructures\internalpermissioninterface'] = 'internalpermissioninterface';
$classMap['namespaces']['zn\individualstructures\permission\page'] = 'page';
$classMap['namespaces']['zn\individualstructures\permission\pageinterface'] = 'pageinterface';
$classMap['namespaces']['zn\individualstructures\permission\permissionextends'] = 'permissionextends';
$classMap['namespaces']['zn\individualstructures\permissionunittest'] = 'permissionunittest';
$classMap['namespaces']['zn\individualstructures\permission\process'] = 'process';
$classMap['namespaces']['zn\individualstructures\permission\processinterface'] = 'processinterface';
$classMap['namespaces']['zn\individualstructures\security\crosssiterequestforgery'] = 'crosssiterequestforgery';
$classMap['namespaces']['zn\individualstructures\security\crosssiterequestforgeryinterface'] = 'crosssiterequestforgeryinterface';
$classMap['namespaces']['zn\individualstructures\security\crosssitescripting'] = 'crosssitescripting';
$classMap['namespaces']['zn\individualstructures\security\crosssitescriptinginterface'] = 'crosssitescriptinginterface';
$classMap['namespaces']['zn\individualstructures\security\foreignchar'] = 'foreignchar';
$classMap['namespaces']['zn\individualstructures\security\foreigncharinterface'] = 'foreigncharinterface';
$classMap['namespaces']['zn\individualstructures\security\html'] = 'html';
$classMap['namespaces']['zn\individualstructures\security\htmlinterface'] = 'htmlinterface';
$classMap['namespaces']['zn\individualstructures\security\injection'] = 'injection';
$classMap['namespaces']['zn\individualstructures\security\injectioninterface'] = 'injectioninterface';
$classMap['namespaces']['zn\individualstructures\internalsecure'] = 'internalsecure';
$classMap['namespaces']['zn\individualstructures\internalsecureinterface'] = 'internalsecureinterface';
$classMap['namespaces']['zn\individualstructures\internalsecurity'] = 'internalsecurity';
$classMap['namespaces']['zn\individualstructures\internalsecurityinterface'] = 'internalsecurityinterface';
$classMap['namespaces']['zn\individualstructures\security\nastycode'] = 'nastycode';
$classMap['namespaces']['zn\individualstructures\security\nastycodeinterface'] = 'nastycodeinterface';
$classMap['namespaces']['zn\individualstructures\security\php'] = 'php';
$classMap['namespaces']['zn\individualstructures\security\phpinterface'] = 'phpinterface';
$classMap['namespaces']['zn\individualstructures\security\script'] = 'script';
$classMap['namespaces']['zn\individualstructures\security\scriptinterface'] = 'scriptinterface';
$classMap['namespaces']['zn\individualstructures\security\securityextends'] = 'securityextends';
$classMap['namespaces']['zn\individualstructures\securityunittest'] = 'securityunittest';
$classMap['namespaces']['zn\individualstructures\socialite\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\individualstructures\internalsocialite'] = 'internalsocialite';
$classMap['namespaces']['zn\individualstructures\internalsocialiteinterface'] = 'internalsocialiteinterface';
$classMap['namespaces']['zn\individualstructures\socialiteunittest'] = 'socialiteunittest';
$classMap['namespaces']['hybridauth\adapter\abstractadapter'] = 'abstractadapter';
$classMap['namespaces']['hybridauth\adapter\adapterinterface'] = 'adapterinterface';
$classMap['namespaces']['hybridauth\adapter\datastoretrait'] = 'datastoretrait';
$classMap['namespaces']['hybridauth\adapter\oauth1'] = 'oauth1';
$classMap['namespaces']['hybridauth\adapter\oauth2'] = 'oauth2';
$classMap['namespaces']['hybridauth\adapter\openid'] = 'openid';
$classMap['namespaces']['hybridauth\data\collection'] = 'collection';
$classMap['namespaces']['hybridauth\data\parser'] = 'parser';
$classMap['namespaces']['hybridauth\exception\authorizationdeniedexception'] = 'authorizationdeniedexception';
$classMap['namespaces']['hybridauth\exception\badmethodcallexception'] = 'badmethodcallexception';
$classMap['namespaces']['hybridauth\exception\exception'] = 'exception';
$classMap['namespaces']['hybridauth\exception\exceptioninterface'] = 'exceptioninterface';
$classMap['namespaces']['hybridauth\exception\httpclientfailureexception'] = 'httpclientfailureexception';
$classMap['namespaces']['hybridauth\exception\httprequestfailedexception'] = 'httprequestfailedexception';
$classMap['namespaces']['hybridauth\exception\invalidaccesstokenexception'] = 'invalidaccesstokenexception';
$classMap['namespaces']['hybridauth\exception\invalidapplicationcredentialsexception'] = 'invalidapplicationcredentialsexception';
$classMap['namespaces']['hybridauth\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['hybridauth\exception\invalidauthorizationcodeexception'] = 'invalidauthorizationcodeexception';
$classMap['namespaces']['hybridauth\exception\invalidauthorizationstateexception'] = 'invalidauthorizationstateexception';
$classMap['namespaces']['hybridauth\exception\invalidoauthtokenexception'] = 'invalidoauthtokenexception';
$classMap['namespaces']['hybridauth\exception\invalidopenididentifierexception'] = 'invalidopenididentifierexception';
$classMap['namespaces']['hybridauth\exception\notimplementedexception'] = 'notimplementedexception';
$classMap['namespaces']['hybridauth\exception\runtimeexception'] = 'runtimeexception';
$classMap['namespaces']['hybridauth\exception\unexpectedapiresponseexception'] = 'unexpectedapiresponseexception';
$classMap['namespaces']['hybridauth\exception\unexpectedvalueexception'] = 'unexpectedvalueexception';
$classMap['namespaces']['hybridauth\httpclient\curl'] = 'curl';
$classMap['namespaces']['hybridauth\httpclient\guzzle'] = 'guzzle';
$classMap['namespaces']['hybridauth\httpclient\httpclientinterface'] = 'httpclientinterface';
$classMap['namespaces']['hybridauth\httpclient\util'] = 'util';
$classMap['namespaces']['hybridauth\hybridauth'] = 'hybridauth';
$classMap['namespaces']['hybridauth\logger\logger'] = 'logger';
$classMap['namespaces']['hybridauth\logger\loggerinterface'] = 'loggerinterface';
$classMap['namespaces']['hybridauth\logger\psr3loggerwrapper'] = 'psr3loggerwrapper';
$classMap['namespaces']['hybridauth\provider\aolopenid'] = 'aolopenid';
$classMap['namespaces']['hybridauth\provider\bitbucket'] = 'bitbucket';
$classMap['namespaces']['hybridauth\provider\discord'] = 'discord';
$classMap['namespaces']['hybridauth\provider\disqus'] = 'disqus';
$classMap['namespaces']['hybridauth\provider\dribbble'] = 'dribbble';
$classMap['namespaces']['hybridauth\provider\facebook'] = 'facebook';
$classMap['namespaces']['hybridauth\provider\foursquare'] = 'foursquare';
$classMap['namespaces']['hybridauth\provider\github'] = 'github';
$classMap['namespaces']['hybridauth\provider\gitlab'] = 'gitlab';
$classMap['namespaces']['hybridauth\provider\google'] = 'google';
$classMap['namespaces']['hybridauth\provider\instagram'] = 'instagram';
$classMap['namespaces']['hybridauth\provider\linkedin'] = 'linkedin';
$classMap['namespaces']['hybridauth\provider\odnoklassniki'] = 'odnoklassniki';
$classMap['namespaces']['hybridauth\provider\openid'] = 'openid';
$classMap['namespaces']['hybridauth\provider\paypalopenid'] = 'paypalopenid';
$classMap['namespaces']['hybridauth\provider\reddit'] = 'reddit';
$classMap['namespaces']['hybridauth\provider\stackexchange'] = 'stackexchange';
$classMap['namespaces']['hybridauth\provider\stackexchangeopenid'] = 'stackexchangeopenid';
$classMap['namespaces']['hybridauth\provider\steam'] = 'steam';
$classMap['namespaces']['hybridauth\provider\tumblr'] = 'tumblr';
$classMap['namespaces']['hybridauth\provider\twitchtv'] = 'twitchtv';
$classMap['namespaces']['hybridauth\provider\twitter'] = 'twitter';
$classMap['namespaces']['hybridauth\provider\vkontakte'] = 'vkontakte';
$classMap['namespaces']['hybridauth\provider\windowslive'] = 'windowslive';
$classMap['namespaces']['hybridauth\provider\wordpress'] = 'wordpress';
$classMap['namespaces']['hybridauth\provider\yahoo'] = 'yahoo';
$classMap['namespaces']['hybridauth\provider\yahooopenid'] = 'yahooopenid';
$classMap['namespaces']['hybridauth\storage\session'] = 'session';
$classMap['namespaces']['hybridauth\storage\storageinterface'] = 'storageinterface';
$classMap['namespaces']['hybridauth\thirdparty\oauth\oauthconsumer'] = 'oauthconsumer';
$classMap['namespaces']['hybridauth\thirdparty\oauth\oauthrequest'] = 'oauthrequest';
$classMap['namespaces']['hybridauth\thirdparty\oauth\oauthsignaturemethod'] = 'oauthsignaturemethod';
$classMap['namespaces']['hybridauth\thirdparty\oauth\oauthsignaturemethodhmacsha1'] = 'oauthsignaturemethodhmacsha1';
$classMap['namespaces']['hybridauth\thirdparty\oauth\oauthutil'] = 'oauthutil';
$classMap['namespaces']['hybridauth\thirdparty\openid\errorexception'] = 'errorexception';
$classMap['namespaces']['hybridauth\user\activity'] = 'activity';
$classMap['namespaces']['hybridauth\user\contact'] = 'contact';
$classMap['namespaces']['hybridauth\user\profile'] = 'profile';
$classMap['namespaces']['zn\individualstructures\internalsupport'] = 'internalsupport';
$classMap['namespaces']['zn\individualstructures\internalsupportinterface'] = 'internalsupportinterface';
$classMap['namespaces']['zn\individualstructures\supportunittest'] = 'supportunittest';
$classMap['namespaces']['zn\individualstructures\user\data'] = 'data';
$classMap['namespaces']['zn\individualstructures\user\datainterface'] = 'datainterface';
$classMap['namespaces']['zn\individualstructures\user\factory'] = 'factory';
$classMap['namespaces']['zn\individualstructures\user\forgotpassword'] = 'forgotpassword';
$classMap['namespaces']['zn\individualstructures\user\forgotpasswordinterface'] = 'forgotpasswordinterface';
$classMap['namespaces']['zn\individualstructures\user\ip'] = 'ip';
$classMap['namespaces']['zn\individualstructures\user\ipinterface'] = 'ipinterface';
$classMap['namespaces']['zn\individualstructures\user\information'] = 'information';
$classMap['namespaces']['zn\individualstructures\user\informationinterface'] = 'informationinterface';
$classMap['namespaces']['zn\individualstructures\internaluser'] = 'internaluser';
$classMap['namespaces']['zn\individualstructures\internaluserinterface'] = 'internaluserinterface';
$classMap['namespaces']['zn\individualstructures\user\login'] = 'login';
$classMap['namespaces']['zn\individualstructures\user\logininterface'] = 'logininterface';
$classMap['namespaces']['zn\individualstructures\user\logout'] = 'logout';
$classMap['namespaces']['zn\individualstructures\user\logoutinterface'] = 'logoutinterface';
$classMap['namespaces']['zn\individualstructures\user\properties'] = 'properties';
$classMap['namespaces']['zn\individualstructures\user\register'] = 'register';
$classMap['namespaces']['zn\individualstructures\user\registerinterface'] = 'registerinterface';
$classMap['namespaces']['zn\individualstructures\user\sendemail'] = 'sendemail';
$classMap['namespaces']['zn\individualstructures\user\sendemailinterface'] = 'sendemailinterface';
$classMap['namespaces']['zn\individualstructures\user\update'] = 'update';
$classMap['namespaces']['zn\individualstructures\user\updateinterface'] = 'updateinterface';
$classMap['namespaces']['zn\individualstructures\user\userextends'] = 'userextends';
$classMap['namespaces']['zn\individualstructures\userunittest'] = 'userunittest';
$classMap['namespaces']['zn\requirements\abilities\exception\undefinedconstexception'] = 'undefinedconstexception';
$classMap['namespaces']['zn\requirements\controllers\basecontroller'] = 'basecontroller';
$classMap['namespaces']['zn\requirements\controllers\clcontroller'] = 'clcontroller';
$classMap['namespaces']['zn\requirements\controllers\callcontroller'] = 'callcontroller';
$classMap['namespaces']['project\controllers\controller'] = 'controller';
$classMap['namespaces']['zn\requirements\controllers\factorycontroller'] = 'factorycontroller';
$classMap['namespaces']['zn\requirements\controllers\unittestcontroller'] = 'unittestcontroller';
$classMap['namespaces']['zn\requirements\internaldebug'] = 'internaldebug';
$classMap['namespaces']['zn\requirements\internaldebuginterface'] = 'internaldebuginterface';
$classMap['namespaces']['zn\requirements\models\grandmodel'] = 'grandmodel';
$classMap['namespaces']['zn\requirements\models\model'] = 'model';
$classMap['namespaces']['zn\classes\autoloader'] = 'autoloader';
$classMap['namespaces']['project\commands\command'] = 'command';
$classMap['namespaces']['zn\classes\config'] = 'config';
$classMap['namespaces']['external\commands\command'] = 'command';
$classMap['namespaces']['zn\requirements\system\factory'] = 'factory';
$classMap['namespaces']['zn\in'] = 'in';
$classMap['namespaces']['zn\requirements\system\internalznunittest'] = 'internalznunittest';
$classMap['namespaces']['zn\core\kernel'] = 'kernel';
$classMap['namespaces']['zn\requirements\system\restoration'] = 'restoration';
$classMap['namespaces']['zn\requirements\system\staticaccess'] = 'staticaccess';
$classMap['namespaces']['zn\core\structure'] = 'structure';
$classMap['namespaces']['project\controllers\zn'] = 'zn';
$classMap['namespaces']['zn\requirements\system\zerocore'] = 'zerocore';
$classMap['namespaces']['zn\services\remote\curlunittest'] = 'curlunittest';
$classMap['namespaces']['zn\services\remote\curl\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\services\remote\internalcurl'] = 'internalcurl';
$classMap['namespaces']['zn\services\remote\internalcurlinterface'] = 'internalcurlinterface';
$classMap['namespaces']['zn\services\remote\crontabunittest'] = 'crontabunittest';
$classMap['namespaces']['zn\services\remote\crontab\exception\invalidtimeformatexception'] = 'invalidtimeformatexception';
$classMap['namespaces']['zn\services\remote\internalcrontab'] = 'internalcrontab';
$classMap['namespaces']['zn\services\remote\internalcrontabinterface'] = 'internalcrontabinterface';
$classMap['namespaces']['zn\services\remote\internalcrontabintervalinterface'] = 'internalcrontabintervalinterface';
$classMap['namespaces']['zn\services\remote\internalcrontabintervaltrait'] = 'internalcrontabintervaltrait';
$classMap['namespaces']['zn\services\remote\email\drivers\imapdriver'] = 'imapdriver';
$classMap['namespaces']['zn\services\remote\email\drivers\maildriver'] = 'maildriver';
$classMap['namespaces']['zn\services\remote\email\drivers\pipedriver'] = 'pipedriver';
$classMap['namespaces']['zn\services\remote\email\drivers\smtpdriver'] = 'smtpdriver';
$classMap['namespaces']['zn\services\remote\email\drivers\senddriver'] = 'senddriver';
$classMap['namespaces']['zn\services\remote\abstracts\emailmappingabstract'] = 'emailmappingabstract';
$classMap['namespaces']['zn\services\remote\emailunittest'] = 'emailunittest';
$classMap['namespaces']['zn\services\remote\email\exception\attachmentmissingexception'] = 'attachmentmissingexception';
$classMap['namespaces']['zn\services\remote\email\exception\attachmentunreadableexception'] = 'attachmentunreadableexception';
$classMap['namespaces']['zn\services\remote\email\exception\failuresendemailexception'] = 'failuresendemailexception';
$classMap['namespaces']['zn\services\remote\email\exception\ioexception'] = 'ioexception';
$classMap['namespaces']['zn\services\remote\email\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\services\remote\email\exception\nofromexception'] = 'nofromexception';
$classMap['namespaces']['zn\services\remote\email\exception\smtpauthexception'] = 'smtpauthexception';
$classMap['namespaces']['zn\services\remote\email\exception\smtpconnectexception'] = 'smtpconnectexception';
$classMap['namespaces']['zn\services\remote\email\exception\smtpdatafailureexception'] = 'smtpdatafailureexception';
$classMap['namespaces']['zn\services\remote\email\exception\smtpemptyhostnameexception'] = 'smtpemptyhostnameexception';
$classMap['namespaces']['zn\services\remote\email\exception\smtpemptyuserpasswordexception'] = 'smtpemptyuserpasswordexception';
$classMap['namespaces']['zn\services\remote\email\exception\smtpfailedloginexception'] = 'smtpfailedloginexception';
$classMap['namespaces']['zn\services\remote\internalemail'] = 'internalemail';
$classMap['namespaces']['zn\services\remote\internalemailinterface'] = 'internalemailinterface';
$classMap['namespaces']['zn\services\remote\internalprocessor'] = 'internalprocessor';
$classMap['namespaces']['zn\services\remote\internalprocessorinterface'] = 'internalprocessorinterface';
$classMap['namespaces']['zn\services\remote\processorunittest'] = 'processorunittest';
$classMap['namespaces']['zn\services\remote\remotecommon'] = 'remotecommon';
$classMap['namespaces']['zn\services\remote\remotecommoninterface'] = 'remotecommoninterface';
$classMap['namespaces']['zn\services\remote\internalrestful'] = 'internalrestful';
$classMap['namespaces']['zn\services\remote\internalrestfulinterface'] = 'internalrestfulinterface';
$classMap['namespaces']['zn\services\remote\restfulunittest'] = 'restfulunittest';
$classMap['namespaces']['zn\services\remote\ssh\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\services\remote\internalssh'] = 'internalssh';
$classMap['namespaces']['zn\services\remote\internalsshinterface'] = 'internalsshinterface';
$classMap['namespaces']['zn\services\remote\sshunittest'] = 'sshunittest';
$classMap['namespaces']['zn\services\request\internalredirect'] = 'internalredirect';
$classMap['namespaces']['zn\services\request\internalredirectinterface'] = 'internalredirectinterface';
$classMap['namespaces']['zn\services\request\redirectunittest'] = 'redirectunittest';
$classMap['namespaces']['zn\services\request\internalrequest'] = 'internalrequest';
$classMap['namespaces']['zn\services\request\internalrequestinterface'] = 'internalrequestinterface';
$classMap['namespaces']['zn\services\request\requestunittest'] = 'requestunittest';
$classMap['namespaces']['zn\services\request\internalroute'] = 'internalroute';
$classMap['namespaces']['zn\services\request\internalrouteinterface'] = 'internalrouteinterface';
$classMap['namespaces']['zn\services\request\routeunittest'] = 'routeunittest';
$classMap['namespaces']['zn\services\request\internaluri'] = 'internaluri';
$classMap['namespaces']['zn\services\request\internaluriinterface'] = 'internaluriinterface';
$classMap['namespaces']['zn\services\request\uriunittest'] = 'uriunittest';
$classMap['namespaces']['zn\services\request\internalurl'] = 'internalurl';
$classMap['namespaces']['zn\services\request\internalurlinterface'] = 'internalurlinterface';
$classMap['namespaces']['zn\services\request\urlunittest'] = 'urlunittest';
$classMap['namespaces']['zn\services\response\http\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\services\response\httpunittest'] = 'httpunittest';
$classMap['namespaces']['zn\services\response\internalhttp'] = 'internalhttp';
$classMap['namespaces']['zn\services\response\internalhttpinterface'] = 'internalhttpinterface';
$classMap['namespaces']['zn\services\response\internalmethod'] = 'internalmethod';
$classMap['namespaces']['zn\services\response\internalmethodinterface'] = 'internalmethodinterface';
$classMap['namespaces']['zn\services\response\methodunittest'] = 'methodunittest';
$classMap['namespaces']['zn\services\response\http\exception\runtimeexception'] = 'runtimeexception';
$classMap['namespaces']['zn\services\response\http\exception\socketexception'] = 'socketexception';
$classMap['namespaces']['zn\services\response\internalnet'] = 'internalnet';
$classMap['namespaces']['zn\services\response\internalnetinterface'] = 'internalnetinterface';
$classMap['namespaces']['zn\services\response\netunittest'] = 'netunittest';
$classMap['namespaces']['zn\services\response\internalserver'] = 'internalserver';
$classMap['namespaces']['zn\services\response\internalserverinterface'] = 'internalserverinterface';
$classMap['namespaces']['zn\services\response\serverunittest'] = 'serverunittest';
$classMap['namespaces']['zn\services\response\cookieunittest'] = 'cookieunittest';
$classMap['namespaces']['zn\services\response\sessioncookie\exception\setcookieexception'] = 'setcookieexception';
$classMap['namespaces']['zn\services\response\internalcookie'] = 'internalcookie';
$classMap['namespaces']['zn\services\response\internalcookieinterface'] = 'internalcookieinterface';
$classMap['namespaces']['zn\services\response\internalsession'] = 'internalsession';
$classMap['namespaces']['zn\services\response\internalsessioninterface'] = 'internalsessioninterface';
$classMap['namespaces']['zn\services\response\sessioncookiecommoninterface'] = 'sessioncookiecommoninterface';
$classMap['namespaces']['zn\services\response\sessioncookiecommontrait'] = 'sessioncookiecommontrait';
$classMap['namespaces']['zn\services\response\sessionunittest'] = 'sessionunittest';
$classMap['namespaces']['zn\viewobjects\cdnunittest'] = 'cdnunittest';
$classMap['namespaces']['zn\viewobjects\internalcdn'] = 'internalcdn';
$classMap['namespaces']['zn\viewobjects\internalcdninterface'] = 'internalcdninterface';
$classMap['namespaces']['zn\viewobjects\calendarunittest'] = 'calendarunittest';
$classMap['namespaces']['zn\viewobjects\internalcalendar'] = 'internalcalendar';
$classMap['namespaces']['zn\viewobjects\internalcalendarinterface'] = 'internalcalendarinterface';
$classMap['namespaces']['zn\viewobjects\captchaunittest'] = 'captchaunittest';
$classMap['namespaces']['zn\viewobjects\internalcaptcha'] = 'internalcaptcha';
$classMap['namespaces']['zn\viewobjects\internalcaptchainterface'] = 'internalcaptchainterface';
$classMap['namespaces']['zn\viewobjects\grids\dbgridunittest'] = 'dbgridunittest';
$classMap['namespaces']['zn\viewobjects\grids\exception\databaseerrorexception'] = 'databaseerrorexception';
$classMap['namespaces']['zn\viewobjects\grids\exception\nosearchexception'] = 'nosearchexception';
$classMap['namespaces']['zn\viewobjects\grids\exception\notableexception'] = 'notableexception';
$classMap['namespaces']['zn\viewobjects\grids\abstracts\gridabstract'] = 'gridabstract';
$classMap['namespaces']['zn\viewobjects\grids\internaldbgrid'] = 'internaldbgrid';
$classMap['namespaces']['zn\viewobjects\grids\internalmlgrid'] = 'internalmlgrid';
$classMap['namespaces']['zn\viewobjects\grids\mlgridunittest'] = 'mlgridunittest';
$classMap['namespaces']['zn\viewobjects\javascript\components\aceeditor'] = 'aceeditor';
$classMap['namespaces']['zn\viewobjects\javascript\components\aceeditorinterface'] = 'aceeditorinterface';
$classMap['namespaces']['zn\viewobjects\javascript\components\charts'] = 'charts';
$classMap['namespaces']['zn\viewobjects\javascript\components\chartsinterface'] = 'chartsinterface';
$classMap['namespaces']['zn\viewobjects\javascript\components\componentsextends'] = 'componentsextends';
$classMap['namespaces']['zn\viewobjects\javascript\components\datatables'] = 'datatables';
$classMap['namespaces']['zn\viewobjects\javascript\components\datatablesinterface'] = 'datatablesinterface';
$classMap['namespaces']['zn\viewobjects\javascript\components\datepicker'] = 'datepicker';
$classMap['namespaces']['zn\viewobjects\javascript\components\datepickerinterface'] = 'datepickerinterface';
$classMap['namespaces']['zn\viewobjects\javascript\components\dropdown'] = 'dropdown';
$classMap['namespaces']['zn\viewobjects\javascript\components\dropdowninterface'] = 'dropdowninterface';
$classMap['namespaces']['zn\viewobjects\javascript\components\flexslider'] = 'flexslider';
$classMap['namespaces']['zn\viewobjects\javascript\components\flexsliderinterface'] = 'flexsliderinterface';
$classMap['namespaces']['zn\viewobjects\javascript\components\form'] = 'form';
$classMap['namespaces']['zn\viewobjects\javascript\components\forminterface'] = 'forminterface';
$classMap['namespaces']['zn\viewobjects\javascript\components\gridsystem'] = 'gridsystem';
$classMap['namespaces']['zn\viewobjects\javascript\components\gridsysteminterface'] = 'gridsysteminterface';
$classMap['namespaces']['zn\viewobjects\javascript\components\modal'] = 'modal';
$classMap['namespaces']['zn\viewobjects\javascript\components\modalinterface'] = 'modalinterface';
$classMap['namespaces']['zn\viewobjects\javascript\components\pagination'] = 'pagination';
$classMap['namespaces']['zn\viewobjects\javascript\components\paginationinterface'] = 'paginationinterface';
$classMap['namespaces']['zn\viewobjects\javascript\components\select2'] = 'select2';
$classMap['namespaces']['zn\viewobjects\javascript\components\select2interface'] = 'select2interface';
$classMap['namespaces']['zn\viewobjects\javascript\components\tabs'] = 'tabs';
$classMap['namespaces']['zn\viewobjects\javascript\components\tabsinterface'] = 'tabsinterface';
$classMap['namespaces']['zn\viewobjects\javascript\helpers\action'] = 'action';
$classMap['namespaces']['zn\viewobjects\javascript\helpers\actioninterface'] = 'actioninterface';
$classMap['namespaces']['zn\viewobjects\javascript\helpers\ajax'] = 'ajax';
$classMap['namespaces']['zn\viewobjects\javascript\helpers\ajaxinterface'] = 'ajaxinterface';
$classMap['namespaces']['zn\viewobjects\javascript\helpers\animate'] = 'animate';
$classMap['namespaces']['zn\viewobjects\javascript\helpers\animateinterface'] = 'animateinterface';
$classMap['namespaces']['zn\viewobjects\javascript\helpers\event'] = 'event';
$classMap['namespaces']['zn\viewobjects\javascript\helpers\eventinterface'] = 'eventinterface';
$classMap['namespaces']['zn\viewobjects\internaljc'] = 'internaljc';
$classMap['namespaces']['zn\viewobjects\internaljq'] = 'internaljq';
$classMap['namespaces']['zn\viewobjects\internaljqinterface'] = 'internaljqinterface';
$classMap['namespaces']['zn\viewobjects\internaljs'] = 'internaljs';
$classMap['namespaces']['zn\viewobjects\internaljsinterface'] = 'internaljsinterface';
$classMap['namespaces']['zn\viewobjects\internaljquery'] = 'internaljquery';
$classMap['namespaces']['zn\viewobjects\internaljqueryinterface'] = 'internaljqueryinterface';
$classMap['namespaces']['zn\viewobjects\internalscript'] = 'internalscript';
$classMap['namespaces']['zn\viewobjects\internalscriptinterface'] = 'internalscriptinterface';
$classMap['namespaces']['zn\viewobjects\jquerytrait'] = 'jquerytrait';
$classMap['namespaces']['zn\viewobjects\jqueryunittest'] = 'jqueryunittest';
$classMap['namespaces']['zn\viewobjects\scriptunittest'] = 'scriptunittest';
$classMap['namespaces']['zn\viewobjects\internalpagination'] = 'internalpagination';
$classMap['namespaces']['zn\viewobjects\internalpaginationinterface'] = 'internalpaginationinterface';
$classMap['namespaces']['zn\viewobjects\internalpaginationpropertiesinterface'] = 'internalpaginationpropertiesinterface';
$classMap['namespaces']['zn\viewobjects\internalpaginationpropertiestrait'] = 'internalpaginationpropertiestrait';
$classMap['namespaces']['zn\viewobjects\paginationunittest'] = 'paginationunittest';
$classMap['namespaces']['zn\viewobjects\sheet\helpers\animation'] = 'animation';
$classMap['namespaces']['zn\viewobjects\sheet\helpers\animationinterface'] = 'animationinterface';
$classMap['namespaces']['zn\viewobjects\sheet\helpers\manipulation'] = 'manipulation';
$classMap['namespaces']['zn\viewobjects\sheet\helpers\manipulationinterface'] = 'manipulationinterface';
$classMap['namespaces']['zn\viewobjects\sheet\helpers\shadow'] = 'shadow';
$classMap['namespaces']['zn\viewobjects\sheet\helpers\shadowinterface'] = 'shadowinterface';
$classMap['namespaces']['zn\viewobjects\sheet\helpers\transform'] = 'transform';
$classMap['namespaces']['zn\viewobjects\sheet\helpers\transforminterface'] = 'transforminterface';
$classMap['namespaces']['zn\viewobjects\sheet\helpers\transition'] = 'transition';
$classMap['namespaces']['zn\viewobjects\sheet\helpers\transitioninterface'] = 'transitioninterface';
$classMap['namespaces']['zn\viewobjects\internalsheet'] = 'internalsheet';
$classMap['namespaces']['zn\viewobjects\internalsheetinterface'] = 'internalsheetinterface';
$classMap['namespaces']['zn\viewobjects\internalstyle'] = 'internalstyle';
$classMap['namespaces']['zn\viewobjects\internalstyleinterface'] = 'internalstyleinterface';
$classMap['namespaces']['zn\viewobjects\sheettrait'] = 'sheettrait';
$classMap['namespaces']['zn\viewobjects\sheetunittest'] = 'sheetunittest';
$classMap['namespaces']['zn\viewobjects\styleunittest'] = 'styleunittest';
$classMap['namespaces']['zn\viewobjects\templatewizard'] = 'templatewizard';
$classMap['namespaces']['zn\viewobjects\templatewizardinterface'] = 'templatewizardinterface';
$classMap['namespaces']['zn\viewobjects\templatewizardunittest'] = 'templatewizardunittest';
$classMap['namespaces']['zn\viewobjects\view\validation\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\viewobjects\view\internalvalidate'] = 'internalvalidate';
$classMap['namespaces']['zn\viewobjects\view\internalvalidateinterface'] = 'internalvalidateinterface';
$classMap['namespaces']['zn\viewobjects\view\internalvalidation'] = 'internalvalidation';
$classMap['namespaces']['zn\viewobjects\view\internalvalidationinterface'] = 'internalvalidationinterface';
$classMap['namespaces']['zn\viewobjects\view\internalvalidationpropertiestrait'] = 'internalvalidationpropertiestrait';
$classMap['namespaces']['zn\viewobjects\view\internalvalidator'] = 'internalvalidator';
$classMap['namespaces']['zn\viewobjects\view\internalvalidatorinterface'] = 'internalvalidatorinterface';
$classMap['namespaces']['zn\viewobjects\view\validateunittest'] = 'validateunittest';
$classMap['namespaces']['zn\viewobjects\view\validationunittest'] = 'validationunittest';
$classMap['namespaces']['zn\viewobjects\view\validatorunittest'] = 'validatorunittest';
$classMap['namespaces']['zn\viewobjects\view\html\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\viewobjects\view\formelementstrait'] = 'formelementstrait';
$classMap['namespaces']['zn\viewobjects\view\formunittest'] = 'formunittest';
$classMap['namespaces']['zn\viewobjects\view\htmlelementstrait'] = 'htmlelementstrait';
$classMap['namespaces']['zn\viewobjects\view\abstracts\htmlhelpersabstract'] = 'htmlhelpersabstract';
$classMap['namespaces']['zn\viewobjects\view\htmlunittest'] = 'htmlunittest';
$classMap['namespaces']['zn\viewobjects\view\html\helpers\lists'] = 'lists';
$classMap['namespaces']['zn\viewobjects\view\html\helpers\table'] = 'table';
$classMap['namespaces']['zn\viewobjects\view\internalform'] = 'internalform';
$classMap['namespaces']['zn\viewobjects\view\internalforminterface'] = 'internalforminterface';
$classMap['namespaces']['zn\viewobjects\view\internalhtml'] = 'internalhtml';
$classMap['namespaces']['zn\viewobjects\view\internalhtmlinterface'] = 'internalhtmlinterface';
$classMap['namespaces']['zn\viewobjects\view\viewcommoninterface'] = 'viewcommoninterface';
$classMap['namespaces']['zn\viewobjects\view\viewcommontrait'] = 'viewcommontrait';
$classMap['namespaces']['project\commands\example'] = 'example';
